[{"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\index.js":"1","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\ApolloProvider.js":"2","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\serviceWorker.js":"3","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\App.js":"4","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\Theme.js":"5","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\context\\auth.js":"6","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Sign-up.js":"7","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Login.js":"8","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\EndUserProfile.js":"9","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\AuthRoute.js":"10","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Footer.js":"11","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Content\\Article.js":"12","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Navbar.js":"13","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Content\\MyAuthors.js":"14","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Company\\Company.js":"15","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\profileSetting\\ProfileSetting.js":"16","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Content\\Draft.js":"17","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\profileSetting\\AccountSecurty.js":"18","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Portfolio.js":"19","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Home.js":"20","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\storage\\index.ts":"21","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\UI\\messages.js":"22","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\util\\hooks.js":"23","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\homeGql.js":"24","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Auth\\authGql.js":"25","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Content\\ContentCards.js":"26","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\storage\\cache.ts":"27","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Company\\CompanyCard.js":"28","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\storage\\userConfig\\index.ts":"29","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\storage\\userConfig\\userConfigVar.ts":"30","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\storage\\userConfig\\saveUserConfig.ts":"31","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\storage\\userConfig\\initialUserConfig.ts":"32","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Content\\articleGql.js":"33","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Company\\edfitformport.js":"34","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Content\\draftsGql.js":"35","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Company\\inputformport.js":"36","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Editor.js":"37","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\util\\dummyData.js":"38","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Content\\commentGql.js":"39","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Company\\companyGql.js":"40","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\AnalystInfo.js":"41","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Content\\CommentComponents.js":"42","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\UserInfo.js":"43","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Company\\portfolioGql.js":"44"},{"size":520,"mtime":1613630748221,"results":"45","hashOfConfig":"46"},{"size":768,"mtime":1619032369148,"results":"47","hashOfConfig":"46"},{"size":4686,"mtime":1612258551962,"results":"48","hashOfConfig":"46"},{"size":2864,"mtime":1619032369156,"results":"49","hashOfConfig":"46"},{"size":430,"mtime":1618344981762,"results":"50","hashOfConfig":"46"},{"size":1794,"mtime":1619039079310,"results":"51","hashOfConfig":"46"},{"size":7241,"mtime":1616776164579,"results":"52","hashOfConfig":"46"},{"size":5836,"mtime":1619038697504,"results":"53","hashOfConfig":"46"},{"size":13036,"mtime":1619032369345,"results":"54","hashOfConfig":"46"},{"size":883,"mtime":1617189458314,"results":"55","hashOfConfig":"46"},{"size":3799,"mtime":1618344981766,"results":"56","hashOfConfig":"46"},{"size":11784,"mtime":1619039762033,"results":"57","hashOfConfig":"46"},{"size":10031,"mtime":1619032369212,"results":"58","hashOfConfig":"46"},{"size":4114,"mtime":1618344981773,"results":"59","hashOfConfig":"46"},{"size":7264,"mtime":1619037997937,"results":"60","hashOfConfig":"46"},{"size":12201,"mtime":1619032369386,"results":"61","hashOfConfig":"46"},{"size":8426,"mtime":1619044454024,"results":"62","hashOfConfig":"46"},{"size":26437,"mtime":1619032369375,"results":"63","hashOfConfig":"46"},{"size":10028,"mtime":1619037066812,"results":"64","hashOfConfig":"46"},{"size":7871,"mtime":1619032369354,"results":"65","hashOfConfig":"46"},{"size":45,"mtime":1619032369283,"results":"66","hashOfConfig":"46"},{"size":1089,"mtime":1616776164446,"results":"67","hashOfConfig":"46"},{"size":3610,"mtime":1619039552426,"results":"68","hashOfConfig":"46"},{"size":667,"mtime":1618345107156,"results":"69","hashOfConfig":"46"},{"size":1360,"mtime":1619038638606,"results":"70","hashOfConfig":"46"},{"size":4044,"mtime":1619032369203,"results":"71","hashOfConfig":"46"},{"size":1607,"mtime":1619043771167,"results":"72","hashOfConfig":"46"},{"size":19023,"mtime":1619037927942,"results":"73","hashOfConfig":"46"},{"size":253,"mtime":1619032369297,"results":"74","hashOfConfig":"46"},{"size":233,"mtime":1619032369318,"results":"75","hashOfConfig":"46"},{"size":194,"mtime":1619032369311,"results":"76","hashOfConfig":"46"},{"size":325,"mtime":1619039309416,"results":"77","hashOfConfig":"46"},{"size":2074,"mtime":1619032369243,"results":"78","hashOfConfig":"46"},{"size":4097,"mtime":1619032369180,"results":"79","hashOfConfig":"46"},{"size":1451,"mtime":1617219040129,"results":"80","hashOfConfig":"46"},{"size":3303,"mtime":1619032369187,"results":"81","hashOfConfig":"46"},{"size":4982,"mtime":1617730769126,"results":"82","hashOfConfig":"46"},{"size":698,"mtime":1618344981770,"results":"83","hashOfConfig":"46"},{"size":436,"mtime":1617265806443,"results":"84","hashOfConfig":"46"},{"size":796,"mtime":1619037112270,"results":"85","hashOfConfig":"46"},{"size":4394,"mtime":1619039763339,"results":"86","hashOfConfig":"46"},{"size":675,"mtime":1619032369195,"results":"87","hashOfConfig":"46"},{"size":5955,"mtime":1619032369220,"results":"88","hashOfConfig":"46"},{"size":1055,"mtime":1619037133817,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},"x4pgb5",{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"93"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"93"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"93"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"93"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"93"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"93"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"93"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"93"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"93"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"93"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"93"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"93"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"93"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"93"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"93"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"93"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"93"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"93"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"93"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"93"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"93"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"93"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"93"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"93"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\index.js",["205","206"],"\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\n\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport ApolloProvider from \"./ApolloProvider\";\r\n\r\n\r\nReactDOM.render(ApolloProvider, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n",["207","208"],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\ApolloProvider.js",["209"],"import React from \"react\";\r\nimport App from \"./App\";\r\nimport {\r\n  ApolloClient,\r\n  ApolloProvider,\r\n  InMemoryCache,\r\n  createHttpLink,\r\n} from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\nimport { cache } from \"./storage\";\r\n//Server URL\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: \"http://localhost:4000/graphql\",\r\n});\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem(\"jwtToken\");\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n\r\n      Authorization: token ? `Bearer ${token}` : \"\",\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: cache,\r\n});\r\n\r\nexport default (\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>\r\n);\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\serviceWorker.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\App.js",["210","211","212"],"import React, { Component } from \"react\";\r\nimport {\r\n  HashRouter,\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport { AuthProvider } from \"./context/auth\";\r\nimport \"./scss/style.scss\";\r\nimport Login from \"./views/Login\";\r\nimport SignUp from \"./views/Sign-up\";\r\nimport { AuthRoute, ProtectedRoute } from \"./components/AuthRoute\";\r\nimport Home from \"./views/Home\";\r\nimport EndUserProfile from \"./views/EndUserProfile\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Footer from \"./components/Footer\";\r\nimport Article from \"./views/Content/Article\";\r\nimport Draft from \"./views/Content/Draft\";\r\nimport Portfolio from \"./views/Portfolio\";\r\nimport { MyAuthors } from \"./views/Content/MyAuthors\";\r\nimport { theme } from \"./Theme\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { CircularProgress, Container } from \"@material-ui/core\";\r\nimport Company from \"./views/Company/Company\";\r\nimport ProfileSetting from \"./views/profileSetting/ProfileSetting\";\r\nimport AccountSecurty from \"./views/profileSetting/AccountSecurty\";\r\n// const Company = React.lazy(() => import(\"./views/Company/Company\"));\r\nexport class App extends Component {\r\n  render() {\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <AuthProvider>\r\n          <Router>\r\n            <React.Suspense fallback={CircularProgress}>\r\n              <Navbar />\r\n              <div\r\n                style={{\r\n                  backgroundColor: theme.palette.background.default,\r\n                  paddingBottom: theme.spacing(8),\r\n                }}\r\n              >\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route path=\"/userProfile/:userId\" component={EndUserProfile} />\r\n                <ProtectedRoute\r\n                  exact\r\n                  path=\"/ProfileSetting/\"\r\n                  component={ProfileSetting}\r\n                />\r\n\r\n                <ProtectedRoute\r\n                  exact\r\n                  path=\"/AccountSecurty/\"\r\n                  component={AccountSecurty}\r\n                />\r\n\r\n                <Route path=\"/company/:companyId\" component={Company} />\r\n                <Route path=\"/article/:articleId\" component={Article} />\r\n                <ProtectedRoute exact path=\"/Portfolio\" component={Portfolio} />\r\n                <ProtectedRoute path=\"/draft/:draftId\" component={Draft} />\r\n                <ProtectedRoute\r\n                  exact\r\n                  path=\"/MyAuthers/:username/\"\r\n                  component={MyAuthors}\r\n                />\r\n                <AuthRoute exact path=\"/Signup\" component={SignUp} />\r\n\r\n                <AuthRoute exact path=\"/Login\" component={Login} />\r\n              </div>\r\n              <Footer />\r\n            </React.Suspense>\r\n          </Router>\r\n        </AuthProvider>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\Theme.js",["213","214"],"import { createMuiTheme } from '@material-ui/core/styles';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport green from '@material-ui/core/colors/green';\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#0081A7',\r\n    },\r\n    secondary: {\r\n      main: '#FED9B7',\r\n    },\r\n    success:{\r\n        main:'#00AFB9'\r\n    }, \r\n    background:{\r\n      default:\"#E5E5E5\"\r\n    }\r\n\r\n  },\r\n});","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\context\\auth.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Sign-up.js",["215"],"import React, { useContext, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { CustomizedSnackbars } from \"../components/UI/messages\";\r\n\r\n//graphql\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { SIGNUP_USER } from \"../graphql/Auth/authGql\";\r\n//auth\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { useForm } from \"../util/hooks\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://google.com/\">\r\n        Alpha+\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp(props) {\r\n  const classes = useStyles();\r\n  const [success, setSuccess] = useState(false);\r\n  const context = useContext(AuthContext);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { onChange, onSubmit, values } = useForm(signUpUserCallback, {\r\n    firstName: \"\",\r\n    lasttName: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPasswrod: \"\",\r\n  });\r\n\r\n  const [signUpUser, { loading }] = useMutation(SIGNUP_USER, {\r\n    update(_, { data: { register: userData } }) {\r\n      context.login(userData);\r\n      props.history.push(\"/\");\r\n    },\r\n    onError(err) {\r\n      setErrors(\r\n        err && err.graphQLErrors[0]\r\n          ? err.graphQLErrors[0].extensions.exception.errors\r\n          : {}\r\n      );\r\n    },\r\n    variables: {\r\n      registerInput: {\r\n        name: values.firstName.concat(\" \", values.lasttName),\r\n        username: values.username,\r\n        email: values.email,\r\n        password: values.password,\r\n        confirmPassword: values.confirmPasswrod,\r\n      },\r\n    },\r\n  });\r\n\r\n  function signUpUserCallback() {\r\n    signUpUser();\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Create Free Account\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={onSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                onChange={onChange}\r\n                value={values.firstName}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"lname\"\r\n                name=\"lasttName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                autoFocus\r\n                onChange={onChange}\r\n                value={values.lasttName}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                onChange={onChange}\r\n                value={values.username}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={onChange}\r\n                value={values.email}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                onChange={onChange}\r\n                value={values.password}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"confirmPasswrod\"\r\n                label=\"Confrim Password\"\r\n                type=\"password\"\r\n                id=\"confirmPasswrod\"\r\n                onChange={onChange}\r\n                value={values.confirmPasswrod}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {loading ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          )}\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/Login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n      {success && (\r\n        <div>\r\n          <CustomizedSnackbars color=\"success\" message=\"Draft is created\" />;\r\n        </div>\r\n      )}\r\n      {Object.keys(errors).length > 0 && (\r\n        <div>\r\n          <ul>\r\n            {Object.values(errors).map((value) => (\r\n              <CustomizedSnackbars color=\"error\" message={value} />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Login.js",["216","217","218"],"import React, { useContext, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n// //imagers\r\nimport GoogleIcon from \"../assets/icons/1004px-Google__G__Logo.svg.png\";\r\nimport TwitterIcon from \"../assets/icons/580b57fcd9996e24bc43c53e.png\";\r\n//graphql\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { LOGIN_USER } from \"../graphql/Auth/authGql\";\r\n//auth\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { useForm } from \"../util/hooks\";\r\nimport { CustomizedSnackbars } from \"../components/UI/messages\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://google.com/\">\r\n        Alpha+ best website ever!\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  GTsubmit: {\r\n    margin: theme.spacing(3, 0, 0),\r\n  },\r\n}));\r\nexport default function SignIn(props) {\r\n  const classes = useStyles();\r\n  const [success, setSuccess] = useState(false);\r\n  const context = useContext(AuthContext);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { onChange, onSubmit, values } = useForm(loginUserCallback, {\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\r\n    update(_, { data: { login: userData } }) {\r\n      context.login(userData);\r\n      // setSuccess(true);\r\n      props.history.push(\"/\");\r\n    },\r\n    onError(err) {\r\n      setErrors(\r\n        err && err.graphQLErrors[0]\r\n          ? err.graphQLErrors[0].extensions.exception.errors\r\n          : {}\r\n      );\r\n    },\r\n    variables: values,\r\n  });\r\n\r\n  function loginUserCallback() {\r\n    loginUser();\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={onSubmit}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={values.email}\r\n            onChange={onChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={values.password}\r\n            onChange={onChange}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          {loading ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n          )}\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"/Signup\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.GTsubmit}\r\n            >\r\n              Continue with google\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.GTsubmit}\r\n            >\r\n              Continue with twitter\r\n            </Button>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n      {success && (\r\n        <div>\r\n          <CustomizedSnackbars color=\"success\" message=\"Welcome Back\" />;\r\n        </div>\r\n      )}\r\n      {Object.keys(errors).length > 0 && (\r\n        <div>\r\n          <ul>\r\n            {Object.values(errors).map((value) => (\r\n              <CustomizedSnackbars color=\"error\" message={value} />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\EndUserProfile.js",["219","220","221","222","223"],"import React, { useState } from \"react\";\r\nimport { UserInfo, FollowerFollowingForm } from \"../components/UserInfo\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport { HomeCard } from \"./Home\";\r\nimport {\r\n  List,\r\n  ListItemText,\r\n  Grid,\r\n  Tabs,\r\n  Divider,\r\n  Typography,\r\n  IconButton,\r\n  Container,\r\n  Tab,\r\n  Paper,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { Redirect, useParams } from \"react-router\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { PROFILE_GQL } from \"../graphql/Auth/authGql\";\r\nimport CommentComponentBody from \"../components/Content/CommentComponents\";\r\n\r\nconst img = \"avatars/7.jpg\";\r\nconst userInfo = {\r\n  name: \"Jhon Doe\",\r\n  img: img,\r\n  bio: \"Analyst\",\r\n};\r\n\r\nconst contentdummyData1 = [\r\n  {\r\n    name: \"jhon Doe\",\r\n    img: \"Jh\",\r\n    title: \"This a test dummy title\",\r\n    bio: \"18 comments\",\r\n  },\r\n  {\r\n    name: \"Ziad Fnan\",\r\n    img: \"Zi\",\r\n    title: \"Don't Miss This intersting analyst\",\r\n    bio: \"18 comments\",\r\n  },\r\n  {\r\n    name: \"Abo Motlaq\",\r\n    img: \"AH\",\r\n    title: \"I only love apple products\",\r\n    bio: \"18 comments\",\r\n  },\r\n  {\r\n    name: \"Aziz Amir\",\r\n    img: \"AA\",\r\n    title: \"Play it cool with your stocks\",\r\n    bio: \"18 comments\",\r\n  },\r\n  {\r\n    name: \"Saleh Mogren\",\r\n    img: \"SM\",\r\n    title: \"How to write dummy data like a pro\",\r\n    bio: \"18 comments\",\r\n  },\r\n];\r\n\r\nconst contentdummyData2 = [\r\n  {\r\n    name: \"jhon Doe\",\r\n    img: \"Jh\",\r\n    title: \"This a test dummy title\",\r\n    bio:\r\n      \"Contributor long only, Growth, registered investment advisor, investment advisor\",\r\n  },\r\n  {\r\n    name: \"Ziad Fnan\",\r\n    img: \"Zi\",\r\n    title: \"Don't Miss This intersting analyst\",\r\n    bio:\r\n      \"Contributor long only, Growth, registered investment advisor, investment advisor\",\r\n  },\r\n  {\r\n    name: \"Abo Motlaq\",\r\n    img: \"AH\",\r\n    title: \"I only love apple products\",\r\n    bio:\r\n      \"Contributor long only, Growth, registered investment advisor, investment advisor\",\r\n  },\r\n  {\r\n    name: \"Aziz Amir\",\r\n    img: \"AA\",\r\n    title: \"Play it cool with your stocks\",\r\n    bio:\r\n      \"Contributor long only, Growth, registered investment advisor, investment advisor\",\r\n  },\r\n  {\r\n    name: \"Saleh Mogren\",\r\n    img: \"SM\",\r\n    title: \"How to write dummy data like a pro\",\r\n    bio:\r\n      \"Contributor long only, Growth, registered investment advisor, investment advisor\",\r\n  },\r\n];\r\n\r\nconst FollowersDocs = [\r\n  {\r\n    name: \"Alex\",\r\n    avatar: img,\r\n    bio:\r\n      \"Contributor long only, Growth, registered investment advisor, investment advisor\",\r\n  },\r\n  {\r\n    name: \"Ziad\",\r\n    avatar: img,\r\n    bio:\r\n      \"Contributor long only, Growth, registered investment advisor, investment advisor\",\r\n  },\r\n  {\r\n    name: \"Mohammed\",\r\n    avatar: img,\r\n    bio:\r\n      \"Contributor long only, Growth, registered investment advisor, investment advisor\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(4),\r\n    // background: theme.palette.grey[400],\r\n  },\r\n\r\n  paper1: {\r\n    width: theme.spacing(21),\r\n    // height: theme.spacing(14),\r\n    padding: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n\r\n    [theme.breakpoints.between(\"sm\", \"md\")]: {\r\n      width: theme.spacing(13.5),\r\n      height: theme.spacing(21.5),\r\n      padding: theme.spacing(0.5),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n      width: theme.spacing(17),\r\n      height: theme.spacing(29),\r\n      padding: theme.spacing(1.5),\r\n      marginRight: theme.spacing(2),\r\n    },\r\n  },\r\n\r\n  paper2: {\r\n    // width: \"100%\",\r\n    padding: theme.spacing(3),\r\n\r\n    [theme.breakpoints.between(\"sm\", \"md\")]: {\r\n      width: theme.spacing(72),\r\n    },\r\n    [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n      padding: theme.spacing(1),\r\n      width: theme.spacing(105),\r\n    },\r\n  },\r\n\r\n  typogrAboutMe: {\r\n    // width: \"auto\",\r\n    // height: \"auto\",\r\n    marginTop: theme.spacing(0.8),\r\n    // fontSize: \"14px\",\r\n    // fontStyle: \"normal\",\r\n    // fontWeight: \"400\",\r\n    // marginLeft: theme.spacing(2),\r\n    textAlign: \"left\",\r\n\r\n    [theme.breakpoints.between(\"sm\", \"md\")]: {\r\n      fontSize: \"25px\",\r\n      marginTop: theme.spacing(1.25),\r\n    },\r\n\r\n    [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n      marginTop: theme.spacing(2.75),\r\n      marginBottom: theme.spacing(0.5),\r\n      fontSize: \"34px\",\r\n    },\r\n  },\r\n\r\n  typogrText: {\r\n    // marginLeft: theme.spacing(2),\r\n    marginBottom: theme.spacing(0.75),\r\n    marginTop: theme.spacing(1),\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n    // fontSize: \"12px\",\r\n    // fontStyle: \"normal\",\r\n    // fontWeight: \"400\",\r\n    textAlign: \"left\",\r\n\r\n    [theme.breakpoints.between(\"sm\", \"md\")]: {\r\n      fontSize: \"18.5px\",\r\n      width: \"auto\",\r\n    },\r\n\r\n    [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n      width: \"auto\",\r\n      marginBottom: theme.spacing(2),\r\n      marginTop: theme.spacing(1),\r\n      fontSize: \"24px\",\r\n    },\r\n  },\r\n\r\n  iconstyle: {\r\n    [theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n      fontSize: \"xx-large\",\r\n    },\r\n\r\n    [theme.breakpoints.between(\"sm\", \"md\")]: {\r\n      fontSize: \"medium\",\r\n    },\r\n  },\r\n\r\n  typogrLabel: {\r\n    [theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n      //  fontSize: theme.typography.fontSize*0.3,\r\n    },\r\n  },\r\n}));\r\n\r\nconst EndUserProfile = (props) => {\r\n  const classes = useStyles();\r\n  const { userId } = useParams();\r\n  console.log(userId);\r\n  const { data, error, loading } = useQuery(PROFILE_GQL, {\r\n    variables: {\r\n      id: userId,\r\n    },\r\n  });\r\n  if (error) {\r\n    console.log(error);\r\n    return <Redirect to=\"404\" />;\r\n  }\r\n  if (loading) return <CircularProgress />;\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\">\r\n        <Grid item>\r\n          <Paper className={classes.paper1} elevation={2}>\r\n            <UserInfo\r\n              id={userId}\r\n              img={userInfo.img}\r\n              name={data.findUser.name}\r\n              bio={userInfo.bio}\r\n              userId={data.findUser.id}\r\n              isFollowed={data.findUser.isFollowed}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs sm md lg={8}>\r\n          <Paper className={classes.paper2} elevation={2}>\r\n            <UserProfileDetails\r\n              name={data.findUser.name}\r\n              followers={data.findUser.followers}\r\n              following={data.findUser.following}\r\n              comments={data.getComments}\r\n              articles={data.getArticles}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nEndUserProfile.propTypes = {};\r\n\r\nexport default EndUserProfile;\r\n\r\n{\r\n  /* // UserProfileDetails(Bio+Icons+Tabs)  */\r\n}\r\nexport function UserProfileDetails(props) {\r\n  const state = useState();\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const Followers = (FollowersDocs) =>\r\n    FollowersDocs.map((v) => (\r\n      <FollowerFollowingForm\r\n        name={v.name}\r\n        bio={v.bio ? v.bio : \"Default Bio\"}\r\n        avatar={v.avatar}\r\n        userId={v.id}\r\n        isFollowed={v.isFollowed}\r\n      />\r\n    ));\r\n\r\n  const Following = (FollowersDocs) =>\r\n    FollowersDocs.map((v) => (\r\n      <FollowerFollowingForm\r\n        name={v.name}\r\n        bio={v.bio ? v.bio : \"Default Bio\"}\r\n        avatar={v.avatar}\r\n        userId={v.id}\r\n        isFollowed={v.isFollowed}\r\n      />\r\n    ));\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justify=\"flex-start\"\r\n      alignItems=\"flex-start\"\r\n    >\r\n      {/* // UserBio  */}\r\n      <Grid item>\r\n        <Typography className={classes.typogrAboutMe} variant=\"body1\">\r\n          ABOUT ME\r\n        </Typography>\r\n        <Typography\r\n          className={classes.typogrText}\r\n          style={{ color: \"#4d4d4d\" }}\r\n          variant=\"subtitle1\"\r\n        >\r\n          Contributor Since: 2021\r\n        </Typography>\r\n\r\n        <Typography className={classes.typogrText} variant=\"body1\">\r\n          Contributor long only, Growth, registered investment\r\n          advisor,investment advisor\r\n        </Typography>\r\n      </Grid>\r\n\r\n      {/* // UserSocialMediaAccounts  */}\r\n      <Grid item xs container direction=\"row\" justify=\"flex-end\">\r\n        <IconButton size=\"small\">\r\n          {\" \"}\r\n          <TwitterIcon\r\n            className={classes.iconstyle}\r\n            style={{ color: \"grey\" }}\r\n          />\r\n        </IconButton>\r\n        <IconButton size=\"small\">\r\n          {\" \"}\r\n          <FacebookIcon\r\n            className={classes.iconstyle}\r\n            style={{ color: \"grey\" }}\r\n          />\r\n        </IconButton>\r\n        <IconButton size=\"small\">\r\n          {\" \"}\r\n          <LinkedInIcon\r\n            className={classes.iconstyle}\r\n            style={{ color: \"grey\" }}\r\n          />\r\n        </IconButton>\r\n      </Grid>\r\n\r\n      {/* // UserProfileTabs  */}\r\n      <Grid item xs>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"inherit\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n        >\r\n          <Tab\r\n            label={\r\n              <List>\r\n                <ListItemText\r\n                  primary={\r\n                    <Typography className={classes.typogrLabel}>\r\n                      Comments\r\n                    </Typography>\r\n                  }\r\n                  secondary={\r\n                    <Typography className={classes.typogrLabel}>\r\n                      {props.comments.length}\r\n                    </Typography>\r\n                  }\r\n                />\r\n              </List>\r\n            }\r\n          />\r\n\r\n          <Tab\r\n            label={\r\n              <List>\r\n                <ListItemText\r\n                  primary={\r\n                    <Typography className={classes.typogrLabel}>\r\n                      Followers\r\n                    </Typography>\r\n                  }\r\n                  secondary={\r\n                    <Typography className={classes.typogrLabel}>\r\n                      {props.followers.length}\r\n                    </Typography>\r\n                  }\r\n                />\r\n              </List>\r\n            }\r\n          />\r\n\r\n          <Tab\r\n            label={\r\n              <List>\r\n                <ListItemText\r\n                  primary={\r\n                    <Typography className={classes.typogrLabel}>\r\n                      Following\r\n                    </Typography>\r\n                  }\r\n                  secondary={\r\n                    <Typography className={classes.typogrLabel}>\r\n                      {props.following.length}\r\n                    </Typography>\r\n                  }\r\n                />\r\n              </List>\r\n            }\r\n          />\r\n\r\n          <Tab\r\n            label={\r\n              <List>\r\n                <ListItemText\r\n                  primary={\r\n                    <Typography className={classes.typogrLabel}>\r\n                      Articles\r\n                    </Typography>\r\n                  }\r\n                  secondary={\r\n                    <Typography className={classes.typogrLabel}>\r\n                      {props.articles.length}\r\n                    </Typography>\r\n                  }\r\n                />\r\n              </List>\r\n            }\r\n          />\r\n\r\n          <Tab\r\n            label={\r\n              <List>\r\n                <ListItemText\r\n                  primary={\r\n                    <Typography className={classes.typogrLabel}>\r\n                      Author’s Picks\r\n                    </Typography>\r\n                  }\r\n                  secondary={\r\n                    <Typography className={classes.typogrLabel}>500</Typography>\r\n                  }\r\n                />\r\n              </List>\r\n            }\r\n          />\r\n        </Tabs>\r\n        <Container>\r\n          <Divider variant=\"middle\" />\r\n        </Container>\r\n\r\n        {value === 0 && (\r\n          <Container>\r\n            {props.comments.map((e) => (\r\n              <CommentComponentBody\r\n                body={e.commentBody}\r\n                date={e.createdAt}\r\n                name={props.name}\r\n              />\r\n            ))}\r\n          </Container>\r\n        )}\r\n        {value === 1 && <Container>{Followers(props.followers)}</Container>}\r\n        {value === 2 && <Container>{Following(props.following)}</Container>}\r\n        {value === 3 && (\r\n          <Container>\r\n            {<HomeCard dataLimit={4} data={props.articles} btnText=\"More\" />}\r\n          </Container>\r\n        )}\r\n        {value === 4 && (\r\n          <Container>\r\n            {<HomeCard dataLimit={4} data={props.articles} btnText=\"More\" />}\r\n          </Container>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\AuthRoute.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Footer.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Content\\Article.js",["224","225","226","227","228"],"import React, { useState, useContext } from \"react\";\r\nimport PropTypes, { func } from \"prop-types\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Divider,\r\n  ButtonBase,\r\n  Button,\r\n  Avatar,\r\n  TextField,\r\n  // FormHelperText,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport moment from \"moment\";\r\nimport ReplyIcon from \"@material-ui/icons/Reply\";\r\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\r\nimport ThumbUpAltRoundedIcon from \"@material-ui/icons/ThumbUpAltRounded\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\n// import AddCommentIcon from \"@material-ui/icons/AddComment\";\r\nimport {\r\n  ArticleAutherInfo,\r\n  ArticleAutherInfoExpanded,\r\n} from \"../../components/AnalystInfo\";\r\nimport { useParams, useHistory, Redirect } from \"react-router-dom\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport { GET_ARTICLE, GET_COMMENTS } from \"../../graphql/Content/articleGql\";\r\nimport { ADD_COMMENT } from \"../../graphql/Content/commentGql\";\r\nimport { useLike } from \"../../util/hooks\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginLeft: 0,\r\n  },\r\n  articleLayout: {\r\n    paddingTop: theme.spacing(5),\r\n    marginRight: theme.spacing(0),\r\n    marginLeft: theme.spacing(0),\r\n    padding: theme.spacing(1),\r\n    paddingBottom: theme.spacing(4),\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      marginLeft: theme.spacing(40),\r\n      marginRight: theme.spacing(40),\r\n    },\r\n    \"& img\": {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  analystInfoSection: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  title: {\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(2),\r\n    overflowWrap: \"anywhere\",\r\n  },\r\n  body: {\r\n    padding: theme.spacing(2),\r\n    overflowWrap: \"anywhere\",\r\n  },\r\n  likeBtn: {\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.9),\r\n    },\r\n  },\r\n  commentsLayout: {\r\n    marginTop: theme.spacing(5),\r\n  },\r\n  commentsHeader: {\r\n    padding: theme.spacing(4),\r\n    color: theme.palette.grey[400],\r\n  },\r\n  addComment: {\r\n    paddingBottom: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n    width: \"90%\",\r\n    \"& .MuiTextField-root\": {\r\n      width: \"100%\",\r\n      padding: theme.spacing(1),\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(4),\r\n      borderTopLeftRadius: 0,\r\n    },\r\n  },\r\n  comment: {\r\n    padding: theme.spacing(2),\r\n    \"& .MuiAvatar-root\": {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    \"& .MuiDivider-root\": {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    \"& .MuiGrid-root\": {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    \"& .commentBody\": {\r\n      paddingBottom: theme.spacing(2),\r\n    },\r\n  },\r\n  commentBtn: {\r\n    paddingTop: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nconst img = \"avatars/7.jpg\";\r\nconst analystInfo = {\r\n  name: \"jhon doe\",\r\n  img: img,\r\n  bio:\r\n    \"This a logn bio from the user and should give a breif about the user prsonality\",\r\n};\r\nconst commentsDocs = [\r\n  {\r\n    name: \"Alex\",\r\n    Avatar: \"AL\",\r\n    date: \"2021-2-21\",\r\n    body: \"Great Article\",\r\n  },\r\n  {\r\n    name: \"Ziad\",\r\n    Avatar: \"ZI\",\r\n    date: \"2021-2-22\",\r\n    body: \"I dissagree , there should not be any downsides\",\r\n  },\r\n  {\r\n    name: \"Mohammed\",\r\n    Avatar: \"MO\",\r\n    date: \"2021-2-24\",\r\n    body: \"Please keep up the good work\",\r\n  },\r\n];\r\n\r\nconst Article = (props) => {\r\n  const classes = useStyles();\r\n  let { articleId } = useParams();\r\n  // console.log(articleId);\r\n  const { loading: articleFetchingLoading, data, error } = useQuery(\r\n    GET_ARTICLE,\r\n    {\r\n      variables: {\r\n        articleId: articleId,\r\n      },\r\n      onError(err) {\r\n        console.log(`Error Happend ${err}`);\r\n      },\r\n    }\r\n  );\r\n  if (error) return <Redirect to=\"404\" />;\r\n  return articleFetchingLoading ? (\r\n    <CircularProgress />\r\n  ) : (\r\n    <div className={classes.articleLayout}>\r\n      <ArticleSection\r\n        id={articleId}\r\n        title={data.getArticle.articleTitle}\r\n        body={data.getArticle.articleBody}\r\n        auther={data.getArticle.articleAuthor}\r\n        isLiked={data.getArticle.isLiked}\r\n        updatedAt={data.getArticle.updatedAt}\r\n        createdAt={data.getArticle.createdAt}\r\n      />\r\n\r\n      <CommentsSection\r\n        commentCount={data.getArticle.commentCount}\r\n        cooments={data.getComments}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nArticle.propTypes = {};\r\n\r\nexport default Article;\r\n\r\nconst ArticleSection = (props) => {\r\n  const classes = useStyles();\r\n  const { toggleLike, liked } = useLike(props.id, props.isLiked);\r\n  return (\r\n    <Container>\r\n      <Paper elevation={2}>\r\n        <ArticleAutherInfo\r\n          img={props.auther.img}\r\n          name={props.auther.username}\r\n          userId={props.auther.id}\r\n          isFollowed={props.auther.isFollowed}\r\n        />\r\n        {/* Title + Body Container */}\r\n        <Container>\r\n          {/* Title  */}\r\n          <Container className={classes.title}>\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              direction=\"column\"\r\n              justify=\"space-between\"\r\n              alignItems=\"baseline\"\r\n            >\r\n              <Grid item>\r\n                <h1>{props.title}</h1>\r\n              </Grid>\r\n              <Grid item container direction=\"row\" spacing={1}>\r\n                <Grid item xs>\r\n                  <Typography variant=\"caption\">\r\n                    {moment(props.createdAt).fromNow()}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <Typography variant=\"caption\">\r\n                    {moment(props.updatedAt).fromNow()}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n          {/* Body */}\r\n          <Container className={classes.body}>\r\n            <div dangerouslySetInnerHTML={{ __html: props.body }} />\r\n          </Container>\r\n          <Divider variant=\"middle\" />\r\n          {/* Article Buttons */}\r\n          <Container>\r\n            <Grid container justify=\"space-between\" spacing={4} xs sm>\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"text\"\r\n                  color=\"primary\"\r\n                  startIcon={\r\n                    liked ? (\r\n                      <ThumbUpAltRoundedIcon />\r\n                    ) : (\r\n                      <ThumbUpAltOutlinedIcon />\r\n                    )\r\n                  }\r\n                  onClick={toggleLike}\r\n                >\r\n                  {liked ? \"Liked\" : \"Like the article?\"}\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"text\"\r\n                  color=\"primary\"\r\n                  startIcon={<ShareIcon />}\r\n                >\r\n                  Share the article\r\n                </Button>\r\n              </Grid>\r\n              {/* <Grid item>\r\n                <Button\r\n                  variant=\"text\"\r\n                  color=\"primary\"\r\n                  startIcon={<AddCommentIcon />}\r\n                >\r\n                  Add Comment\r\n                </Button>\r\n              </Grid> */}\r\n            </Grid>\r\n          </Container>\r\n        </Container>\r\n      </Paper>\r\n      <Paper elevation={2} className={classes.analystInfoSection}>\r\n        <ArticleAutherInfoExpanded\r\n          img={props.auther.img}\r\n          name={props.auther.name}\r\n          username={props.auther.username}\r\n          bio={analystInfo.bio}\r\n          isFollowed={props.auther.isFollowed}\r\n          userId={props.auther.id}\r\n        />\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nArticleSection.propTypes = {};\r\n\r\nfunction CommentsSection(props) {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  let { articleId } = useParams();\r\n  const [errors, setErrors] = useState({});\r\n  const [commentBody, setCommentBody] = useState(\"\");\r\n  const classes = useStyles();\r\n  const comments = (commentsDocs) =>\r\n    commentsDocs.map((v) => (\r\n      <CreateComment\r\n        name={v.commentAuthor.username}\r\n        body={v.commentBody}\r\n        date={v.createdAt}\r\n        avatar={v.commentAuthor.img}\r\n        userId={v.commentAuthor.id}\r\n      />\r\n    ));\r\n  const [addComment, { laoding: commentLoading }] = useMutation(ADD_COMMENT, {\r\n    variables: {\r\n      autherId: !user ? \"undefind\" : user.id,\r\n      articleId: articleId,\r\n      commentBody: commentBody,\r\n    },\r\n    update(cache, { data: { addComment: newComment } }) {\r\n      cache.writeQuery({\r\n        query: GET_COMMENTS,\r\n        variables: {\r\n          articleId,\r\n        },\r\n        data: [...props.comments, newComment],\r\n      });\r\n    },\r\n    // onCompleted(data) {\r\n    //   window.location.reload();\r\n    // },\r\n    onError(err) {\r\n      console.log(`Error on ${err}`);\r\n      setErrors(\r\n        err && err.graphQLErrors[0]\r\n          ? err.graphQLErrors[0].extensions.exception.errors\r\n          : {}\r\n      );\r\n    },\r\n  });\r\n  function onCommentChange(value) {\r\n    setCommentBody(value.target.value);\r\n  }\r\n  function addCommentCall() {\r\n    if (commentBody.trim() != \"\") addComment();\r\n  }\r\n  return (\r\n    <Container className={classes.commentsLayout}>\r\n      <Paper elevation={2}>\r\n        <Container>\r\n          <Container className={classes.commentsHeader}>\r\n            <Typography variant=\"h4\">Comments({props.commentCount})</Typography>\r\n          </Container>\r\n          <Container className={classes.addComment}>\r\n            <form onSubmit={addCommentCall}>\r\n              <Avatar>OP</Avatar>\r\n              <TextField\r\n                id=\"outlined-multiline-static\"\r\n                multiline\r\n                rows={4}\r\n                placeholder=\"add your comment..\"\r\n                variant=\"outlined\"\r\n                value={commentBody}\r\n                error={Object.keys(errors).length > 0}\r\n                onChange={onCommentChange}\r\n                disabled={!user}\r\n              />\r\n              {commentLoading ? (\r\n                <CircularProgress />\r\n              ) : (\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                  Publish\r\n                </Button>\r\n              )}\r\n            </form>\r\n          </Container>\r\n          <Container>{comments(props.cooments)}</Container>\r\n        </Container>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst CreateComment = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container className={classes.comment}>\r\n      <Divider />\r\n      <Grid container direction=\"row\" justify=\"space-between\">\r\n        <Grid item container xs={4} sm>\r\n          <Avatar>\r\n            {props.avatar == null ? props.name.split(2) : props.avatar}\r\n          </Avatar>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            component={RouterLink}\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n            to={`/userProfile/${props.userId}`}\r\n          >\r\n            {props.name}\r\n          </Typography>\r\n        </Grid>\r\n        <Typography variant=\"caption\">\r\n          {moment(props.date).fromNow()}\r\n        </Typography>\r\n      </Grid>\r\n      <Container className=\"commentBody\">\r\n        <Typography variant=\"body2\">{props.body}</Typography>\r\n      </Container>\r\n      <Container className={classes.commentBtn}>\r\n        <Button startIcon={<ReplyIcon />}>Reply</Button>\r\n        <Button startIcon={<ThumbUpAltOutlinedIcon />}>Like</Button>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\nCreateComment.defaultProps = {\r\n  userId: \"undefind\",\r\n};\r\nCreateComment.propTypes = {\r\n  userId: PropTypes.string.isRequired,\r\n};\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Navbar.js",["229"],"import {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n  IconButton,\r\n  Drawer,\r\n  Link,\r\n  MenuItem,\r\n  fade,\r\n  InputBase,\r\n  Menu,\r\n  Divider,\r\n  List,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { AccountCircle, Search, ExitToApp } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    backgroundColor: theme.palette.primary,\r\n\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      paddingRight: \"79px\",\r\n      paddingLeft: \"118px\",\r\n    },\r\n    flexGrow: 1,\r\n    paddingLeft: 0,\r\n  },\r\n  logo: {\r\n    fontFamily: \"sans-serif\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"bold\",\r\n    marginRight: theme.spacing(5),\r\n    /* or 54px */\r\n    textDecoration: \"none\",\r\n    \"&:visited\": {\r\n      color: theme.palette.common.white,\r\n    },\r\n    letterSpacing: \"2px\",\r\n    // display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n      fontSize: \"36px\",\r\n      lineHeight: \"150%\",\r\n    },\r\n  },\r\n  leftMenu: {\r\n    paddingTop: theme.spacing(4),\r\n  },\r\n  menuButton: {\r\n    display: \"inline-block\",\r\n\r\n    fontFamily: \"Open Sans, sans-serif\",\r\n    fontWeight: 400,\r\n    size: theme.typography.fontSize,\r\n    marginLeft: theme.spacing(4),\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  drawerContainer: {\r\n    padding: theme.spacing(3, 6),\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"80%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginRight: theme.spacing(2),\r\n\r\n      marginLeft: theme.spacing(12),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"80%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n  rightMenu: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n\r\n    // marginRight: theme.spacing(2),\r\n    marginLeft: theme.spacing(20),\r\n    color: theme.palette.primary,\r\n  },\r\n  loginBtn: {\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.9),\r\n      color: theme.palette.getContrastText(theme.palette.common.white),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Header(props) {\r\n  const context = useContext(AuthContext);\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const loggingOut = () => {\r\n    handleMenuClose();\r\n    context.logout();\r\n  };\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem\r\n        onClick={handleMenuClose}\r\n        component={RouterLink}\r\n        to=\"/ProfileSetting\"\r\n      >\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          component={RouterLink}\r\n          to=\"/ProfileSetting\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>{\" \"}\r\n      <MenuItem onClick={loggingOut}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          onClick={loggingOut}\r\n        >\r\n          <ExitToApp />\r\n        </IconButton>\r\n        <p>Logout</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const leftMenu = [\r\n    {\r\n      title: \"My Authers\",\r\n      link: context.user ? `/MyAuthers/${context.user.id}/` : `/Login`,\r\n    },\r\n    {\r\n      title: \"My Portfolio\",\r\n      link: \"/Portfolio\",\r\n    },\r\n    {\r\n      title: \"Sectors\",\r\n      dropdown: true,\r\n      menu: [\r\n        {\r\n          title: \"My Portfolio\",\r\n          link: \"/Portfolio\",\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const rightMenu = [\r\n    {\r\n      title: \"Login\",\r\n      link: \"/Login\",\r\n      isLoggedIn: false,\r\n    },\r\n    {\r\n      title: \"logut\",\r\n      link: \"/\",\r\n      function: () => context.logout(),\r\n      isLoggedIn: true,\r\n    },\r\n  ];\r\n\r\n  const { header, logo, menuButton, toolbar, drawerContainer } = useStyles();\r\n\r\n  const [state, setState] = useState({\r\n    mobileView: false,\r\n    drawerOpen: false,\r\n  });\r\n\r\n  const { mobileView, drawerOpen } = state;\r\n\r\n  useEffect(() => {\r\n    const setResponsiveness = () => {\r\n      return window.innerWidth < 1025\r\n        ? setState((prevState) => ({ ...prevState, mobileView: true }))\r\n        : setState((prevState) => ({ ...prevState, mobileView: false }));\r\n    };\r\n\r\n    setResponsiveness();\r\n\r\n    window.addEventListener(\"resize\", () => setResponsiveness());\r\n  }, []);\r\n  const searchBar = () => {\r\n    return (\r\n      <div className={classes.search}>\r\n        <div className={classes.searchIcon}>\r\n          <Search />\r\n        </div>\r\n        <InputBase\r\n          placeholder=\"Search…\"\r\n          classes={{\r\n            root: classes.inputRoot,\r\n            input: classes.inputInput,\r\n          }}\r\n          inputProps={{ \"aria-label\": \"search\" }}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n  const displayDesktop = () => {\r\n    return (\r\n      <Toolbar className={toolbar}>\r\n        {Logo}\r\n        <div className={classes.leftMenu}>{getLeftMenu()}</div>\r\n        {/* Search Bar */}\r\n        <div>{searchBar()}</div>\r\n        {/* Righ Menu */}\r\n        <div> {getRightMenu()}</div>\r\n        {renderMenu}\r\n      </Toolbar>\r\n    );\r\n  };\r\n  const getRightMenu = () => {\r\n    return (\r\n      <div className={classes.rightMenu}>\r\n        {context.user ? (\r\n          <IconButton\r\n            edge=\"end\"\r\n            aria-label=\"account of current user\"\r\n            aria-controls={menuId}\r\n            aria-haspopup=\"true\"\r\n            onClick={handleProfileMenuOpen}\r\n            color=\"inherit\"\r\n          >\r\n            <AccountCircle />\r\n          </IconButton>\r\n        ) : (\r\n          <Button\r\n            className={classes.loginBtn}\r\n            variant=\"outlined\"\r\n            color=\"inherit\"\r\n            component={RouterLink}\r\n            to=\"/Login\"\r\n          >\r\n            Login\r\n          </Button>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n  const displayMobile = () => {\r\n    const handleDrawerOpen = () =>\r\n      setState((prevState) => ({ ...prevState, drawerOpen: true }));\r\n    const handleDrawerClose = () =>\r\n      setState((prevState) => ({ ...prevState, drawerOpen: false }));\r\n\r\n    return (\r\n      <Toolbar>\r\n        <IconButton\r\n          {...{\r\n            edge: \"start\",\r\n            color: \"inherit\",\r\n            \"aria-label\": \"menu\",\r\n            \"aria-haspopup\": \"true\",\r\n            onClick: handleDrawerOpen,\r\n          }}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n\r\n        <Drawer\r\n          {...{\r\n            anchor: \"left\",\r\n            open: drawerOpen,\r\n            onClose: handleDrawerClose,\r\n          }}\r\n        >\r\n          <div className={drawerContainer}>{getDrawerChoices()}</div>\r\n        </Drawer>\r\n\r\n        <div>{Logo}</div>\r\n        <div>{searchBar()}</div>\r\n      </Toolbar>\r\n    );\r\n  };\r\n\r\n  const getDrawerChoices = () => {\r\n    return (\r\n      <div>\r\n        {leftMenu.map((e) => {\r\n          return (\r\n            <Link\r\n              {...{\r\n                component: RouterLink,\r\n                to: e.link,\r\n                color: \"inherit\",\r\n                style: { textDecoration: \"none\" },\r\n                key: e.title,\r\n              }}\r\n            >\r\n              <MenuItem>{e.title}</MenuItem>\r\n            </Link>\r\n          );\r\n        })}\r\n        <Divider />\r\n        {context.user ? (\r\n          <List>\r\n            <MenuItem>Profile</MenuItem>\r\n\r\n            <MenuItem component={Button} onClick={() => context.logout()}>\r\n              Logout\r\n            </MenuItem>\r\n          </List>\r\n        ) : (\r\n          <Link\r\n            {...{\r\n              component: RouterLink,\r\n              to: \"/Login\",\r\n              color: \"inherit\",\r\n              style: { textDecoration: \"none\" },\r\n              key: \"Login\",\r\n            }}\r\n          >\r\n            <MenuItem>Login</MenuItem>\r\n          </Link>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const Logo = (\r\n    <Typography variant=\"h6\" component=\"h1\" className={logo}>\r\n      Alpha+\r\n    </Typography>\r\n  );\r\n\r\n  const getLeftMenu = () => {\r\n    return leftMenu.map((e) => {\r\n      return (\r\n        <Button\r\n          {...{\r\n            key: e.title,\r\n            color: \"inherit\",\r\n            to: e.link,\r\n            component: RouterLink,\r\n            className: menuButton,\r\n          }}\r\n        >\r\n          {e.title}\r\n        </Button>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar className={header} position=\"static\">\r\n        {mobileView ? displayMobile() : displayDesktop()}\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Content\\MyAuthors.js",["230","231","232","233","234","235","236","237","238","239","240"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useParams, Link as RouterLink, Link } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  Card,\r\n  Typography,\r\n  Divider,\r\n  ButtonBase,\r\n  Button,\r\n  Avatar,\r\n  TextField,\r\n  FormHelperText,\r\n  List,\r\n  ListItem,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_DRAFTS } from \"../../graphql/Content/draftsGql\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport { ContentCard } from \"../../components/Content/ContentCards\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { GET_ARTICLES } from \"../../graphql/Content/articleGql\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginLeft: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  Section: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: theme.spacing(4),\r\n    },\r\n  },\r\n  titleSection: {\r\n    padding: theme.spacing(2),\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n}));\r\nexport function MyAuthors(props) {\r\n  const classes = useStyles();\r\n\r\n  const context = useContext(AuthContext);\r\n  const [drafts, setDrafts] = useState([]);\r\n  const [articles, setArticles] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(`Drafts are Fetched`);\r\n  // }, [state.drafts]);\r\n  const params = props.match.params.username;\r\n  const { loading: draftFetchingLoading } = useQuery(GET_DRAFTS, {\r\n    onCompleted(data) {\r\n      setDrafts(data.getDrafts);\r\n      console.log(`Drafts length ${drafts.length}`);\r\n    },\r\n    variables: {\r\n      autherId: params,\r\n    },\r\n    onError(error) {\r\n      console.log(`F}ailed to fetch drafts : ${error}`);\r\n    },\r\n  });\r\n  const { loading: articlesFethcingLoading } = useQuery(GET_ARTICLES, {\r\n    onCompleted(data) {\r\n      setArticles(data.getArticles);\r\n      console.log(`Articles length ${articles.length}`);\r\n    },\r\n    variables: {\r\n      userId: params,\r\n    },\r\n    onError(error) {\r\n      console.log(`F}ailed to fetch articles : ${error}`);\r\n    },\r\n  });\r\n  const articlesSection = () => {\r\n    return articlesFethcingLoading ? (\r\n      <CircularProgress />\r\n    ) : (\r\n      <Container className={classes.Section}>\r\n        <Card>\r\n          <Container>\r\n            <Typography variant=\"h4\" className={classes.titleSection}>\r\n              My Articles{\" \"}\r\n            </Typography>\r\n          </Container>\r\n          <Container>\r\n            <List>\r\n              {articles.map((e) => {\r\n                return (\r\n                  <ListItem>\r\n                    <ContentCard\r\n                      \r\n                      title={e.articleTitle}\r\n                      link={`/article/${e.id}`}\r\n                    />\r\n                  </ListItem>\r\n                );\r\n              })}\r\n            </List>\r\n          </Container>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  };\r\n  const draftSection = () => {\r\n    return draftFetchingLoading ? (\r\n      <CircularProgress />\r\n    ) : (\r\n      <Container className={classes.Section}>\r\n        <Card>\r\n          <Container>\r\n            <Typography variant=\"h4\" className={classes.titleSection}>\r\n              My Drafts\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              component={Link}\r\n              to=\"/draft/new\"\r\n            >\r\n              Create New Draft\r\n            </Button>\r\n          </Container>\r\n          <Container>\r\n            <List>\r\n              {drafts.map((e) => {\r\n                return (\r\n                  <ListItem>\r\n                    <ContentCard\r\n                      crudOtin\r\n                      title={e.draftName}\r\n                      link={`/draft/${e.id}`}\r\n                    />\r\n                  </ListItem>\r\n                );\r\n              })}\r\n            </List>\r\n          </Container>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  };\r\n  return (\r\n    <Container>\r\n      <Grid>\r\n        <Grid item>{articlesSection()}</Grid>\r\n        <Grid item>{draftSection()}</Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Company\\Company.js",["241","242","243","244","245","246"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CircularProgress, Grid, Paper } from \"@material-ui/core\";\r\nimport {\r\n  CompanyCardFollow,\r\n  CompanyMiniDataTable,\r\n  MiniCompanyCardTable,\r\n  RenderCompanyChart,\r\n  CompanyProfile,\r\n} from \"../../components/Company/CompanyCard\";\r\nimport { ContentCardPaper } from \"../../components/Content/ContentCards\";\r\nimport { contentdummyData } from \"../../util/dummyData\";\r\nimport { Redirect, useParams } from \"react-router\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { COMPANY_GQL } from \"../../graphql/Company/companyGql\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  paperLayout: {\r\n    // width: \"100%\",\r\n    paddingBottom: theme.spacing(2),\r\n    marginTop: theme.spacing(1),\r\n    paddingTop: theme.spacing(1),\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1),\r\n      marginRight: theme.spacing(3),\r\n      marginLeft: theme.spacing(3),\r\n    },\r\n  },\r\n  chart_similar: {\r\n    justifyContent: \"center\",\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      justifyContent: \"space-between\",\r\n      paddingRight: theme.spacing(5),\r\n    },\r\n  },\r\n}));\r\nfunction Company(props) {\r\n  const classes = useStyles();\r\n  let { companyId } = useParams();\r\n  console.log(companyId);\r\n  const { data, error, loading } = useQuery(COMPANY_GQL, {\r\n    variables: {\r\n      companyId: companyId,\r\n    },\r\n    onCompleted(data) {\r\n      console.log(data.getCompanies);\r\n    },\r\n  });\r\n  if (error) {\r\n    console.log(error);\r\n    return <Redirect to=\"/404\" />;\r\n  }\r\n  if (loading) return <CircularProgress />;\r\n  const CompanyHeader = () => {\r\n    return (\r\n      <Paper className={classes.paperLayout}>\r\n        <Grid container direction=\"column\">\r\n          {/* Copmany Follow Card */}\r\n          <CompanyCardFollow\r\n            Symbol={data.getCompany.symbol}\r\n            price={data.getCompany.todayFinance.close}\r\n            changePrice={data.getCompany.change}\r\n            name={data.getCompany.comname}\r\n            isFollowed={data.getCompany.isFollowed}\r\n          />\r\n          {/* Company Chart */}\r\n          <Grid container direction=\"row\" className={classes.chart_similar}>\r\n            <Grid item>\r\n              <div>\r\n                <RenderCompanyChart\r\n                  data={data.getCompany.financialData}\r\n                  limit={7}\r\n                  dataKey=\"close\"\r\n                  XAxis=\"date\"\r\n                />\r\n              </div>{\" \"}\r\n            </Grid>{\" \"}\r\n            <Grid item>\r\n              <MiniCompanyCardTable\r\n                data={data.getCompany.similarCompanies}\r\n                limit={4}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {/* Similar Companies minitable */}\r\n        </Grid>\r\n      </Paper>\r\n    );\r\n  };\r\n  const CompanyRelatedArticlesAndData = () => {\r\n    return (\r\n      <Paper className={classes.paperLayout}>\r\n        {/* Company Chart */}\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justify=\"space-around\"\r\n        >\r\n          <Grid item xs lg={6}>\r\n            <ContentCardPaper\r\n              auther\r\n              data={data.getCompany.articles}\r\n              limit={5}\r\n              title=\"Rleated Articles\"\r\n            />\r\n          </Grid>{\" \"}\r\n          <Grid item xs md={4}>\r\n            <CompanyMiniDataTable data={data.getCompany.todayFinance} />\r\n          </Grid>\r\n        </Grid>\r\n        {/* Similar Companies minitable */}\r\n      </Paper>\r\n    );\r\n  };\r\n  const CompanyProfileCard = () => {\r\n    return (\r\n      <Paper className={classes.paperLayout}>\r\n        <CompanyProfile companyInfo={companydummyData.companyIfno} />\r\n      </Paper>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid container direction=\"column\">\r\n        <Grid item>{CompanyHeader()}</Grid>\r\n        <Grid item>{CompanyRelatedArticlesAndData()}</Grid>\r\n        <Grid item xs>\r\n          {CompanyProfileCard()}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nCompany.propTypes = {};\r\n{\r\n  /* Company Chart + Financial Data  */\r\n}\r\nexport default Company;\r\n\r\n{\r\n  /* Related Article +  Copmany Data */\r\n}\r\n\r\nconst companydummyData = {\r\n  Symbol: \"AAPL\",\r\n  price: 123.3,\r\n  name: \"Apple Inc\",\r\n  changePrice: \"4.22(+2.32%)\",\r\n  companyIfno: {\r\n    name: \"Apple Inc\",\r\n    bio:\r\n      \"Apple Inc. designs, manufactures, and markets smartphones, personal computers, tablets, wearables, and accessories worldwide. It also      sells various related services. The company offers iPhone, More\",\r\n    sector: \"Tech\",\r\n    address: \"One Apple Park Way Cupertino, CA, 95014 United State\",\r\n    industry: \"Technology Hardware\",\r\n    phoneNumber: \"408-996-1010\",\r\n    website: \"www.apple.com\",\r\n  },\r\n};\r\nconst similarCompanydummyData = [\r\n  { Symbol: \"AAPL\", price: 293, changePrice: \"4.22(+2.32%)\" },\r\n  { Symbol: \"GOOG\", price: 351, changePrice: \"4.22(+2.32%)\" },\r\n  { Symbol: \"AMZN\", price: 120, changePrice: \"4.22(+2.32%)\" },\r\n  { Symbol: \"EBSY\", price: 963, changePrice: \"4.22(+2.32%)\" },\r\n  { Symbol: \"MOZA\", price: 56, changePrice: \"4.22(+2.32%)\" },\r\n  { Symbol: \"AAPL\", price: 293, changePrice: \"4.22(+2.32%)\" },\r\n  { Symbol: \"GOOG\", price: 351, changePrice: \"4.22(+2.32%)\" },\r\n  { Symbol: \"AMZN\", price: 120, changePrice: \"4.22(+2.32%)\" },\r\n  { Symbol: \"EBSY\", price: 963, changePrice: \"4.22(+2.32%)\" },\r\n  { Symbol: \"MOZA\", price: 56, changePrice: \"4.22(+2.32%)\" },\r\n  // { Symbol: \"NANI\", price: 123, changePrice: +21 },\r\n  // { Symbol: \"AAPL\", price: 293, changePrice: +192 },\r\n  // { Symbol: \"GOOG\", price: 351, changePrice: -122 },\r\n  // { Symbol: \"AMZN\", price: 120, changePrice: +50 },\r\n  // { Symbol: \"EBSY\", price: 963, changePrice: +124 },\r\n  // { Symbol: \"MOZA\", price: 56, changePrice: -56 },\r\n  // { Symbol: \"NANI\", price: 123, changePrice: +21 },\r\n];\r\nconst companyFinanceData = [\r\n  {\r\n    exchange: \"XSAU\",\r\n    Open: 18.12,\r\n    high: 18.3,\r\n    low: 18.1,\r\n    close: 18.22,\r\n    volume: 22366500,\r\n    date: \"2021-04-07T00:00:00+0000\",\r\n  },\r\n  {\r\n    exchange: \"XSAU\",\r\n    Open: 18.14,\r\n    high: 18.26,\r\n    low: 18.1,\r\n    close: 18.12,\r\n    volume: 11154793,\r\n    date: \"2021-04-06T00:00:00+0000\",\r\n  },\r\n  {\r\n    exchange: \"XSAU\",\r\n    Open: 18.2,\r\n    high: 18.24,\r\n    low: 18.1,\r\n    close: 18.14,\r\n    volume: 11616274,\r\n    date: \"2021-04-05T00:00:00+0000\",\r\n  },\r\n  {\r\n    exchange: \"XSAU\",\r\n    Open: 18.18,\r\n    high: 18.36,\r\n    low: 18.12,\r\n    close: 18.22,\r\n    volume: 8264137,\r\n    date: \"2021-04-04T00:00:00+0000\",\r\n  },\r\n  {\r\n    exchange: \"XSAU\",\r\n    Open: 18.3,\r\n    high: 18.42,\r\n    low: 18.16,\r\n    close: 18.18,\r\n    volume: 17543600,\r\n    date: \"2021-04-01T00:00:00+0000\",\r\n  },\r\n  {\r\n    exchange: \"XSAU\",\r\n    Open: 18.4,\r\n    high: 18.42,\r\n    low: 17.88,\r\n    close: 18.36,\r\n    volume: 37871632,\r\n    date: \"2021-03-31T00:00:00+0000\",\r\n  },\r\n  {\r\n    exchange: \"XSAU\",\r\n    Open: 17.78,\r\n    high: 17.88,\r\n    low: 17.7,\r\n    close: 17.76,\r\n    volume: 9146628,\r\n    date: \"2021-03-30T00:00:00+0000\",\r\n  },\r\n  {\r\n    exchange: \"XSAU\",\r\n    Open: 18.1,\r\n    high: 18.12,\r\n    low: 17.92,\r\n    close: 17.98,\r\n    volume: 14149700,\r\n    date: \"2021-04-08T00:00:00+0000\",\r\n  },\r\n];\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\profileSetting\\ProfileSetting.js",["247"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {\r\n    Divider,\r\n    Button,\r\n    Paper,\r\n    Grid,\r\n    Avatar,\r\n    TextField,\r\n\r\n} from '@material-ui/core';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PictureInPictureIcon from '@material-ui/icons/PictureInPicture';\r\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nconst img = \"avatars/7.jpg\";\r\nconst userInfo = {\r\n    name: \"Jhon Doe\",\r\n    img: img,\r\n    bio: \"Analyst\",\r\n};\r\nconst drawerWidth = 210;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n\r\n    drawer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n\r\n    appBar: {\r\n        marginTop: theme.spacing(8),\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            marginTop: theme.spacing(8.5),\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            marginLeft: drawerWidth,\r\n        },\r\n    },\r\n\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    // necessary for content to be below app bar\r\n    //   toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        position: 'absolute',\r\n        width: drawerWidth,\r\n        marginTop: theme.spacing(8.5),\r\n        height: theme.spacing(65.5),\r\n    },\r\n\r\n    content: {\r\n        flexGrow: 1,\r\n        // padding: theme.spacing(3),\r\n        paddingTop: theme.spacing(7),\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            paddingTop: theme.spacing(8),\r\n        },\r\n    },\r\n\r\n    helpButton: {\r\n        marginLeft: drawerWidth / 6,\r\n        width: theme.spacing(14),\r\n        marginTop: theme.spacing(3.5),\r\n\r\n    },\r\n\r\n    profilePaper: {\r\n        width: '100%',\r\n        padding: theme.spacing(5),\r\n        paddingTop: theme.spacing(7)\r\n\r\n    },\r\n\r\n    avatar: {\r\n        width: theme.spacing(12),\r\n        height: theme.spacing(12),\r\n    },\r\n\r\n    NameTypog: {\r\n        fontWeight: \"bold\",\r\n        fontSize: \"20px\"\r\n    },\r\n\r\n    inputValue: {\r\n        fontSize: \"20px\",\r\n        color: \"grey\"\r\n    },\r\n\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '35ch',\r\n    },\r\n\r\n    textFieldBio: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '35ch',\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            width: '74ch',\r\n        },\r\n    },\r\n\r\n    ReqEditBtn: {\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            marginTop: theme.spacing(5),\r\n        },\r\n    }\r\n\r\n}));\r\n\r\nfunction ProfileSetting(props) {\r\n    const { window } = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n\r\n    const itemsList = [\r\n        {\r\n            text: \"Profile\",\r\n            icon: <PictureInPictureIcon />,\r\n            onClick: () => history.push(\"/ProfileSetting\")\r\n        },\r\n        {\r\n            text: \"Account Securty\",\r\n            icon: <VerifiedUserIcon />,\r\n            onClick: () => history.push(\"/AccountSecurty\")\r\n        },\r\n\r\n    ];\r\n\r\n    const { history } = props;\r\n    const drawer = (\r\n        <div>\r\n            <div className={classes.toolbar} />\r\n            <Divider />\r\n            <List>\r\n                {itemsList.map((item, index) => {\r\n\r\n                    const { text, icon, onClick } = item;\r\n                    return (\r\n                        <ListItem button key={text} onClick={onClick}>\r\n                            {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n\r\n                    )\r\n                })}\r\n            </List>\r\n            <List>\r\n                <ListItem>\r\n                    <Button className={classes.helpButton} variant=\"outlined\">Help</Button></ListItem></List>\r\n        </div>\r\n    );\r\n\r\n    const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"absolute\" color=\"white\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        edge=\"start\"\r\n                        onClick={handleDrawerToggle}\r\n                        className={classes.menuButton}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h5\" noWrap>\r\n                        Profile\r\n          </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Drawer\r\n                        container={container}\r\n                        variant='temporary'\r\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                        open={mobileOpen}\r\n                        onClose={handleDrawerToggle}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true, // Better open performance on mobile.\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        variant=\"permanent\"\r\n                        open\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n            <main className={classes.content}>\r\n                <div />\r\n                <Paper className={classes.profilePaper} elevation={0}>\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify='center'\r\n                        alignItems=\"flex-start\"\r\n                        spacing={6}\r\n                    >\r\n\r\n                        <Grid item>\r\n                            <Avatar className={classes.avatar} alt={props.name} src={\"\"} />\r\n                        </Grid>\r\n\r\n                        <Grid item xs\r\n                            container\r\n                            direction=\"column\"\r\n                            justify='flex-start'\r\n                            alignItems=\"flex-start\"\r\n                            spacing={3}\r\n                        >\r\n\r\n                            <Grid item\r\n                                container\r\n                                direction=\"row\"\r\n                                justify='flex-start'\r\n                                alignItems=\"center\"\r\n                                spacing={3}>\r\n\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        label=\"First name\"\r\n                                        id=\"margin-none\"\r\n                                        // defaultValue=\"\"\r\n                                        className={classes.textField}\r\n                                    />\r\n                                </Grid>\r\n\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        label=\"Last name\"\r\n                                        id=\"margin-normal\"\r\n                                        // defaultValue=\"\"\r\n                                        className={classes.textField}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid item>\r\n                                <TextField\r\n                                    label=\"Username\"\r\n                                    id=\"margin-normal\"\r\n                                    // defaultValue=\"\"\r\n                                    className={classes.textField}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item>\r\n                                <TextField\r\n                                    className={classes.textFieldBio}\r\n                                    id=\"standard-multiline-flexible\"\r\n                                    label=\"Bio\"\r\n                                    multiline\r\n                                    rowsMax={4}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item\r\n                                container\r\n                                direction=\"row\"\r\n                                justify='flex-start'\r\n                                alignItems=\"center\"\r\n                                spacing={3}>\r\n\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        label=\"Compony\"\r\n                                        id=\"margin-none\"\r\n                                        // defaultValue=\"\"\r\n                                        className={classes.textField}\r\n                                    />\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        label=\"Linkedin\"\r\n                                        id=\"margin-normal\"\r\n                                        // defaultValue=\"\"\r\n                                        className={classes.textField}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid item\r\n                                container\r\n                                direction=\"row\"\r\n                                justify='flex-start'\r\n                                alignItems='flex-end'\r\n                                spacing={1}>\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={classes.ReqEditBtn}>\r\n                                        Request To Be Analyst\r\n                                </Button>\r\n                                </Grid>\r\n\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={classes.ReqEditBtn}>\r\n                                        Edit\r\n                                </Button>\r\n                                </Grid>\r\n\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nProfileSetting.propTypes = {\r\n\r\n    window: PropTypes.func,\r\n};\r\nexport default ProfileSetting","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Content\\Draft.js",["248","249","250","251","252","253"],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\profileSetting\\AccountSecurty.js",["254","255","256"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {\r\n    Divider,\r\n    Button,\r\n    Paper,\r\n    Grid,\r\n    Avatar,\r\n    TextField,\r\n    Input,\r\n    InputLabel,\r\n    FormControl,\r\n    Container\r\n\r\n} from '@material-ui/core';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PictureInPictureIcon from '@material-ui/icons/PictureInPicture';\r\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst img = \"avatars/7.jpg\";\r\nconst userInfo = {\r\n    name: \"Jhon Doe\",\r\n    img: img,\r\n    bio: \"Analyst\",\r\n};\r\n\r\nconst drawerWidth = 210;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        [theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n            // marginLeft: theme.spacing(5.13),\r\n\r\n            width: '100%',\r\n        },\r\n        position: 'absolute',\r\n        width: '448px',\r\n        // height: '471px',\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        [theme.breakpoints.between(\"sm\", \"md\")]: {\r\n            width: '448px',\r\n        },\r\n    },\r\n\r\n    root: {\r\n\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    appBar: {\r\n        marginTop: theme.spacing(8),\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            marginTop: theme.spacing(8.5),\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            marginLeft: drawerWidth,\r\n        },\r\n    },\r\n\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    // necessary for content to be below app bar\r\n    //   toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        position: 'absolute',\r\n        width: drawerWidth,\r\n        marginTop: theme.spacing(8.5),\r\n        height: theme.spacing(45.2),\r\n    },\r\n\r\n\r\n    content: {\r\n        flexGrow: 1,\r\n        // padding: theme.spacing(3),\r\n        paddingTop: theme.spacing(7),\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            paddingTop: theme.spacing(8),\r\n        },\r\n    },\r\n\r\n    helpButton: {\r\n        marginLeft: drawerWidth / 6,\r\n        width: theme.spacing(14),\r\n        marginTop: theme.spacing(3.5),\r\n\r\n    },\r\n    profilePaper: {\r\n        width: '100%',\r\n        padding: theme.spacing(5),\r\n        paddingTop: theme.spacing(7),\r\n\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            paddingTop: theme.spacing(13),\r\n\r\n        },\r\n    },\r\n\r\n    avatar: {\r\n        width: theme.spacing(12),\r\n        height: theme.spacing(12),\r\n    },\r\n\r\n    NameTypog: {\r\n        fontWeight: \"bold\",\r\n        fontSize: \"20px\"\r\n    },\r\n\r\n    inputValue: {\r\n        fontSize: \"20px\",\r\n        color: \"grey\"\r\n    },\r\n\r\n    textField: {\r\n        marginRight: theme.spacing(1),\r\n        width: '35ch',\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            marginLeft: theme.spacing(15),\r\n        },\r\n    },\r\n\r\n    textFieldBio: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '35ch',\r\n\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            width: '74ch',\r\n        },\r\n    },\r\n\r\n    ReqEditBtn: {\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            marginTop: theme.spacing(5),\r\n        },\r\n    },\r\n\r\n    ChaRestBtn: {\r\n        width: theme.spacing(12),\r\n        marginLeft: theme.spacing(7),\r\n    },\r\n\r\n\r\n\r\n    CancelBtn: {\r\n        fontSize: '20px',\r\n        fontWeight: '700',\r\n        [theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n            fontSize: '14px',\r\n        },\r\n    },\r\n\r\n    ChPasswordBtn: {\r\n        fontSize: '24px',\r\n        color: 'grey',\r\n        [theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n            fontSize: '16px',\r\n        },\r\n    },\r\n\r\n    ChPasstextField: {\r\n        [theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n            width: '300px'\r\n        },\r\n\r\n        marginTop: theme.spacing(5),\r\n        width: '366px'\r\n    },\r\n\r\n    DoneBtn: {\r\n        width: '320px',\r\n        marginTop: theme.spacing(2.5),\r\n        marginBottom: theme.spacing(2.5),\r\n    },\r\n\r\n    ForgetTypog: {\r\n        color: \"grey\",\r\n        fontWeight: '500',\r\n        fontSize: '14px'\r\n    },\r\n\r\n    ResetHereBtn: {\r\n        color: \"blue\",\r\n        fontWeight: '500',\r\n        fontSize: '14px'\r\n    },\r\n\r\n    PopperPassword: {\r\n        [theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n            width: '100%',\r\n            marginLeft: \"-6px\"\r\n        },\r\n    },\r\n\r\n    textFieldChEmail: {\r\n        width: '42ch',\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            width: '48ch',\r\n        }\r\n    },\r\n\r\n    ChEmailBtn: {\r\n        width: '320px',\r\n        marginTop: theme.spacing(3.5),\r\n        // marginBottom: theme.spacing(2.5),\r\n    }\r\n}));\r\n\r\nfunction AccountSecurty(props) {\r\n    const { window } = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n    const [values, setValues] = React.useState({\r\n        NewPassword: '',\r\n        CurrentPassword: '',\r\n        VerifyPassword: '',\r\n        password: '',\r\n        showPassword: false,\r\n    });\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n    const itemsList = [\r\n        {\r\n            text: \"Profile\",\r\n            icon: <PictureInPictureIcon />,\r\n            onClick: () => history.push(\"/ProfileSetting\")\r\n        },\r\n        {\r\n            text: \"Account Securty\",\r\n            icon: <VerifiedUserIcon />,\r\n            onClick: () => history.push(\"/AccountSecurty\")\r\n        },\r\n    ];\r\n    const { history } = props;\r\n    const drawer = (\r\n        <div>\r\n            <div className={classes.toolbar} />\r\n            <Divider />\r\n            <List>\r\n                {itemsList.map((item, index) => {\r\n\r\n                    const { text, icon, onClick } = item;\r\n                    return (\r\n                        <ListItem button key={text} onClick={onClick}>\r\n                            {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    )\r\n                })}\r\n            </List>\r\n\r\n            <List>\r\n                <ListItem>\r\n                    <Button className={classes.helpButton} variant=\"outlined\">Help</Button></ListItem></List>\r\n        </div>\r\n    );\r\n\r\n    const container = window !== undefined ? () => window().document.body : undefined;\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [openChange, setOpenChange] = React.useState(false);\r\n    const handleOpenChange = () => {\r\n        setOpenChange(true);\r\n    };\r\n    const handleCloseChange = () => {\r\n        setOpenChange(false);\r\n    };\r\n    const [openReset, setOpenReset] = React.useState(false);\r\n    const handleOpenReset = () => {\r\n        setOpenReset(true);\r\n    };\r\n    const handleCloseReset = () => {\r\n        setOpenReset(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"absolute\" color=\"white\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        edge=\"start\"\r\n                        onClick={handleDrawerToggle}\r\n                        className={classes.menuButton}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h5\" noWrap>\r\n                        Account Securty\r\n          </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Drawer\r\n                        container={container}\r\n                        variant=\"temporary\"\r\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                        open={mobileOpen}\r\n                        onClose={handleDrawerToggle}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true, // Better open performance on mobile.\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        variant=\"permanent\"\r\n                        open\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n            <main className={classes.content}>\r\n                <div />\r\n                <Paper className={classes.profilePaper} elevation={0}>\r\n                    <Grid item xs\r\n                        container\r\n                        direction=\"column\"\r\n                        justify='flex-start'\r\n                        alignItems='center'\r\n                        spacing={7}\r\n                    >\r\n                        <Grid item\r\n                            container\r\n                            direction=\"row\"\r\n                            justify='flex-start'\r\n                            alignItems='flex-end'\r\n                            spacing={2}\r\n                        >\r\n\r\n                            <Grid item>\r\n                                <TextField\r\n                                    label=\"Email\"\r\n                                    id=\"margin-none\"\r\n                                    InputProps={{\r\n                                        readOnly: true,\r\n                                    }}\r\n                                    defaultValue=\"UserEmail@gmail.com\"\r\n                                    // defaultValue=\"\"\r\n                                    className={classes.textField}\r\n                                // helperText=\"Some important text\"\r\n\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n\r\n                                <Button\r\n                                    onClick={handleOpenChange}\r\n\r\n                                    // aria-describedby={idChange}\r\n                                    variant=\"contained\"\r\n                                    size=\"medium\"\r\n                                    color=\"primary\"\r\n                                    className={classes.ChaRestBtn} >\r\n                                    Change\r\n                                 </Button>\r\n\r\n                                <Modal\r\n                                    disablePortal\r\n                                    disableEnforceFocus\r\n                                    disableAutoFocus\r\n\r\n\r\n                                    open={openChange}\r\n                                    onClose={handleCloseChange}\r\n                                    aria-labelledby=\"simple-modal-title\"\r\n                                    aria-describedby=\"simple-modal-description\"\r\n                                >\r\n\r\n\r\n                                    <div style={modalStyle} className={classes.paper}>\r\n\r\n                                        <Grid item\r\n                                            container\r\n                                            direction=\"column\"\r\n                                            justify='flex-start'\r\n                                            alignItems='center'\r\n                                            spacing={6}\r\n                                        >\r\n\r\n                                            <Grid item\r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justify='flex-start'\r\n                                                alignItems='flex-start'\r\n                                                spacing={10}\r\n                                            >\r\n                                                <Grid item><Typography className={classes.ChPasswordBtn}>Change password</Typography></Grid>\r\n                                                <Grid item> <Button onClick={handleCloseChange}><Typography className={classes.CancelBtn}>Cancel</Typography></Button></Grid>\r\n\r\n                                            </Grid>\r\n\r\n                                            <Grid item>\r\n                                                <TextField\r\n                                                    label=\"New Email\"\r\n                                                    id=\"margin-none\"\r\n                                                    // defaultValue=\"\"\r\n                                                    className={classes.textFieldChEmail}\r\n                                                />\r\n                                            </Grid>\r\n\r\n                                            <Grid item>\r\n                                                <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={classes.ChEmailBtn} >\r\n                                                    Change\r\n                                                  </Button>\r\n                                            </Grid>\r\n\r\n                                        </Grid>\r\n                                    </div>\r\n                                </Modal>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item\r\n                            container\r\n                            direction=\"row\"\r\n                            justify='flex-start'\r\n                            alignItems='flex-end'\r\n                            spacing={2}\r\n                        >\r\n\r\n                            <Grid item>\r\n                                <TextField\r\n                                    label=\"Password\"\r\n                                    id=\"margin-none\"\r\n                                    type=\"password\"\r\n                                    defaultValue=\"11111111\"\r\n                                    InputProps={{\r\n                                        readOnly: true,\r\n                                    }}\r\n                                    className={classes.textField}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item>\r\n                                <Button\r\n\r\n                                    onClick={handleOpenReset}\r\n                                    variant=\"contained\"\r\n                                    size=\"medium\"\r\n                                    color=\"primary\"\r\n                                    className={classes.ChaRestBtn} >\r\n                                    Reset\r\n                                </Button>\r\n\r\n\r\n\r\n                                <Modal\r\n                                    disablePortal\r\n                                    disableEnforceFocus\r\n                                    disableAutoFocus\r\n\r\n\r\n                                    open={openReset}\r\n                                    onClose={handleCloseReset}\r\n                                    aria-labelledby=\"simple-modal-title\"\r\n                                    aria-describedby=\"simple-modal-description\"\r\n                                >\r\n\r\n\r\n                                    <div style={modalStyle} className={classes.paper}>\r\n\r\n                                        <Grid item\r\n                                            container\r\n                                            direction=\"column\"\r\n                                            justify='flex-start'\r\n                                            alignItems='center'\r\n                                            spacing={2}\r\n                                        >\r\n\r\n                                            <Grid item\r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justify='flex-start'\r\n                                                alignItems='flex-start'\r\n                                                spacing={10}\r\n                                            >\r\n                                                <Grid item><Typography className={classes.ChPasswordBtn}>Change password</Typography></Grid>\r\n                                                <Grid item> <Button onClick={handleCloseReset}><Typography className={classes.CancelBtn}>Cancel</Typography></Button></Grid>\r\n\r\n                                            </Grid>\r\n\r\n                                            <Grid item>\r\n                                                <FormControl >\r\n                                                    <InputLabel htmlFor=\"standard-adornment-password\">Enter current password</InputLabel>\r\n                                                    <Input\r\n                                                        className={classes.ChPasstextField}\r\n                                                        id=\"standard-adornment-password\"\r\n                                                        type={values.showPassword ? 'text' : 'password'}\r\n                                                        value={values.CurrentPassword}\r\n                                                        onChange={handleChange('CurrentPassword')}\r\n                                                        endAdornment={\r\n                                                            <InputAdornment>\r\n                                                                <IconButton\r\n                                                                    aria-label=\"toggle password visibility\"\r\n                                                                    onClick={handleClickShowPassword}\r\n                                                                    onMouseDown={handleMouseDownPassword}\r\n                                                                    edge=\"end\"\r\n                                                                >\r\n                                                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                                </IconButton>\r\n                                                            </InputAdornment>\r\n                                                        }\r\n                                                    />\r\n                                                </FormControl>\r\n                                            </Grid>\r\n\r\n                                            <Grid item>\r\n\r\n                                                <FormControl >\r\n                                                    <InputLabel htmlFor=\"standard-adornment-password\">Enter new password</InputLabel>\r\n                                                    <Input\r\n                                                        className={classes.ChPasstextField}\r\n                                                        id=\"standard-adornment-password\"\r\n                                                        type={values.showPassword ? 'text' : 'password'}\r\n                                                        value={values.NewPassword}\r\n                                                        onChange={handleChange('NewPassword')}\r\n                                                        endAdornment={\r\n                                                            <InputAdornment>\r\n                                                                <IconButton\r\n                                                                    aria-label=\"toggle password visibility\"\r\n                                                                    onClick={handleClickShowPassword}\r\n                                                                    onMouseDown={handleMouseDownPassword}\r\n                                                                    edge=\"end\"\r\n                                                                >\r\n                                                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                                </IconButton>\r\n                                                            </InputAdornment>\r\n                                                        }\r\n                                                    />\r\n                                                </FormControl>\r\n                                            </Grid>\r\n\r\n                                            <Grid item>\r\n\r\n                                                <FormControl >\r\n                                                    <InputLabel htmlFor=\"standard-adornment-password\"> Verify password</InputLabel>\r\n                                                    <Input\r\n                                                        className={classes.ChPasstextField}\r\n                                                        id=\"standard-adornment-password\"\r\n                                                        type={values.showPassword ? 'text' : 'password'}\r\n                                                        value={values.VerifyPassword}\r\n                                                        onChange={handleChange('VerifyPassword')}\r\n                                                        endAdornment={\r\n                                                            <InputAdornment>\r\n                                                                <IconButton\r\n                                                                    aria-label=\"toggle password visibility\"\r\n                                                                    onClick={handleClickShowPassword}\r\n                                                                    onMouseDown={handleMouseDownPassword}\r\n                                                                    edge=\"end\"\r\n                                                                >\r\n                                                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                                </IconButton>\r\n                                                            </InputAdornment>\r\n                                                        }\r\n                                                    />\r\n                                                </FormControl>\r\n\r\n                                            </Grid>\r\n\r\n                                            <Grid item>\r\n                                                <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={classes.DoneBtn} >\r\n                                                    Done\r\n                                                  </Button>\r\n\r\n                                            </Grid>\r\n\r\n                                            <Container>  <Divider variant=\"middle\" /> </Container>\r\n\r\n                                            <Grid item\r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justify='center'\r\n                                                alignItems='center'\r\n                                                spacing={0}\r\n                                            >\r\n                                                <Grid item>    <Typography className={classes.ForgetTypog}>Forget Password?</Typography></Grid>\r\n                                                <Grid item> <Button className={classes.ResetHereBtn}>Reset here</Button></Grid>\r\n\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </div>\r\n                                </Modal>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nAccountSecurty.propTypes = {\r\n\r\n    window: PropTypes.func,\r\n};\r\nexport default AccountSecurty","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Portfolio.js",["257","258","259","260","261","262","263","264","265","266","267"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport { HomeCard } from \"./Home\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  Avatar,\r\n  Divider,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Link as RouterLink, Redirect } from \"react-router-dom\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { PORTFOLIO_GQL } from \"../graphql/Company/portfolioGql\";\r\nimport { NetworkStatus } from \"@apollo/client\";\r\nimport InputFormPort from \"../components/Company/inputformport\";\r\nimport EditFormport from \"../components/Company/edfitformport\";\r\nimport {\r\n  CompanyCardLine,\r\n  BigMiniCompanyCardTable,\r\n} from \"../components/Company/CompanyCard\";\r\nimport { Height } from \"@material-ui/icons\";\r\nimport { FollowerFollowingForm } from \"../components/UserInfo\";\r\nimport {\r\n  ContentCard,\r\n  ContentCardPaper,\r\n} from \"../components/Content/ContentCards\";\r\n\r\n// import {\r\n//   ContentCard,\r\n//   ContentCardPaper,\r\n// } from \"../components/Content/ContentCards\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  rootCom: {\r\n    // width: \"100%\",\r\n    paddingTop: theme.spacing(2),\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1),\r\n      marginRight: theme.spacing(3),\r\n      marginLeft: theme.spacing(3),\r\n    },\r\n  },\r\n\r\n  paper1: {\r\n    // width: \"100%\",\r\n    paddingBottom: theme.spacing(2),\r\n    marginTop: theme.spacing(1),\r\n    paddingTop: theme.spacing(1),\r\n    padding: theme.spacing(1),\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      paddingLeft: theme.spacing(6.5),\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  paper2: {\r\n    // width: \"100%\",\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(1),\r\n    paddingTop: theme.spacing(3),\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      paddingLeft: theme.spacing(6.5),\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n  },\r\n\r\n  AddEditBtn: {\r\n    marginTop: theme.spacing(2.5),\r\n  },\r\n\r\n  compCardLine: {\r\n    marginBottom: theme.spacing(6.3),\r\n  },\r\n\r\n  BtnsTypo: {\r\n    fontWeight: theme.typography.fontWeightBold,\r\n  },\r\n  avatar2: {\r\n    width: theme.spacing(9.3),\r\n    height: theme.spacing(9.3),\r\n\r\n    // [theme.breakpoints.between('sm', 'xl')]: {\r\n    //    width: theme.spacing(5.75),\r\n    //    height: theme.spacing(5.75),\r\n    // },\r\n  },\r\n\r\n  titleTypo: {\r\n    fontSize: \"24px\",\r\n  },\r\n\r\n  numberOfCommTypo: {\r\n    fontSize: \"16px\",\r\n    color: \"grey\",\r\n  },\r\n\r\n  labelTypo: {\r\n    fontSize: \"34px\",\r\n    color: \"grey\",\r\n  },\r\n\r\n  divForm: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction Portfolio(props) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const togglePopup = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n  const user = useContext(AuthContext);\r\n  // check if he has porfolio\r\n  const classes = useStyles();\r\n  const [Companies, setCompanies] = useState([]);\r\n\r\n  const Popup = (props) => {\r\n    return (\r\n      <div className=\"popup-box\">\r\n        <div className=\"box\">\r\n          <span className=\"close-icon\" onClick={props.handleClose}>\r\n            x\r\n          </span>\r\n          {props.content}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const { data, error, loading, refetch, networkStatus } = useQuery(\r\n    PORTFOLIO_GQL,\r\n    {\r\n      variables: {\r\n        id: user.user.id,\r\n      },\r\n      onCompleted(data) {\r\n        setCompanies(data.getCompanies);\r\n        console.log(data.findUser.username);\r\n      },\r\n    }\r\n  );\r\n  if (networkStatus === NetworkStatus.refetch) return \"Refetching!\";\r\n  if (loading) return <CircularProgress />;\r\n  if (error) return <Redirect to=\"/404\" />;\r\n\r\n  const img = \"avatars/7.jpg\";\r\n  const Followers = (FollowersDocs) => (\r\n    <ContentCardPaper\r\n      data={FollowersDocs}\r\n      limit={6}\r\n      auther\r\n      title={\"Articles\"}\r\n    />\r\n  );\r\n\r\n  const CompanyHeader = () => {\r\n    return (\r\n      <div className={classes.rootCom}>\r\n        {/* Compnany line + 2 Content cards  */}\r\n\r\n        <Paper className={classes.paper1}>\r\n          <Grid container direction=\"column\">\r\n            {/* Company Line */}\r\n\r\n            <CompanyCardLine data={data.getCompanies} />\r\n\r\n            <Grid item xs>\r\n              <BigMiniCompanyCardTable\r\n                data={data.findUser.portofolio[0].followedCompanies}\r\n                limit={4}\r\n                minWidth={400}\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              container\r\n              direction=\"row\"\r\n              alignItems\r\n              justify=\"flex-end\"\r\n              spacing={2}\r\n            >\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  value=\"Create Portfolio\"\r\n                  className={classes.AddEditBtn}\r\n                  startIcon={<CreateIcon />}\r\n                  onClick={togglePopup}\r\n                >\r\n                  Edit\r\n                </Button>\r\n              </Grid>\r\n              {isOpen && (\r\n                <Popup\r\n                  content={\r\n                    <>\r\n                      <EditFormport\r\n                        portoId={data.findUser.portofolio[0].id}\r\n                      ></EditFormport>\r\n                    </>\r\n                  }\r\n                  handleClose={togglePopup}\r\n                />\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n\r\n        <Paper className={classes.paper2}>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            // alignItems\r\n            // justify='flex-end'\r\n          >\r\n            <Grid item container direction=\"row\" spacing={2} xs>\r\n              <Grid item>\r\n                {\" \"}\r\n                <Button variant=\"contained\">\r\n                  <Typography className={classes.BtnsTypo}>Latest</Typography>\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                {\" \"}\r\n                <Button variant=\"contained\">\r\n                  <Typography className={classes.BtnsTypo}>Articles</Typography>\r\n                </Button>\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                {\" \"}\r\n                <Button variant=\"contained\">\r\n                  <Typography className={classes.BtnsTypo}>News</Typography>\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                {\" \"}\r\n                <Button variant=\"contained\">\r\n                  <Typography className={classes.BtnsTypo}>Analyst</Typography>\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <Typography className={classes.labelTypo}>Articles</Typography>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              {Followers(data.findUser.portofolio[0].relatedArticles)}\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (data.findUser.portofolio == null || data.findUser.portofolio.length < 1) {\r\n    return (\r\n      // <div>\r\n      // <Grid item>\r\n      //   <p>please create portfolio</p>\r\n      //   <CButton >\r\n\r\n      //     <InputFormPort buttonName=\"Edit\"\r\n      //     />\r\n      //   </CButton>\r\n      // </Grid>\r\n      // </div>\r\n      <div className={classes.paper}>\r\n        <p>Please create a portfolio</p>\r\n        <Grid item>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            value=\"Create Portfolio\"\r\n            className={classes.AddEditBtn}\r\n            startIcon={<CreateIcon />}\r\n            onClick={togglePopup}\r\n          >\r\n            Create Portfolio\r\n          </Button>\r\n        </Grid>\r\n        {isOpen && (\r\n          <Popup\r\n            content={\r\n              <>\r\n                <InputFormPort></InputFormPort>\r\n              </>\r\n            }\r\n            handleClose={togglePopup}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Grid item>{CompanyHeader()}</Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Portfolio;\r\n\r\nexport function ArticlesForm(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.divForm}>\r\n      <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n        {/* // User Avatar  */}\r\n        <Grid item>\r\n          <Avatar\r\n            className={classes.avatar2}\r\n            alt={props.name}\r\n            src={props.avatar}\r\n          />\r\n        </Grid>\r\n\r\n        {/* // User info  */}\r\n        <Grid\r\n          item\r\n          xs=\"8\"\r\n          container\r\n          alignItems=\"flex-start\"\r\n          justify=\"flex-start\"\r\n          direction=\"column\"\r\n        >\r\n          <Grid item>\r\n            {\" \"}\r\n            <Typography className={classes.titleTypo} variant=\"subtitle1\">\r\n              {props.title}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            container\r\n            alignItems=\"flex-start\"\r\n            justify=\"flex-start\"\r\n            direction=\"row\"\r\n          >\r\n            <Grid item>\r\n              <Typography\r\n                className={classes.numberOfCommTypo}\r\n                variant=\"subtitle2\"\r\n              >\r\n                {props.editors}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <Typography\r\n                className={classes.numberOfCommTypo}\r\n                variant=\"subtitle2\"\r\n              >\r\n                {props.numberOfComm}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Divider variant=\"middle\" />\r\n    </div>\r\n  );\r\n}\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Home.js",["268","269"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Link as RouterLink, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  CompanyCardLine,\r\n  MiniCompanyCardTable,\r\n} from \"../components/Company/CompanyCard\";\r\nimport {\r\n  ContentCard,\r\n  ContentCardPaper,\r\n} from \"../components/Content/ContentCards\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { HOMEPAGE_GQL } from \"../graphql/homeGql\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  rootCom: {\r\n    // width: \"100%\",\r\n    paddingTop: theme.spacing(2),\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1),\r\n      marginRight: theme.spacing(3),\r\n      marginLeft: theme.spacing(3),\r\n    },\r\n  },\r\n  cardStyle: {\r\n    width: \"100%\",\r\n    paddingBottom: theme.spacing(2),\r\n\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      // width: \"660px\",\r\n      paddingRight: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2),\r\n    },\r\n  },\r\n  cardBtn: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(0.5),\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      // marginRight: theme.spacing(1),\r\n      marginLeft: theme.spacing(4),\r\n      display: \"inline-flex\",\r\n    },\r\n  },\r\n  companyLine: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    flexWrap: \"no-wrap\",\r\n    overflowX: \"scroll\",\r\n    overflowY: \"hidden\",\r\n    // whiteSpace: 'nowrap',\r\n    padding: theme.spacing(0),\r\n    \"-webkit-overflow-scrolling\": \"touch\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  porto: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n\r\n    marginBottom: theme.spacing(8),\r\n    \"& .MuiGrid-container\": {\r\n      alignItems: \"center\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Home() {\r\n  const classes = useStyles();\r\n  const { data, error, loading } = useQuery(HOMEPAGE_GQL);\r\n  if (loading) return <CircularProgress />;\r\n  if (error) return <Redirect to=\"/404\" />;\r\n\r\n  return (\r\n    <div className={classes.rootCom}>\r\n      {/* Compnany line + 2 Content cards  */}\r\n\r\n      <Paper>\r\n        <Grid container direction=\"column\">\r\n          {/* Company Line */}\r\n\r\n          <CompanyCardLine data={data.getCompanies} />\r\n          <Grid container direction=\"row\" xs justify=\"space-between\">\r\n            <Grid item sm xs md={5}>\r\n              {/* Trending Card */}\r\n              <HomeCard\r\n                cardTitle=\"Trending Analysis\"\r\n                dataLimit={5}\r\n                data={data.getArticles}\r\n                btnText=\"More\"\r\n                auther\r\n              />\r\n            </Grid>\r\n\r\n            {/* News */}\r\n            <Grid item md={5}>\r\n              {/* Trending Card */}\r\n              <HomeCard\r\n                cardTitle=\"News\"\r\n                dataLimit={4}\r\n                data={contentdummyData}\r\n                btnText=\"More\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n\r\n      {/* Editors Picks + Latest Articles */}\r\n\r\n      <Grid container direction=\"row\" xs justify=\"space-between\">\r\n        <Grid item xs={12} lg={5}>\r\n          <Paper>\r\n            <HomeCard\r\n              dataLimit={3}\r\n              cardTitle=\"Editors Picks\"\r\n              data={data.getArticles}\r\n              btnText=\"Explore More\"\r\n              auther\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs lg={5}>\r\n          <Paper>\r\n            <HomeCard\r\n              dataLimit={3}\r\n              cardTitle=\"Latest Articles\"\r\n              data={data.getArticles}\r\n              btnText=\"Explore More\"\r\n              auther\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n      {/* Portfolio : (Compnay + Articles) */}\r\n      <Paper className={classes.porto}>\r\n        <div>\r\n          <Typography variant=\"h4\" align=\"center\">\r\n            My Portfolio\r\n          </Typography>\r\n        </div>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-around\"\r\n          alignContent=\"center\"\r\n        >\r\n          {/* Company */}\r\n          <Grid item xs lg={5}>\r\n            <MiniCompanyCardTable data={data.getCompanies} limit={4} />\r\n          </Grid>\r\n          {/* Articles */}\r\n          <Grid item xs lg={5}>\r\n            <ContentCardPaper data={data.getArticles} limit={3} auther />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      {/* About Alpha+ ? */}\r\n      <Container></Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function HomeCard(props) {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = useState({\r\n    mobileView: false,\r\n  });\r\n\r\n  const { mobileView } = state;\r\n\r\n  useEffect(() => {\r\n    const setResponsiveness = () => {\r\n      return window.innerWidth < 900\r\n        ? setState((prevState) => ({ ...prevState, mobileView: true }))\r\n        : setState((prevState) => ({ ...prevState, mobileView: false }));\r\n    };\r\n\r\n    setResponsiveness();\r\n\r\n    window.addEventListener(\"resize\", () => setResponsiveness());\r\n  }, []);\r\n  const cardButton = () =>\r\n    mobileView ? (\r\n      <Button\r\n        className={classes.cardBtn}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        component={RouterLink}\r\n        to=\"/\"\r\n      >\r\n        {props.btnText}\r\n      </Button>\r\n    ) : (\r\n      <Button\r\n        className={classes.cardBtn}\r\n        color=\"primary\"\r\n        size=\"medium\"\r\n        component={RouterLink}\r\n        to=\"/\"\r\n      >\r\n        {`${props.btnText} >>`}\r\n      </Button>\r\n    );\r\n\r\n  return (\r\n    <div className={classes.cardStyle}>\r\n      {/* Trending Card */}\r\n      <ContentCardPaper\r\n        limit={props.dataLimit}\r\n        title={props.cardTitle}\r\n        data={props.data}\r\n        auther={props.auther}\r\n      />\r\n      {cardButton()}\r\n    </div>\r\n  );\r\n}\r\nHome.defaultProps = {\r\n  auther: false,\r\n};\r\nHome.propTypes = {\r\n  cardTitle: PropTypes.string,\r\n  dataLimit: PropTypes.number,\r\n  data: PropTypes.array,\r\n  btnText: PropTypes.string,\r\n  btnRoute: PropTypes.string,\r\n  auther: PropTypes,\r\n};\r\n\r\nconst companydummyData = [\r\n  { Symbol: \"AAPL\", price: 293, changePrice: \"4.2(-8%)\" },\r\n  { Symbol: \"GOOG\", price: 351, changePrice: \"4.2(+8%)\" },\r\n  { Symbol: \"AMZN\", price: 120, changePrice: \"4.2(-8%)\" },\r\n  { Symbol: \"EBSY\", price: 963, changePrice: \"4.2(-8%)\" },\r\n  { Symbol: \"MOZA\", price: 56, changePrice: \"4.2(+3%)\" },\r\n  { Symbol: \"NANI\", price: 123, changePrice: \"4.2(-8%)\" },\r\n  { Symbol: \"AAPL\", price: 293, changePrice: \"4.2(-8%)\" },\r\n  { Symbol: \"GOOG\", price: 351, changePrice: \"4.2(+9%)\" },\r\n  { Symbol: \"AMZN\", price: 120, changePrice: \"4.2(-8%)\" },\r\n  { Symbol: \"EBSY\", price: 963, changePrice: \"4.2(-8%)\" },\r\n  { Symbol: \"MOZA\", price: 56, changePrice: \"4.2(-8%)\" },\r\n  { Symbol: \"NANI\", price: 123, changePrice: \"4.2(-8%)\" },\r\n];\r\nconst contentdummyData = [\r\n  {\r\n    name: \"jhon Doe\",\r\n    img: \"Jh\",\r\n    title: \"This a test dummy title\",\r\n    bio: \"simpleBio\",\r\n  },\r\n  {\r\n    name: \"Ziad Fnan\",\r\n    img: \"Zi\",\r\n    title: \"Don't Miss This intersting analyst\",\r\n    bio: \"simpleBio\",\r\n  },\r\n  {\r\n    name: \"Abo Motlaq\",\r\n    img: \"AH\",\r\n    title: \"I only love apple products\",\r\n    bio: \"simpleBio\",\r\n  },\r\n  {\r\n    name: \"Aziz Amir\",\r\n    img: \"AA\",\r\n    title: \"Play it cool with your stocks\",\r\n    bio: \"simpleBio\",\r\n  },\r\n  {\r\n    name: \"Saleh Mogren\",\r\n    img: \"SM\",\r\n    title: \"How to write dummy data like a pro\",\r\n    bio: \"simpleBio\",\r\n  },\r\n];\r\n\r\nexport default Home;\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\storage\\index.ts",[],["270","271"],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\UI\\messages.js",["272"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport function CustomizedSnackbars(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  //   const handleClick = () => {\r\n  //     setOpen(true);\r\n  //   };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={props.color}>\r\n          {props.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\util\\hooks.js",["273","274","275","276"],"import { gql, useMutation } from \"@apollo/client\";\r\nimport { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { FOLLOW_USER_GQL } from \"../graphql/Auth/authGql\";\r\nimport { FOLLOW_COMPANY_GQL } from \"../graphql/Company/portfolioGql\";\r\nimport { LIKE_ARTCIEL_GQL } from \"../graphql/Content/articleGql\";\r\nimport { saveUserConfig, userConfigVar } from \"../storage/userConfig\";\r\n\r\nexport const useForm = (callback, initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const onChange = (event) => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    callback();\r\n  };\r\n\r\n  return {\r\n    onChange,\r\n    onSubmit,\r\n    values,\r\n  };\r\n};\r\n\r\nexport const useFollow = (id, initialState = false) => {\r\n  const [followed, setFollowed] = useState(initialState);\r\n  const { user } = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const toggleFollow = () => {\r\n    if (user) {\r\n      setFollowed(!followed);\r\n      callFollow();\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n  const [callFollow, { loading }] = useMutation(FOLLOW_USER_GQL, {\r\n    variables: {\r\n      userId: id,\r\n    },\r\n    update(_, { data: { followUser: currentUser } }) {\r\n      userConfigVar({\r\n        followedUsers: currentUser.following,\r\n        portfolio: userConfigVar().portfolio,\r\n        username: userConfigVar().username,\r\n      });\r\n      saveUserConfig();\r\n      console.log(userConfigVar().followedUsers);\r\n    },\r\n  });\r\n\r\n  return {\r\n    followed,\r\n    toggleFollow,\r\n  };\r\n};\r\nexport const useLike = (articleId, initialState = false) => {\r\n  const [liked, setLiked] = useState(initialState);\r\n  const { user } = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const toggleLike = () => {\r\n    if (user) {\r\n      setLiked(!liked);\r\n      callLiked();\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n  // const {user}=useContext(AuthContext);\r\n  // follow mutaion ==> updates cache\r\n  const [callLiked, { loading }] = useMutation(LIKE_ARTCIEL_GQL, {\r\n    variables: {\r\n      articleId,\r\n    },\r\n    update(_, { data: { likeArticle: LikedArticle } }) {\r\n      // userConfigVar({\r\n      //   followedUsers: currentUser.following,\r\n      // });\r\n      saveUserConfig();\r\n      // console.log(userConfigVar().followedUsers);\r\n    },\r\n  });\r\n  return {\r\n    liked,\r\n    toggleLike,\r\n  };\r\n};\r\nexport const useCompanyFollow = (companySybmol, initialState = false) => {\r\n  const [followedCompany, setFollowedCompany] = useState(initialState);\r\n  const { user } = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const toggleFollowCompany = () => {\r\n    if (user) {\r\n      setFollowedCompany(!followedCompany);\r\n      callFollowCompany();\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n  const porto = userConfigVar().portfolio;\r\n  // const {user}=useContext(AuthContext);\r\n  // follow mutaion ==> updates cache\r\n  const [callFollowCompany, { loading }] = useMutation(FOLLOW_COMPANY_GQL, {\r\n    variables: {\r\n      portoId: porto.id,\r\n      symbol: companySybmol,\r\n    },\r\n    update(_, { data: { followCompany: portfolio } }) {\r\n      userConfigVar({\r\n        portfolio: portfolio,\r\n        followedUsers: userConfigVar().followedUsers,\r\n        username: userConfigVar().username,\r\n      });\r\n      saveUserConfig();\r\n      // console.log(userConfigVar().followedUsers);\r\n    },\r\n  });\r\n  return {\r\n    followedCompany,\r\n    toggleFollowCompany,\r\n  };\r\n};\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\homeGql.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Auth\\authGql.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Content\\ContentCards.js",["277","278","279","280","281"],"import React, { useEffect, useState } from \"react\";\r\nimport PropTypes, { func } from \"prop-types\";\r\nimport {\r\n  Avatar,\r\n  ButtonBase,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  Container,\r\n  Card,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginLeft: 0,\r\n    paddingTop: theme.spacing(1),\r\n    paddingLeft: theme.spacing(2),\r\n    \"& hr\": {\r\n      margin: theme.spacing(1),\r\n      alignSelf: \"stretch\",\r\n    },\r\n    alignItems: \"center\",\r\n  },\r\n  title: {\r\n    overflowWrap: \"anywhere\",\r\n    textDecoration: \"none\",\r\n    \"&:visited\": {\r\n      color: theme.palette.common.black,\r\n    },\r\n    padding: theme.spacing(1),\r\n  },\r\n  cardLayout: {\r\n    marginTop: theme.spacing(2),\r\n    \"& .MuiTypography-h5\": {\r\n      paddingLeft: theme.spacing(2),\r\n      color: theme.palette.grey[700],\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: theme.typography.fontSize,\r\n      marginTop: theme.spacing(4),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction ContentCard(props) {\r\n  const [state, setState] = useState({\r\n    withAuther: false,\r\n    crudOtion: false,\r\n  });\r\n  useEffect(() => {\r\n    if (props.withAuther)\r\n      setState({\r\n        withAuther: props.withAuther,\r\n      });\r\n    if (props.crudOtion)\r\n      setState({\r\n        crudOtion: props.crudOtion,\r\n      });\r\n  }, []);\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        {state.withAuther ? (\r\n          <Grid item>\r\n            <Avatar alt={props.name} src={props.img} />\r\n          </Grid>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n\r\n        {/* // Content info  */}\r\n        <Grid item sm>\r\n          <Grid item container direction=\"column\">\r\n            <Grid item>\r\n              <Typography\r\n                component={RouterLink}\r\n                to={props.link}\r\n                variant=\"h6\"\r\n                className={classes.title}\r\n              >\r\n                {props.title}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\">{props.bio}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {/* // Crud Buttons */}\r\n        {state.crudOtion ? (\r\n          <Grid container item>\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              Edit\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"secondary\">\r\n              Delete\r\n            </Button>\r\n          </Grid>\r\n        ) : null}\r\n      </Grid>\r\n      <Divider variant=\"fullWidth\" />\r\n    </div>\r\n  );\r\n}\r\nContentCard.defaultProps = {\r\n  withAuther: false,\r\n  crudOtion: false,\r\n  link: \"/\",\r\n};\r\nContentCard.propTypes = {\r\n  withAuther: PropTypes.bool,\r\n  crudOtion: PropTypes.bool,\r\n  name: PropTypes.string,\r\n  img: PropTypes.string,\r\n  bio: PropTypes.string,\r\n  title: PropTypes.string,\r\n  link: PropTypes.string,\r\n};\r\nfunction ContentCardPaper(props) {\r\n  const classes = useStyles();\r\n\r\n  const ContentCardsItems = () =>\r\n    props.data.slice(0, props.limit).map((e) => {\r\n      return (\r\n        <ContentCard\r\n          title={e.articleTitle ? e.articleTitle : e.title}\r\n          name={e.articleAuthor ? e.articleAuthor.name : e.name}\r\n          img={e.img}\r\n          bio={e.bio}\r\n          withAuther={props.auther}\r\n          link={`/article/${e.id}`}\r\n        />\r\n      );\r\n    });\r\n  return (\r\n    <div className={classes.cardLayout}>\r\n      <Typography variant=\"h5\">{props.title}</Typography>\r\n      {ContentCardsItems()}\r\n    </div>\r\n  );\r\n}\r\nContentCardPaper.defaultProps = {\r\n  auther: false,\r\n};\r\nContentCardPaper.propTypes = {\r\n  limit: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  auther: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport { ContentCard, ContentCardPaper };\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\storage\\cache.ts",["282","283"],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Company\\CompanyCard.js",["284","285","286","287","288","289","290","291","292","293","294","295"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Divider,\r\n  Typography,\r\n  Grid,\r\n  IconButton,\r\n  Table,\r\n  TableRow,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableBody,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  AreaChart,\r\n  ResponsiveContainer,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n} from \"recharts\";\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport KeyboardArrowLeftIcon from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useCompanyFollow } from \"../../util/hooks\";\r\n\r\nconst userStyles = makeStyles((theme) => ({\r\n  companySymbol: {\r\n    color: theme.palette.primary.light,\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      fontSize: theme.typography.fontSize * 1.5,\r\n    },\r\n  },\r\n  price: {\r\n    color: theme.palette.common.black,\r\n    fontWeight: theme.typography.fontWeightBold,\r\n  },\r\n  changePrice: {\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      fontSize: theme.typography.fontSize,\r\n    },\r\n  },\r\n\r\n  tableContent: {\r\n    fontWeight: \"400px\",\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      fontSize: \"24px\",\r\n    },\r\n  },\r\n\r\n  negative: {\r\n    color: theme.palette.error.dark,\r\n  },\r\n  positvie: {\r\n    color: theme.palette.success.dark,\r\n  },\r\n  verticalCard: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    padding: theme.spacing(1),\r\n    paddingRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      paddingRight: theme.spacing(10),\r\n    },\r\n  },\r\n  vertRoot: {\r\n    // \"& hr\": {\r\n    //   margin: theme.spacing(0, 0.5),\r\n    //   alignSelf: \"stretch\",\r\n    //   height: \"auto\",\r\n    // },\r\n    borderRight: `2px solid ${theme.palette.divider}`,\r\n    borderRadius: theme.shape.borderRadius,\r\n    paddingRight: theme.spacing(2),\r\n    marginLeft: theme.spacing(1),\r\n    \"& .price\": {\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n    // paddingLeft:theme.spacing(1)\r\n  },\r\n  companyLine: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    flexWrap: \"nowrap\",\r\n    overflowX: \"scroll\",\r\n    overflowY: \"hidden\",\r\n    // whiteSpace: 'nowrap',\r\n    padding: theme.spacing(0),\r\n    \"-webkit-overflow-scrolling\": \"touch\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n    scrollBehavior: \"smooth\",\r\n  },\r\n  companyLineScroll: {\r\n    width: \"100%\",\r\n    overflowX: \"auto\",\r\n    \"-webkit-overflow-scrolling\": \"touch\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n    \"& .vertRoot\": {\r\n      flex: \"0 0 auto\",\r\n      marginRight: \" 3px\",\r\n    },\r\n  },\r\n  arrowButtons: {\r\n    zIndex: 2,\r\n    transform: \"matrix(-1, 0, 0, 1, 0, 0)\",\r\n    paddingLeft: theme.spacing(1),\r\n  },\r\n  minitable: {\r\n    minWidth: 340,\r\n    \"& .MuiTableCell-head\": {\r\n      fontWeight: theme.typography.fontWeightBold,\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        fontSize: theme.typography.fontSize * 1.2,\r\n      },\r\n    },\r\n    \"& .MuiTableCell-root\": {\r\n      padding: theme.spacing(1),\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      minWidth: 400,\r\n    },\r\n  },\r\n  followCardLayout: {\r\n    padding: theme.spacing(2),\r\n    \"& .MuiTypography-h5\": {\r\n      fontWeight: theme.typography.fontWeightBold,\r\n      fontSize: theme.typography.fontSize * 2,\r\n    },\r\n    \"& .MuiTypography-body1\": {\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n      fontSize: theme.typography.fontSize * 1.5,\r\n      [theme.breakpoints.up(\"lg\")]: {\r\n        paddingLeft: theme.spacing(1),\r\n      },\r\n    },\r\n    \"& .MuiTypography-h6\": {\r\n      fontWeight: theme.typography.fontWeightBold,\r\n      fontSize: theme.typography.fontSize * 2,\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      \"& .MuiGrid-justify-xs-space-between\": {\r\n        alignItems: \"center\",\r\n      },\r\n    },\r\n  },\r\n  typographyDiv_followCardLayout: {\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n  },\r\n  ChartRoot: {\r\n    width: 400,\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: 900,\r\n    },\r\n  },\r\n  LeftCol: {\r\n    paddingLeft: theme.spacing(5),\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      marginRight: theme.spacing(4),\r\n    },\r\n  },\r\n  CompanyProfileLayout: {\r\n    padding: theme.spacing(2),\r\n    // width: \"100%\",\r\n  },\r\n  labelLayout: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    fontSize: theme.typography.fontSize * 1.5,\r\n    paddingTop: theme.spacing(2),\r\n    padding: theme.spacing(1),\r\n    \"& p\": {\r\n      paddingLeft: theme.spacing(12),\r\n    },\r\n  },\r\n}));\r\n\r\n// Variant , Size\r\n\r\n// Data : Symbol(Compnay) , Price , Change\r\nfunction CompanyCard(props) {\r\n  const classes = userStyles();\r\n  const VerticalCard = () => {\r\n    return (\r\n      <div className={classes.vertRoot}>\r\n        <Grid Container className={classes.verticalCard} direction=\"row\">\r\n          <Grid item>\r\n            <Typography\r\n              component={Link}\r\n              to={`/company/${props.comId}`}\r\n              target=\"_blank\"\r\n              variant=\"subtitle2\"\r\n              className={classes.companySymbol}\r\n            >\r\n              {props.Symbol}\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" className={classes.price}>\r\n              {props.price}\r\n            </Typography>\r\n            <ChangePriceValue changePrice={props.change} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Divider orientation=\"vertical\" />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  };\r\n  const horizontalCard = () => {\r\n    return (\r\n      <TableRow>\r\n        <TableCell>\r\n          <Typography variant=\"subtitle2\" className={classes.companySymbol}>\r\n            {props.Symbol}\r\n          </Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography variant=\"subtitle2\" className={classes.tableContent}>\r\n            {props.price}\r\n          </Typography>\r\n        </TableCell>{\" \"}\r\n        <TableCell>\r\n          <ChangePriceValue changePrice={props.change} />\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography variant=\"subtitle2\" className={classes.tableContent}>\r\n            {props.volume}\r\n          </Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography variant=\"subtitle2\" className={classes.tableContent}>\r\n            {props.avgVolume}\r\n          </Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography variant=\"subtitle2\" className={classes.tableContent}>\r\n            {props.prevClose}\r\n          </Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography variant=\"subtitle2\" className={classes.tableContent}>\r\n            {props.open}\r\n          </Typography>\r\n        </TableCell>\r\n      </TableRow>\r\n    );\r\n  };\r\n  return props.vertical ? VerticalCard() : horizontalCard();\r\n}\r\n\r\nCompanyCard.defaultProps = {\r\n  vertical: false,\r\n  horizontal: false,\r\n};\r\nCompanyCard.propTypes = {\r\n  vertical: PropTypes.bool.isRequired,\r\n  horizontal: PropTypes.bool.isRequired,\r\n  name: PropTypes.string,\r\n  Symbol: PropTypes.string.isRequired,\r\n  price: PropTypes.number.isRequired,\r\n  change: PropTypes.number.isRequired,\r\n  changePerce: PropTypes.number.isRequired,\r\n  volume: PropTypes.number.isRequired,\r\n  avgVolume: PropTypes.number.isRequired,\r\n  prevClose: PropTypes.number.isRequired,\r\n  open: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction CompanyCardLine(props) {\r\n  const ref = useRef(null);\r\n\r\n  const scroll = (scrollOffset) => {\r\n    ref.current.scrollLeft += scrollOffset;\r\n  };\r\n  const classes = userStyles();\r\n\r\n  return (\r\n    <div className={classes.companyLineScroll}>\r\n      <div className={classes.companyLine} ref={ref}>\r\n        {props.data.map((e) => (\r\n          <CompanyCard\r\n            vertical={true}\r\n            Symbol={e.symbol ? e.symbol : e.Symbol}\r\n            price={e.todayFinance ? e.todayFinance.close : e.price}\r\n            change={e.change ? e.change : e.changePrice}\r\n            comId={e.id}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className={classes.arrowButtons}>\r\n        <IconButton size=\"small\" onClick={() => scroll(500)}>\r\n          <KeyboardArrowLeftIcon fontSize=\"small\" />\r\n        </IconButton>\r\n        <IconButton size=\"small\" onClick={() => scroll(-500)}>\r\n          <KeyboardArrowRightIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nCompanyCardLine.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n};\r\n\r\nfunction MiniCompanyCardTable(props) {\r\n  const classes = userStyles();\r\n\r\n  return (\r\n    <TableContainer\r\n      className={classes.minitable}\r\n      style={{ minWidth: props.minWidth == 0 ? \"inherent\" : props.minWidth }}\r\n    >\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"left\">Company</TableCell>\r\n            <TableCell align=\"center\">Price</TableCell>\r\n            <TableCell align=\"right\">Change</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {props.data.slice(0, props.limit).map((e) => (\r\n            <CompanyCard\r\n              Symbol={e.symbol ? e.symbol : e.Symbol}\r\n              price={e.todayFinance ? e.todayFinance.close : e.price}\r\n              change={e.change ? e.change : e.changePrice}\r\n              horizontal\r\n            />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\nMiniCompanyCardTable.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  limit: PropTypes.number,\r\n  minWidth: PropTypes.number,\r\n};\r\nMiniCompanyCardTable.defaultProps = {\r\n  limit: 0,\r\n  minWidth: 0,\r\n};\r\n\r\nexport function BigMiniCompanyCardTable(props) {\r\n  const classes = userStyles();\r\n\r\n  return (\r\n    <TableContainer\r\n      className={classes.minitable}\r\n      style={{ minWidth: props.minWidth == 0 ? \"inherent\" : props.minWidth }}\r\n    >\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell style={{ fontWeight: \"400\" }}>Company</TableCell>\r\n            <TableCell style={{ fontWeight: \"400\" }}>Price</TableCell>\r\n            <TableCell style={{ fontWeight: \"400\" }}>Change</TableCell>\r\n\r\n            <TableCell style={{ fontWeight: \"400\" }}>Volume</TableCell>\r\n            <TableCell style={{ fontWeight: \"400\" }}>Avg.Volume</TableCell>\r\n            <TableCell style={{ fontWeight: \"400\" }}>Prev.close</TableCell>\r\n            <TableCell style={{ fontWeight: \"400\" }}>Open</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {props.data.slice(0, props.limit).map((e) => (\r\n            <CompanyCard\r\n              Symbol={e.symbol}\r\n              price={e.todayFinance.close}\r\n              change={e.change}\r\n              changePerce={0}\r\n              volume={e.todayFinance.volume}\r\n              avgVolume={0}\r\n              prevClose={0}\r\n              open={e.todayFinance.Open}\r\n              horizontal\r\n            />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\nBigMiniCompanyCardTable.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  limit: PropTypes.number,\r\n  minWidth: PropTypes.number,\r\n};\r\nBigMiniCompanyCardTable.defaultProps = {\r\n  limit: 0,\r\n  minWidth: 0,\r\n};\r\n\r\n/**\r\n * Company Card With Follow Button\r\n * @param {*} props\r\n * @returns\r\n */\r\nfunction CompanyCardFollow(props) {\r\n  const { followedCompany, toggleFollowCompany } = useCompanyFollow(\r\n    props.Symbol,\r\n    props.isFollowed\r\n  );\r\n  const classes = userStyles();\r\n  return (\r\n    <div className={classes.followCardLayout}>\r\n      <Grid container direction=\"row\" justify=\"space-between\">\r\n        <Grid item>\r\n          <div className={classes.typographyDiv_followCardLayout}>\r\n            <Typography variant=\"h5\">{props.Symbol}</Typography>\r\n            <Typography variant=\"body1\">{props.name}</Typography>\r\n          </div>\r\n          <div className={classes.typographyDiv_followCardLayout}>\r\n            <Typography variant=\"h6\">{props.price}</Typography>\r\n            <ChangePriceValue changePrice={props.changePrice} />\r\n          </div>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button variant=\"outlined\" size=\"large\" onClick={toggleFollowCompany}>\r\n            {followedCompany ? \"Unfollow\" : \"Follow\"}\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\nCompanyCardFollow.defaultProps = {\r\n  isFollowed: false,\r\n};\r\nCompanyCardFollow.propTypes = {\r\n  Symbol: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  price: PropTypes.number.isRequired,\r\n  changePrice: PropTypes.string.isRequired,\r\n  isFollowed: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst ChangePriceValue = (props) => {\r\n  const classes = userStyles();\r\n  const str = props.changePrice ? props.changePrice.toString() : \"23(+4.1%)\";\r\n  var signReg = /(\\+|\\-)/g;\r\n  const sign = str.split(signReg)[1];\r\n  const signStyle = sign == \"+\" ? classes.positvie : classes.negative;\r\n  return (\r\n    <Typography\r\n      variant=\"body1\"\r\n      className={`${classes.changePrice} ${signStyle}`}\r\n    >\r\n      {props.changePrice}\r\n    </Typography>\r\n  );\r\n};\r\nChangePriceValue.propTypes = {\r\n  changePrice: PropTypes.string.isRequired,\r\n};\r\nconst cleaning = (data) => {\r\n  var newArray = data.map((a) => ({ ...a }));\r\n  newArray.map((e) => (e.date = e.date.split(\"T\")[0]));\r\n  return newArray;\r\n};\r\nfunction RenderCompanyChart(props) {\r\n  const classes = userStyles();\r\n  const cleanedData = cleaning(props.data);\r\n  const [state, setState] = useState({\r\n    mobileView: false,\r\n  });\r\n\r\n  const { mobileView } = state;\r\n\r\n  useEffect(() => {\r\n    const setResponsiveness = () => {\r\n      return window.innerWidth < 900\r\n        ? setState((prevState) => ({ ...prevState, mobileView: true }))\r\n        : setState((prevState) => ({ ...prevState, mobileView: false }));\r\n    };\r\n\r\n    setResponsiveness();\r\n\r\n    window.addEventListener(\"resize\", () => setResponsiveness());\r\n  }, []);\r\n  return (\r\n    <div className={classes.ChartRoot}>\r\n      <ResponsiveContainer width=\"100%\" height={250}>\r\n        <AreaChart\r\n          margin={{ top: 10, right: 30, left: -20, bottom: 0 }}\r\n          data={cleanedData}\r\n        >\r\n          <defs>\r\n            <linearGradient id=\"colorClose\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n              <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8} />\r\n              <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0} />\r\n            </linearGradient>\r\n            {/* <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n            <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8} />\r\n            <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0} />\r\n          </linearGradient> */}\r\n          </defs>\r\n          <XAxis dataKey={props.XAxis} />\r\n          <YAxis />\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <Tooltip />\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey={props.dataKey}\r\n            stroke=\"#8884d8\"\r\n            fillOpacity={1}\r\n            fill=\"url(#colorClose)\"\r\n          />\r\n          {/* <Area\r\n          type=\"monotone\"\r\n          dataKey=\"close\"\r\n          stroke=\"#82ca9d\"\r\n          fillOpacity={1}\r\n          fill=\"url(#colorPv)\"\r\n        /> */}\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n}\r\nRenderCompanyChart.defaultProps = {\r\n  limit: 7,\r\n  XAxis: \"date\",\r\n  dataKey: \"close\",\r\n};\r\nRenderCompanyChart.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  limit: PropTypes.number.isRequired,\r\n  dataKey: PropTypes.string.isRequired,\r\n  XAxis: PropTypes.string.isRequired,\r\n};\r\n\r\nfunction CompanyMiniDataTable(props) {\r\n  const classes = userStyles();\r\n  const array = Object.entries(props.data);\r\n  const half = array.length / 2;\r\n  const bData = (key, value) =>\r\n    (key == \"date\") | (key == \"__typename\") ? null : (\r\n      <TableRow>\r\n        <TableCell>\r\n          <Typography variant=\"h6\">{key}</Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography align=\"left\" variant=\"h6\">\r\n            {value}\r\n          </Typography>\r\n        </TableCell>\r\n      </TableRow>\r\n    );\r\n  return (\r\n    <TableContainer className={classes.minitable}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">\r\n              <Typography variant=\"h5\">{props.title}</Typography>\r\n            </TableCell>\r\n            {/* <TableCell></TableCell> */}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          <column className={classes.LeftCol}>\r\n            {array.slice(0, half).map(([key, value], i) => bData(key, value))}\r\n          </column>{\" \"}\r\n          <column>\r\n            {array\r\n              .slice(half, undefined)\r\n              .map(([key, value], i) => bData(key, value))}\r\n          </column>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\nCompanyMiniDataTable.defaultProps = {\r\n  title: \"Company Data\",\r\n};\r\nCompanyMiniDataTable.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n  title: PropTypes.string,\r\n};\r\n\r\nfunction CompanyProfile(props) {\r\n  const classes = userStyles();\r\n  let array = Object.entries(props.companyInfo);\r\n  array = array.filter(([key, value]) => (key != \"name\") | (key != \"bio\"));\r\n  const label = (key, value) =>\r\n    (key == \"name\") | (key == \"bio\") ? null : (\r\n      <div style={{ width: \"inherent\" }}>\r\n        <div className={classes.labelLayout}>\r\n          <Typography variant=\"inherit\">{key}</Typography>\r\n          <Typography variant=\"body1\">{value}</Typography>\r\n        </div>{\" \"}\r\n        <Divider orientation=\"horizontal\" />\r\n      </div>\r\n    );\r\n  return (\r\n    <div className={classes.CompanyProfileLayout}>\r\n      <Grid container direction=\"column\">\r\n        <Grid item>\r\n          <div>\r\n            <Typography variant=\"h4\">{`${props.companyInfo.name} Profile`}</Typography>\r\n            <Typography variant=\"body1\">{props.companyInfo.bio}</Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          alignItems=\"flex-start\"\r\n          justify=\"space-between\"\r\n        >\r\n          <Grid item xs lg={5}>\r\n            {label(\"Secotr\", props.companyInfo.sector)}\r\n            {label(\"Address\", props.companyInfo.address)}\r\n          </Grid>\r\n          <Grid item xs lg={5}>\r\n            {label(\"Industry\", props.companyInfo.industry)}\r\n            {label(\"Phone Number\", props.companyInfo.phoneNumber)}\r\n            {label(\"Website\", props.companyInfo.website)}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nCompanyProfile.propTypes = {\r\n  companyInfo: PropTypes.object.isRequired,\r\n};\r\n\r\nexport {\r\n  CompanyCard,\r\n  CompanyCardLine,\r\n  MiniCompanyCardTable,\r\n  CompanyCardFollow,\r\n  RenderCompanyChart,\r\n  CompanyMiniDataTable,\r\n  CompanyProfile,\r\n};\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\storage\\userConfig\\index.ts",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\storage\\userConfig\\userConfigVar.ts",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\storage\\userConfig\\saveUserConfig.ts",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\storage\\userConfig\\initialUserConfig.ts",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Content\\articleGql.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Company\\edfitformport.js",["296","297","298","299","300","301"],"import React, { useState, useEffect } from 'react'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"../../util/hooks\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link as RouterLink, Redirect } from \"react-router-dom\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: \"100%\",\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    GTsubmit: {\r\n        margin: theme.spacing(3, 0, 0),\r\n    },\r\n\r\n\r\n}));\r\nconst EDIT_PORT = gql`\r\n\r\nmutation editPortfolio(\r\n    $portoId: ID! \r\n    $name: String! \r\n    $tags: [String!] \r\n    ) {\r\n        editPortfolio(name:$name , tags:$tags ,portoId:$portoId ){\r\n        name\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst EditFormport = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => {\r\n        setModal(!modal);\r\n        console.log(values);\r\n    };\r\n    const { onChange, onSubmit, values } = useForm(CreateCompanyInfoCallBack, {\r\n        portoId: props.portoId,\r\n        name: null,\r\n        tags: null,\r\n    });\r\n    const [CreateCompanyInfo, { loading }] = useMutation(EDIT_PORT, {\r\n        onError(error) {\r\n            console.log(`Error Happend Updating user info ${error}`);\r\n        },\r\n        onCompleted(data) {\r\n            console.log(\"here\");\r\n        },\r\n    });\r\n    function CreateCompanyInfoCallBack() {\r\n        console.log(`Called `);\r\n        CreateCompanyInfo();\r\n    }\r\n    return (\r\n        <>\r\n\r\n            <div className={classes.paper}>\r\n                <form className={classes.form} onSubmit={(event) => {\r\n                    event.preventDefault();\r\n                    var arr = [];\r\n                    arr = (values.tags).split(\",\");\r\n                    CreateCompanyInfo({\r\n                        variables: {\r\n                            portoId: props.portoId,\r\n                            name: values.name,\r\n                            tags: arr,\r\n                        }\r\n                    });\r\n\r\n                    <Redirect to=\"/portfolio\" />\r\n                }}>\r\n\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"Portfolio Name\"\r\n                        name=\"name\"\r\n                        autoComplete=\"name\"\r\n                        id=\"name\"\r\n                        autoFocus\r\n                        onChange={onChange}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"tags\"\r\n                        autoComplete=\"tags\"\r\n                        id=\"tags\"\r\n                        label=\"Tags Followed By  , \"\r\n                        onChange={onChange}\r\n                    />\r\n                    {loading ? (\r\n                        <CircularProgress />\r\n                    ) : (\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            submit\r\n                        </Button>\r\n                    )}\r\n                </form>\r\n            </div>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default EditFormport","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Content\\draftsGql.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Company\\inputformport.js",["302","303","304","305","306","307"],"import React, { useState, useEffect } from 'react'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"../../util/hooks\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link as RouterLink, Redirect } from \"react-router-dom\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  GTsubmit: {\r\n    margin: theme.spacing(3, 0, 0),\r\n  },\r\n\r\n\r\n}));\r\nconst CREATE_PORT = gql`\r\n\r\nmutation createPortfolio(\r\n    $name: String = null ,  \r\n    $tags: [String!] = null\r\n    ) {\r\n    createPortfolio(name:$name , tags:$tags){\r\n        name\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst InputFormPort = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n    console.log(values);\r\n  };\r\n  const { onChange, onSubmit, values } = useForm(CreateCompanyInfoCallBack, {\r\n    name: null,\r\n    tags: null,\r\n  });\r\n  const [CreateCompanyInfo, { loading }] = useMutation(CREATE_PORT, {\r\n    onError(error) {\r\n      console.log(`Error Happend Updating user info ${error}`);\r\n    },\r\n    onCompleted(data) {\r\n      console.log(\"here\");\r\n    },\r\n  });\r\n  function CreateCompanyInfoCallBack() {\r\n    console.log(`Called `);\r\n    CreateCompanyInfo();\r\n  }\r\n  return (\r\n    <>\r\n\r\n      <div className={classes.paper}>\r\n        <form className={classes.form} onSubmit={(event) => {\r\n          event.preventDefault();\r\n          var arr = [];\r\n          arr = (values.tags).split(\",\");\r\n          console.log(arr[0]);\r\n          CreateCompanyInfo({\r\n            variables: {\r\n              name: values.name,\r\n              tags: arr,\r\n            }\r\n          });\r\n\r\n          <Redirect to=\"/portfolio\" />\r\n        }}>\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            label=\"Portfolio Name\"\r\n            name=\"name\"\r\n            autoComplete=\"name\"\r\n            id=\"name\"\r\n            autoFocus\r\n            onChange={onChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"tags\"\r\n            autoComplete=\"tags\"\r\n            id=\"tags\"\r\n            label=\"Tags Followed By  , \"\r\n            onChange={onChange}\r\n          />\r\n          {loading ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              submit\r\n            </Button>\r\n          )}\r\n        </form>\r\n      </div>\r\n\r\n\r\n\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default InputFormPort","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Editor.js",["308","309","310","311","312","313","314","315","316","317"],"import React, { useState } from \"react\";\r\n\r\nimport { useQuill } from \"react-quilljs\";\r\n// or const { useQuill } = require('react-quilljs');\r\n\r\nimport \"quill/dist/quill.snow.css\"; // Add css for snow theme\r\n// or import 'quill/dist/quill.bubble.css'; // Add css for bubble theme\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { gql, useMutation, useQuery } from \"@apollo/client\";\r\nimport { useForm } from \"../util/hooks\";\r\nconst s3SignMutation = gql`\r\n  mutation($filename: String!, $filetype: String!) {\r\n    signS3(filename: $filename, filetype: $filetype) {\r\n      url\r\n      signedRequest\r\n    }\r\n  }\r\n`;\r\nexport function Editor(props) {\r\n  const theme = \"snow\";\r\n  const placeholder = props.placeholder;\r\n\r\n  const modules = {\r\n    toolbar: [\r\n      [\"bold\", \"italic\", \"underline\", \"strike\"], // toggled buttons\r\n      [\"blockquote\", \"code-block\"],\r\n\r\n      [{ header: 1 }, { header: 2 }], // custom button values\r\n      [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n      [{ script: \"sub\" }, { script: \"super\" }], // superscript/subscript\r\n      [{ indent: \"-1\" }, { indent: \"+1\" }], // outdent/indent\r\n      [{ direction: \"rtl\" }], // text direction\r\n\r\n      [{ size: [\"small\", false, \"large\", \"huge\"] }], // custom dropdown\r\n      [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n\r\n      [{ color: [] }, { background: [] }], // dropdown with defaults from theme\r\n      [{ font: [] }],\r\n      [{ align: [] }],\r\n      [\"link\", \"image\", \"video\"],\r\n\r\n      [\"clean\"], // remove formatting button\r\n    ],\r\n  };\r\n  const formats = [\r\n    // Inline\r\n    \"font\",\r\n    \"size\",\r\n    \"bold\",\r\n    \"italic\",\r\n    \"underline\",\r\n    \"strike\",\r\n    // Block\r\n    \"blockquote\",\r\n    \"code-block\",\r\n    \"list\",\r\n    \"bullet\",\r\n    \"indent\",\r\n    \"link\",\r\n    \"direction\",\r\n    \"align\",\r\n    \"header\",\r\n\r\n    //   Embeds\r\n    \"image\",\r\n    \"video\",\r\n  ];\r\n  const { quill, quillRef } = useQuill({\r\n    theme,\r\n    modules,\r\n    formats,\r\n    placeholder,\r\n  });\r\n  const [hasBody, setHasBody] = useState(false);\r\n  const [body, setBody] = useState(\"\");\r\n  const [files, setFiles] = useState([]);\r\n  const [filename, setFileName] = useState();\r\n  const [filetype, setFileType] = useState();\r\n\r\n  // Insert Image(selected by user) to quill\r\n  const insertToEditor = (url) => {\r\n    const range = quill.getSelection();\r\n    quill.insertEmbed(range.index, \"image\", url);\r\n  };\r\n  const [getS3SignedUrl, { loading, data, error }] = useMutation(\r\n    s3SignMutation,\r\n    {\r\n      variables: {\r\n        filename,\r\n        filetype,\r\n      },\r\n    }\r\n  );\r\n\r\n  function getS3SignedUrlCallBack() {\r\n    getS3SignedUrl();\r\n  }\r\n  const uploadToS3 = async (file, signedRequest) => {\r\n    const options = {\r\n      headers: {\r\n        \"Content-Type\": file.type,\r\n      },\r\n    };\r\n    await axios.put(signedRequest, file, options);\r\n  };\r\n  const formatFilename = (filename) => {\r\n    const date = moment().format(\"YYYYMMDD\");\r\n    const randomString = Math.random().toString(36).substring(2, 7);\r\n    const cleanFileName = filename.toLowerCase().replace(/[^a-z0-9]/g, \"-\");\r\n    const newFilename = `${date}-${randomString}-${cleanFileName}`;\r\n    return newFilename.substring(0, 60);\r\n  };\r\n  // Upload Image to Image Server such as AWS S3, Cloudinary, Cloud Storage, etc..\r\n  const saveToServer = async (file) => {\r\n    const body = new FormData();\r\n    body.append(\"file\", file);\r\n    setFileName(formatFilename(file.name));\r\n    setFileType(file.type);\r\n    const res = (await getS3SignedUrl()).data;\r\n\r\n    const response = res.signS3;\r\n    const { signedRequest, url } = response;\r\n    console.log(`signed ${signedRequest}`);\r\n    await uploadToS3(file, signedRequest);\r\n    insertToEditor(url);\r\n  };\r\n  const handleChange = () => {\r\n    if (quill) {\r\n      const html = quill.root.innerHTML;\r\n      // console.log(`${html}`);\r\n      setBody(html.toString());\r\n      console.log(body);\r\n      props.onEditorChange(html);\r\n    }\r\n  };\r\n  // Open Dialog to select Image File\r\n  const selectLocalImage = () => {\r\n    const input = document.createElement(\"input\");\r\n    input.setAttribute(\"type\", \"file\");\r\n    input.setAttribute(\"accept\", \"image/*\");\r\n    input.click();\r\n\r\n    input.onchange = () => {\r\n      const file = input.files[0];\r\n      saveToServer(file);\r\n    };\r\n  };\r\n  React.useEffect(() => {\r\n    if (quill) {\r\n      if (props.body != \"\" && !hasBody) {\r\n        console.log(`assign body`);\r\n\r\n        setHasBody(true);\r\n        const fetchedBody = props.body;\r\n        console.log(fetchedBody);\r\n        quill.clipboard.dangerouslyPasteHTML(fetchedBody);\r\n      } else {\r\n        console.log(`No Body`);\r\n      }\r\n      quill.on(\"editor-change\", () => {\r\n        handleChange();\r\n      });\r\n      // Add custom handler for Image Upload\r\n      quill.getModule(\"toolbar\").addHandler(\"image\", selectLocalImage);\r\n    }\r\n  }, [quill, body]);\r\n  return (\r\n    <div style={{ maxWidth: \"700px\", height: 300, marginBottom: 100 }}>\r\n      <div ref={quillRef} />\r\n    </div>\r\n  );\r\n}\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\util\\dummyData.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Content\\commentGql.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Company\\companyGql.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\AnalystInfo.js",["318","319"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Avatar,\r\n  ButtonBase,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { useFollow } from \"../util/hooks\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginLeft: 0,\r\n  },\r\n  wideFollowBtn: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: theme.spacing(20),\r\n    },\r\n  },\r\n}));\r\n\r\nexport function ArticleAutherInfo(props) {\r\n  const state = useState();\r\n  const classes = useStyles();\r\n  const { followed, toggleFollow } = useFollow(props.userId, props.isFollowed);\r\n  return (\r\n    <Container className={classes.root} maxWidth=\"xs\">\r\n      <Grid\r\n        spacing={4}\r\n        container\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        <Grid item xs={2}>\r\n          <Avatar alt={props.name} src={props.img} />\r\n        </Grid>\r\n        {/* // Analyst info  */}\r\n        <Grid item xs={4} sm spacing={0}>\r\n          <Grid item xs container direction=\"column\" spacing={0}>\r\n            <Grid item xs>\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"subtitle1\"\r\n                component={RouterLink}\r\n                style={{ textDecoration: \"none\", color: \"black\" }}\r\n                to={`/userProfile/${props.userId}`}\r\n              >\r\n                {props.name}\r\n              </Typography>\r\n              <Typography variant=\"subtitle2\" gutterBottom noWrap>\r\n                {props.bio}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {/* //Analyst Follow Button */}\r\n        <Grid item xs={2} sm>\r\n          <Button variant=\"outlined\" color=\"primary\" onClick={toggleFollow}>\r\n            {followed ? \"Unfollow\" : \"Follow\"}\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\nArticleAutherInfo.defaultProps = {\r\n  // userId: \"undefind\",\r\n  isFollowed: false,\r\n};\r\nArticleAutherInfo.propTypes = { isFollowed: PropTypes.bool.isRequired };\r\n\r\nexport function ArticleAutherInfoExpanded(props) {\r\n  const classes = useStyles();\r\n  const { followed, toggleFollow } = useFollow(props.userId, props.isFollowed);\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Grid\r\n        spacing={2}\r\n        container\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        <Grid item xs={0}>\r\n          <Avatar alt={props.name} src={props.img} />\r\n        </Grid>\r\n        {/* // Analyst info  */}\r\n        <Grid item xs={4} sm spacing={0}>\r\n          <Grid item xs container direction=\"column\" spacing={0}>\r\n            <Grid item xs sm>\r\n              <Typography\r\n                variant=\"body1\"\r\n                component={RouterLink}\r\n                style={{ textDecoration: \"none\", color: \"black\" }}\r\n                to={`/userProfile/${props.userId}`}\r\n              >\r\n                {props.name == null ? \"Name Null\" : props.name}\r\n              </Typography>\r\n              <Typography variant=\"caption\" noWrap>\r\n                {props.username}\r\n              </Typography>\r\n              <Typography variant=\"body2\">{props.bio}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {/* //Analyst Follow Button */}\r\n        <Grid\r\n          item\r\n          xs={2}\r\n          sm\r\n          direction=\"column\"\r\n          justify=\"flex-end\"\r\n          alignItems=\"flex-end\"\r\n          container\r\n        >\r\n          <Grid item>\r\n            <Button\r\n              className={classes.wideFollowBtn}\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              onClick={toggleFollow}\r\n            >\r\n              {followed ? \"Unfollow\" : \"Follow\"}\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item spacing={2} alignItems=\"center\" alignContent=\"center\">\r\n            <Typography gutterBottom variant=\"caption\">\r\n              100 Followers\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\nArticleAutherInfoExpanded.defaultProps = {\r\n  isFollowed: false,\r\n};\r\nArticleAutherInfoExpanded.propTypes = {\r\n  isFollowed: PropTypes.bool.isRequired,\r\n  userId: PropTypes.string.isRequired,\r\n};\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Content\\CommentComponents.js",["320","321","322","323"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Container, Grid, Typography, Avatar } from \"@material-ui/core\";\r\nimport { ProtectedRoute } from \"../AuthRoute\";\r\n\r\nconst CommentComponentBody = (props) => {\r\n  return (\r\n    <div style={{ padding: \"16px\" }}>\r\n      <span>\r\n        <Typography variant=\"body1\">{props.body}</Typography>\r\n      </span>\r\n      <span>\r\n        <Typography variant=\"caption\">{props.date}</Typography>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentComponentBody.propTypes = {\r\n  name: PropTypes.string,\r\n  avatr: PropTypes.string,\r\n  date: PropTypes.string,\r\n  body: PropTypes,\r\n};\r\n\r\nexport default CommentComponentBody;\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\UserInfo.js",["324","325","326","327","328","329","330","331","332","333","334","335","336"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Grid,\r\n  Chip,\r\n  Divider,\r\n  Typography,\r\n  Button,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link as RouterLink, Redirect, useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { useLazyQuery, useMutation, useQuery } from \"@apollo/client\";\r\nimport { FOLLOW_USER_GQL, PROFILE_GQL } from \"../graphql/Auth/authGql\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useFollow } from \"../util/hooks\";\r\n\r\nconst img = \"avatars/7.jpg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginLeft: 0,\r\n  },\r\n\r\n  avatar: {\r\n    width: theme.spacing(8),\r\n    height: theme.spacing(8),\r\n    marginTop: theme.spacing(0.75),\r\n\r\n    [theme.breakpoints.between(\"sm\", \"md\")]: {\r\n      width: theme.spacing(7),\r\n      height: theme.spacing(7),\r\n      marginTop: theme.spacing(1.25),\r\n    },\r\n    [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n      width: theme.spacing(11),\r\n      height: theme.spacing(11),\r\n      marginTop: theme.spacing(2.75),\r\n    },\r\n  },\r\n\r\n  avatar2: {\r\n    // width: theme.spacing(4),\r\n    // height: theme.spacing(4),\r\n\r\n    [theme.breakpoints.between(\"sm\", \"xl\")]: {\r\n      // width: theme.spacing(5.75),\r\n      // height: theme.spacing(5.75),\r\n    },\r\n  },\r\n\r\n  typography: {\r\n    fontSize: \"20px\",\r\n    marginBottom: theme.spacing(1),\r\n\r\n    [theme.breakpoints.between(\"sm\", \"md\")]: {\r\n      // fontSize: \"15.5px\",\r\n    },\r\n    [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n      marginBottom: theme.spacing(2),\r\n      fontSize: \"22px\",\r\n      fontStyle: \"normal\",\r\n      lineHeight: \"32px\",\r\n    },\r\n  },\r\n\r\n  chip: {\r\n    fontSize: \"14px\",\r\n    height: theme.spacing(3),\r\n    marginBottom: theme.spacing(1),\r\n\r\n    [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n      fontSize: \"10px\",\r\n      height: theme.spacing(3),\r\n      marginBottom: theme.spacing(0.75),\r\n      marginTop: theme.spacing(0.75),\r\n    },\r\n    [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n      height: theme.spacing(3),\r\n      fontSize: \"13px\",\r\n      marginBottom: theme.spacing(1),\r\n      marginTop: theme.spacing(0.75),\r\n    },\r\n  },\r\n\r\n  followBt: {\r\n    width: theme.spacing(11),\r\n  },\r\n\r\n  FollowBtn2: {\r\n    [theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n      width: theme.spacing(1),\r\n      marginLeft: theme.spacing(-4),\r\n    },\r\n    [theme.breakpoints.between(\"sm\", \"md\")]: {\r\n      width: theme.spacing(9),\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n  },\r\n\r\n  typogrFollowerFollwing: {\r\n    [theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n      // fontSize: '1px'\r\n    },\r\n  },\r\n}));\r\n\r\n{\r\n  /* // UserInfo\"theSmallCard\"  */\r\n}\r\nexport function UserInfo(props) {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const { user } = useContext(AuthContext);\r\n  const { followed, toggleFollow } = useFollow(props.id, props.isFollowed);\r\n\r\n  return (\r\n    <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"center\">\r\n      <Grid item xs>\r\n        <Avatar className={classes.avatar} alt={props.name} src={props.img} />\r\n      </Grid>\r\n\r\n      <Grid item xs>\r\n        <Typography\r\n          className={classes.typography}\r\n          variant=\"h6\"\r\n          component={RouterLink}\r\n          style={{ textDecoration: \"none\", color: \"black\" }}\r\n          to={`/userProfile/${props.userId}`}\r\n        >\r\n          {props.name}\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid item xs>\r\n        <Chip\r\n          className={classes.chip}\r\n          label={props.bio}\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n        />\r\n      </Grid>\r\n\r\n      {/* //User Follow Button */}\r\n      <Grid item xs>\r\n        <Button\r\n          size=\"small\"\r\n          className={classes.followBt}\r\n          variant={followed ? \"outlined\" : \"contained\"}\r\n          color=\"primary\"\r\n          onClick={toggleFollow}\r\n        >\r\n          {followed ? \"Following\" : \"Follow\"}\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nUserInfo.defaultProps = {\r\n  userId: \"undefined\",\r\n  isFollowed: false,\r\n};\r\nUserInfo.propTypes = {\r\n  isFollowed: PropTypes.bool,\r\n  userId: PropTypes.string.isRequired,\r\n};\r\n{\r\n  /* // FollowerFollowingForm  */\r\n}\r\nexport function FollowerFollowingForm(props) {\r\n  const classes = useStyles();\r\n  const { followed, toggleFollow } = useFollow(props.userId, props.isFollowed);\r\n  return (\r\n    <Grid\r\n      spacing={2}\r\n      container\r\n      direction=\"row\"\r\n      justify=\"flex-start\"\r\n      alignItems=\"center\"\r\n    >\r\n      {/* // User Avatar  */}\r\n      <Grid item>\r\n        <Avatar\r\n          className={classes.avatar2}\r\n          alt={props.name}\r\n          src={props.avatar}\r\n        />\r\n      </Grid>\r\n\r\n      {/* // User info  */}\r\n      <Grid\r\n        item\r\n        xs={8}\r\n        container\r\n        alignItems=\"flex-start\"\r\n        justify=\"flex-start\"\r\n        direction=\"column\"\r\n      >\r\n        <Typography\r\n          className={classes.typogrFollowerFollwing}\r\n          variant=\"subtitle1\"\r\n          component={RouterLink}\r\n          style={{ textDecoration: \"none\", color: \"black\" }}\r\n          to={`/userProfile/${props.userId}`}\r\n        >\r\n          {props.name}\r\n        </Typography>\r\n        <Typography\r\n          className={classes.typogrFollowerFollwing}\r\n          variant=\"subtitle2\"\r\n        >\r\n          {props.bio}\r\n        </Typography>\r\n\r\n        <Container>\r\n          <Divider variant=\"middle\" />\r\n        </Container>\r\n      </Grid>\r\n\r\n      {/* //User Follow Button */}\r\n      <Grid item>\r\n        <Button\r\n          className={classes.FollowBtn2}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={toggleFollow}\r\n        >\r\n          {followed ? \"Unfollow\" : \"Follow\"}\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nFollowerFollowingForm.defaultProps = {};\r\nFollowerFollowingForm.propTypes = {\r\n  isFollowed: PropTypes.bool,\r\n};\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Company\\portfolioGql.js",[],{"ruleId":"337","severity":1,"message":"338","line":2,"column":8,"nodeType":"339","messageId":"340","endLine":2,"endColumn":13},{"ruleId":"337","severity":1,"message":"341","line":7,"column":10,"nodeType":"339","messageId":"340","endLine":7,"endColumn":18},{"ruleId":"342","replacedBy":"343"},{"ruleId":"344","replacedBy":"345"},{"ruleId":"337","severity":1,"message":"346","line":6,"column":3,"nodeType":"339","messageId":"340","endLine":6,"endColumn":16},{"ruleId":"337","severity":1,"message":"347","line":3,"column":3,"nodeType":"339","messageId":"340","endLine":3,"endColumn":13},{"ruleId":"337","severity":1,"message":"348","line":5,"column":3,"nodeType":"339","messageId":"340","endLine":5,"endColumn":9},{"ruleId":"337","severity":1,"message":"349","line":23,"column":28,"nodeType":"339","messageId":"340","endLine":23,"endColumn":37},{"ruleId":"337","severity":1,"message":"350","line":2,"column":8,"nodeType":"339","messageId":"340","endLine":2,"endColumn":14},{"ruleId":"337","severity":1,"message":"351","line":3,"column":8,"nodeType":"339","messageId":"340","endLine":3,"endColumn":13},{"ruleId":"337","severity":1,"message":"352","line":60,"column":19,"nodeType":"339","messageId":"340","endLine":60,"endColumn":29},{"ruleId":"337","severity":1,"message":"353","line":16,"column":8,"nodeType":"339","messageId":"340","endLine":16,"endColumn":18},{"ruleId":"337","severity":1,"message":"354","line":17,"column":8,"nodeType":"339","messageId":"340","endLine":17,"endColumn":19},{"ruleId":"337","severity":1,"message":"352","line":63,"column":19,"nodeType":"339","messageId":"340","endLine":63,"endColumn":29},{"ruleId":"337","severity":1,"message":"355","line":33,"column":7,"nodeType":"339","messageId":"340","endLine":33,"endColumn":24},{"ruleId":"337","severity":1,"message":"356","line":66,"column":7,"nodeType":"339","messageId":"340","endLine":66,"endColumn":24},{"ruleId":"337","severity":1,"message":"357","line":104,"column":7,"nodeType":"339","messageId":"340","endLine":104,"endColumn":20},{"ruleId":"358","severity":1,"message":"359","line":277,"column":1,"nodeType":"360","messageId":"361","endLine":279,"endColumn":2},{"ruleId":"337","severity":1,"message":"362","line":281,"column":9,"nodeType":"339","messageId":"340","endLine":281,"endColumn":14},{"ruleId":"337","severity":1,"message":"363","line":2,"column":21,"nodeType":"339","messageId":"340","endLine":2,"endColumn":25},{"ruleId":"337","severity":1,"message":"364","line":9,"column":3,"nodeType":"339","messageId":"340","endLine":9,"endColumn":13},{"ruleId":"337","severity":1,"message":"365","line":27,"column":21,"nodeType":"339","messageId":"340","endLine":27,"endColumn":31},{"ruleId":"337","severity":1,"message":"366","line":117,"column":7,"nodeType":"339","messageId":"340","endLine":117,"endColumn":19},{"ruleId":"367","severity":1,"message":"368","line":330,"column":28,"nodeType":"369","messageId":"370","endLine":330,"endColumn":30},{"ruleId":"337","severity":1,"message":"371","line":206,"column":9,"nodeType":"339","messageId":"340","endLine":206,"endColumn":18},{"ruleId":"337","severity":1,"message":"372","line":1,"column":39,"nodeType":"339","messageId":"340","endLine":1,"endColumn":48},{"ruleId":"337","severity":1,"message":"373","line":2,"column":10,"nodeType":"339","messageId":"340","endLine":2,"endColumn":19},{"ruleId":"337","severity":1,"message":"374","line":2,"column":29,"nodeType":"339","messageId":"340","endLine":2,"endColumn":39},{"ruleId":"337","severity":1,"message":"375","line":6,"column":3,"nodeType":"339","messageId":"340","endLine":6,"endColumn":8},{"ruleId":"337","severity":1,"message":"376","line":9,"column":3,"nodeType":"339","messageId":"340","endLine":9,"endColumn":10},{"ruleId":"337","severity":1,"message":"364","line":10,"column":3,"nodeType":"339","messageId":"340","endLine":10,"endColumn":13},{"ruleId":"337","severity":1,"message":"377","line":12,"column":3,"nodeType":"339","messageId":"340","endLine":12,"endColumn":9},{"ruleId":"337","severity":1,"message":"378","line":13,"column":3,"nodeType":"339","messageId":"340","endLine":13,"endColumn":12},{"ruleId":"337","severity":1,"message":"379","line":14,"column":3,"nodeType":"339","messageId":"340","endLine":14,"endColumn":17},{"ruleId":"337","severity":1,"message":"380","line":21,"column":10,"nodeType":"339","messageId":"340","endLine":21,"endColumn":14},{"ruleId":"337","severity":1,"message":"381","line":43,"column":9,"nodeType":"339","messageId":"340","endLine":43,"endColumn":16},{"ruleId":"337","severity":1,"message":"382","line":2,"column":8,"nodeType":"339","messageId":"340","endLine":2,"endColumn":17},{"ruleId":"337","severity":1,"message":"383","line":13,"column":10,"nodeType":"339","messageId":"340","endLine":13,"endColumn":26},{"ruleId":"358","severity":1,"message":"359","line":139,"column":1,"nodeType":"360","messageId":"361","endLine":141,"endColumn":2},{"ruleId":"358","severity":1,"message":"359","line":144,"column":1,"nodeType":"360","messageId":"361","endLine":146,"endColumn":2},{"ruleId":"337","severity":1,"message":"384","line":164,"column":7,"nodeType":"339","messageId":"340","endLine":164,"endColumn":30},{"ruleId":"337","severity":1,"message":"385","line":183,"column":7,"nodeType":"339","messageId":"340","endLine":183,"endColumn":25},{"ruleId":"337","severity":1,"message":"386","line":29,"column":7,"nodeType":"339","messageId":"340","endLine":29,"endColumn":15},{"ruleId":"337","severity":1,"message":"372","line":1,"column":17,"nodeType":"339","messageId":"340","endLine":1,"endColumn":26},{"ruleId":"337","severity":1,"message":"380","line":7,"column":10,"nodeType":"339","messageId":"340","endLine":7,"endColumn":14},{"ruleId":"337","severity":1,"message":"387","line":20,"column":23,"nodeType":"339","messageId":"340","endLine":20,"endColumn":35},{"ruleId":"367","severity":1,"message":"388","line":74,"column":15,"nodeType":"369","messageId":"370","endLine":74,"endColumn":17},{"ruleId":"337","severity":1,"message":"389","line":80,"column":10,"nodeType":"339","messageId":"340","endLine":80,"endColumn":15},{"ruleId":"367","severity":1,"message":"388","line":181,"column":21,"nodeType":"369","messageId":"370","endLine":181,"endColumn":23},{"ruleId":"337","severity":1,"message":"377","line":10,"column":5,"nodeType":"339","messageId":"340","endLine":10,"endColumn":11},{"ruleId":"337","severity":1,"message":"390","line":31,"column":8,"nodeType":"339","messageId":"340","endLine":31,"endColumn":14},{"ruleId":"337","severity":1,"message":"386","line":53,"column":7,"nodeType":"339","messageId":"340","endLine":53,"endColumn":15},{"ruleId":"337","severity":1,"message":"372","line":1,"column":27,"nodeType":"339","messageId":"340","endLine":1,"endColumn":36},{"ruleId":"337","severity":1,"message":"380","line":2,"column":10,"nodeType":"339","messageId":"340","endLine":2,"endColumn":14},{"ruleId":"337","severity":1,"message":"391","line":3,"column":8,"nodeType":"339","messageId":"340","endLine":3,"endColumn":15},{"ruleId":"337","severity":1,"message":"392","line":5,"column":10,"nodeType":"339","messageId":"340","endLine":5,"endColumn":18},{"ruleId":"337","severity":1,"message":"374","line":16,"column":18,"nodeType":"339","messageId":"340","endLine":16,"endColumn":28},{"ruleId":"337","severity":1,"message":"393","line":27,"column":10,"nodeType":"339","messageId":"340","endLine":27,"endColumn":16},{"ruleId":"337","severity":1,"message":"394","line":28,"column":10,"nodeType":"339","messageId":"340","endLine":28,"endColumn":31},{"ruleId":"337","severity":1,"message":"395","line":30,"column":3,"nodeType":"339","messageId":"340","endLine":30,"endColumn":14},{"ruleId":"337","severity":1,"message":"396","line":129,"column":10,"nodeType":"339","messageId":"340","endLine":129,"endColumn":19},{"ruleId":"337","severity":1,"message":"397","line":144,"column":33,"nodeType":"339","messageId":"340","endLine":144,"endColumn":40},{"ruleId":"337","severity":1,"message":"398","line":160,"column":9,"nodeType":"339","messageId":"340","endLine":160,"endColumn":12},{"ruleId":"337","severity":1,"message":"395","line":22,"column":3,"nodeType":"339","messageId":"340","endLine":22,"endColumn":14},{"ruleId":"337","severity":1,"message":"399","line":254,"column":7,"nodeType":"339","messageId":"340","endLine":254,"endColumn":23},{"ruleId":"342","replacedBy":"343"},{"ruleId":"344","replacedBy":"345"},{"ruleId":"337","severity":1,"message":"400","line":2,"column":8,"nodeType":"339","messageId":"340","endLine":2,"endColumn":14},{"ruleId":"337","severity":1,"message":"401","line":1,"column":10,"nodeType":"339","messageId":"340","endLine":1,"endColumn":13},{"ruleId":"337","severity":1,"message":"402","line":41,"column":24,"nodeType":"339","messageId":"340","endLine":41,"endColumn":31},{"ruleId":"337","severity":1,"message":"402","line":75,"column":23,"nodeType":"339","messageId":"340","endLine":75,"endColumn":30},{"ruleId":"337","severity":1,"message":"402","line":107,"column":31,"nodeType":"339","messageId":"340","endLine":107,"endColumn":38},{"ruleId":"337","severity":1,"message":"363","line":2,"column":21,"nodeType":"339","messageId":"340","endLine":2,"endColumn":25},{"ruleId":"337","severity":1,"message":"364","line":5,"column":3,"nodeType":"339","messageId":"340","endLine":5,"endColumn":13},{"ruleId":"337","severity":1,"message":"349","line":9,"column":3,"nodeType":"339","messageId":"340","endLine":9,"endColumn":12},{"ruleId":"337","severity":1,"message":"403","line":10,"column":3,"nodeType":"339","messageId":"340","endLine":10,"endColumn":7},{"ruleId":"404","severity":1,"message":"405","line":63,"column":6,"nodeType":"406","endLine":63,"endColumn":8,"suggestions":"407"},{"ruleId":"408","severity":1,"message":"409","line":1,"column":25,"nodeType":"339","messageId":"340","endLine":1,"endColumn":32},{"ruleId":"367","severity":1,"message":"388","line":29,"column":33,"nodeType":"369","messageId":"370","endLine":29,"endColumn":35},{"ruleId":"367","severity":1,"message":"388","line":328,"column":41,"nodeType":"369","messageId":"370","endLine":328,"endColumn":43},{"ruleId":"367","severity":1,"message":"388","line":368,"column":41,"nodeType":"369","messageId":"370","endLine":368,"endColumn":43},{"ruleId":"410","severity":1,"message":"411","line":459,"column":22,"nodeType":"412","messageId":"413","endLine":459,"endColumn":23,"suggestions":"414"},{"ruleId":"367","severity":1,"message":"388","line":461,"column":26,"nodeType":"369","messageId":"370","endLine":461,"endColumn":28},{"ruleId":"337","severity":1,"message":"415","line":486,"column":11,"nodeType":"339","messageId":"340","endLine":486,"endColumn":21},{"ruleId":"367","severity":1,"message":"388","line":556,"column":10,"nodeType":"369","messageId":"370","endLine":556,"endColumn":12},{"ruleId":"367","severity":1,"message":"388","line":556,"column":28,"nodeType":"369","messageId":"370","endLine":556,"endColumn":30},{"ruleId":"337","severity":1,"message":"416","line":604,"column":11,"nodeType":"339","messageId":"340","endLine":604,"endColumn":16},{"ruleId":"367","severity":1,"message":"368","line":604,"column":47,"nodeType":"369","messageId":"370","endLine":604,"endColumn":49},{"ruleId":"367","severity":1,"message":"368","line":604,"column":65,"nodeType":"369","messageId":"370","endLine":604,"endColumn":67},{"ruleId":"367","severity":1,"message":"388","line":606,"column":10,"nodeType":"369","messageId":"370","endLine":606,"endColumn":12},{"ruleId":"367","severity":1,"message":"388","line":606,"column":28,"nodeType":"369","messageId":"370","endLine":606,"endColumn":30},{"ruleId":"337","severity":1,"message":"372","line":1,"column":27,"nodeType":"339","messageId":"340","endLine":1,"endColumn":36},{"ruleId":"337","severity":1,"message":"417","line":4,"column":15,"nodeType":"339","messageId":"340","endLine":4,"endColumn":23},{"ruleId":"337","severity":1,"message":"380","line":7,"column":10,"nodeType":"339","messageId":"340","endLine":7,"endColumn":14},{"ruleId":"337","severity":1,"message":"374","line":8,"column":18,"nodeType":"339","messageId":"340","endLine":8,"endColumn":28},{"ruleId":"337","severity":1,"message":"418","line":55,"column":11,"nodeType":"339","messageId":"340","endLine":55,"endColumn":17},{"ruleId":"337","severity":1,"message":"419","line":59,"column":23,"nodeType":"339","messageId":"340","endLine":59,"endColumn":31},{"ruleId":"337","severity":1,"message":"372","line":1,"column":27,"nodeType":"339","messageId":"340","endLine":1,"endColumn":36},{"ruleId":"337","severity":1,"message":"417","line":4,"column":15,"nodeType":"339","messageId":"340","endLine":4,"endColumn":23},{"ruleId":"337","severity":1,"message":"380","line":7,"column":10,"nodeType":"339","messageId":"340","endLine":7,"endColumn":14},{"ruleId":"337","severity":1,"message":"374","line":8,"column":18,"nodeType":"339","messageId":"340","endLine":8,"endColumn":28},{"ruleId":"337","severity":1,"message":"418","line":54,"column":9,"nodeType":"339","messageId":"340","endLine":54,"endColumn":15},{"ruleId":"337","severity":1,"message":"419","line":58,"column":21,"nodeType":"339","messageId":"340","endLine":58,"endColumn":29},{"ruleId":"337","severity":1,"message":"417","line":10,"column":28,"nodeType":"339","messageId":"340","endLine":10,"endColumn":36},{"ruleId":"337","severity":1,"message":"420","line":11,"column":10,"nodeType":"339","messageId":"340","endLine":11,"endColumn":17},{"ruleId":"337","severity":1,"message":"389","line":77,"column":10,"nodeType":"339","messageId":"340","endLine":77,"endColumn":15},{"ruleId":"337","severity":1,"message":"421","line":77,"column":17,"nodeType":"339","messageId":"340","endLine":77,"endColumn":25},{"ruleId":"337","severity":1,"message":"402","line":86,"column":28,"nodeType":"339","messageId":"340","endLine":86,"endColumn":35},{"ruleId":"337","severity":1,"message":"422","line":86,"column":37,"nodeType":"339","messageId":"340","endLine":86,"endColumn":41},{"ruleId":"337","severity":1,"message":"423","line":86,"column":43,"nodeType":"339","messageId":"340","endLine":86,"endColumn":48},{"ruleId":"337","severity":1,"message":"424","line":96,"column":12,"nodeType":"339","messageId":"340","endLine":96,"endColumn":34},{"ruleId":"367","severity":1,"message":"368","line":151,"column":22,"nodeType":"369","messageId":"370","endLine":151,"endColumn":24},{"ruleId":"404","severity":1,"message":"425","line":167,"column":6,"nodeType":"406","endLine":167,"endColumn":19,"suggestions":"426"},{"ruleId":"337","severity":1,"message":"364","line":5,"column":3,"nodeType":"339","messageId":"340","endLine":5,"endColumn":13},{"ruleId":"337","severity":1,"message":"362","line":27,"column":9,"nodeType":"339","messageId":"340","endLine":27,"endColumn":14},{"ruleId":"337","severity":1,"message":"349","line":3,"column":10,"nodeType":"339","messageId":"340","endLine":3,"endColumn":19},{"ruleId":"337","severity":1,"message":"427","line":3,"column":21,"nodeType":"339","messageId":"340","endLine":3,"endColumn":25},{"ruleId":"337","severity":1,"message":"377","line":3,"column":39,"nodeType":"339","messageId":"340","endLine":3,"endColumn":45},{"ruleId":"337","severity":1,"message":"428","line":4,"column":10,"nodeType":"339","messageId":"340","endLine":4,"endColumn":24},{"ruleId":"337","severity":1,"message":"429","line":1,"column":17,"nodeType":"339","messageId":"340","endLine":1,"endColumn":25},{"ruleId":"337","severity":1,"message":"372","line":1,"column":39,"nodeType":"339","messageId":"340","endLine":1,"endColumn":48},{"ruleId":"337","severity":1,"message":"430","line":12,"column":30,"nodeType":"339","messageId":"340","endLine":12,"endColumn":38},{"ruleId":"337","severity":1,"message":"387","line":14,"column":10,"nodeType":"339","messageId":"340","endLine":14,"endColumn":22},{"ruleId":"337","severity":1,"message":"431","line":14,"column":24,"nodeType":"339","messageId":"340","endLine":14,"endColumn":35},{"ruleId":"337","severity":1,"message":"417","line":14,"column":37,"nodeType":"339","messageId":"340","endLine":14,"endColumn":45},{"ruleId":"337","severity":1,"message":"432","line":15,"column":10,"nodeType":"339","messageId":"340","endLine":15,"endColumn":25},{"ruleId":"337","severity":1,"message":"433","line":15,"column":27,"nodeType":"339","messageId":"340","endLine":15,"endColumn":38},{"ruleId":"337","severity":1,"message":"398","line":19,"column":7,"nodeType":"339","messageId":"340","endLine":19,"endColumn":10},{"ruleId":"358","severity":1,"message":"359","line":109,"column":1,"nodeType":"360","messageId":"361","endLine":111,"endColumn":2},{"ruleId":"337","severity":1,"message":"434","line":113,"column":9,"nodeType":"339","messageId":"340","endLine":113,"endColumn":16},{"ruleId":"337","severity":1,"message":"435","line":115,"column":11,"nodeType":"339","messageId":"340","endLine":115,"endColumn":15},{"ruleId":"358","severity":1,"message":"359","line":169,"column":1,"nodeType":"360","messageId":"361","endLine":171,"endColumn":2},"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'Provider' is defined but never used.","no-native-reassign",["436"],"no-negated-in-lhs",["437"],"'InMemoryCache' is defined but never used.","'HashRouter' is defined but never used.","'Switch' is defined but never used.","'Container' is defined but never used.","'purple' is defined but never used.","'green' is defined but never used.","'setSuccess' is assigned a value but never used.","'GoogleIcon' is defined but never used.","'TwitterIcon' is defined but never used.","'contentdummyData1' is assigned a value but never used.","'contentdummyData2' is assigned a value but never used.","'FollowersDocs' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'state' is assigned a value but never used.","'func' is defined but never used.","'ButtonBase' is defined but never used.","'useHistory' is defined but never used.","'commentsDocs' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'rightMenu' is assigned a value but never used.","'useEffect' is defined but never used.","'useParams' is defined but never used.","'RouterLink' is defined but never used.","'Paper' is defined but never used.","'Divider' is defined but never used.","'Avatar' is defined but never used.","'TextField' is defined but never used.","'FormHelperText' is defined but never used.","'fade' is defined but never used.","'context' is assigned a value but never used.","'PropTypes' is defined but never used.","'contentdummyData' is defined but never used.","'similarCompanydummyData' is assigned a value but never used.","'companyFinanceData' is assigned a value but never used.","'userInfo' is assigned a value but never used.","'useLazyQuery' is defined but never used.","Expected '===' and instead saw '=='.","'files' is assigned a value but never used.","'Popper' is defined but never used.","'AddIcon' is defined but never used.","'HomeCard' is defined but never used.","'Height' is defined but never used.","'FollowerFollowingForm' is defined but never used.","'ContentCard' is defined but never used.","'Companies' is assigned a value but never used.","'refetch' is assigned a value but never used.","'img' is assigned a value but never used.","'companydummyData' is assigned a value but never used.","'Button' is defined but never used.","'gql' is defined but never used.","'loading' is assigned a value but never used.","'Card' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.crudOtion' and 'props.withAuther'. Either include them or remove the dependency array. If 'setState' needs the current value of 'props.withAuther', you can also switch to useReducer instead of useState and read 'props.withAuther' in the reducer.","ArrayExpression",["438"],"@typescript-eslint/no-unused-vars","'makeVar' is defined but never used.","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["439","440"],"'mobileView' is assigned a value but never used.","'array' is assigned a value but never used.","'useQuery' is defined but never used.","'toggle' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","'useForm' is defined but never used.","'setFiles' is assigned a value but never used.","'data' is assigned a value but never used.","'error' is assigned a value but never used.","'getS3SignedUrlCallBack' is defined but never used.","React Hook React.useEffect has missing dependencies: 'handleChange', 'hasBody', 'props.body', and 'selectLocalImage'. Either include them or remove the dependency array.",["441"],"'Grid' is defined but never used.","'ProtectedRoute' is defined but never used.","'useState' is defined but never used.","'Redirect' is defined but never used.","'useMutation' is defined but never used.","'FOLLOW_USER_GQL' is defined but never used.","'PROFILE_GQL' is defined but never used.","'history' is assigned a value but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"442","fix":"443"},{"messageId":"444","fix":"445","desc":"446"},{"messageId":"447","fix":"448","desc":"449"},{"desc":"450","fix":"451"},"Update the dependencies array to be: [props.crudOtion, props.withAuther]",{"range":"452","text":"453"},"removeEscape",{"range":"454","text":"455"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"456","text":"457"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [quill, body, props.body, hasBody, selectLocalImage, handleChange]",{"range":"458","text":"459"},[1475,1477],"[props.crudOtion, props.withAuther]",[13037,13038],"",[13037,13037],"\\",[4829,4842],"[quill, body, props.body, hasBody, selectLocalImage, handleChange]"]