[{"C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\index.js":"1","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\ApolloProvider.js":"2","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\serviceWorker.js":"3","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\App.js":"4","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\Theme.js":"5","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\context\\auth.js":"6","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\views\\Login.js":"7","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\views\\Home.js":"8","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\components\\Navbar.js":"9","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\views\\Content\\Draft.js":"10","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\views\\Sign-up.js":"11","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\views\\Content\\MyAuthors.js":"12","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\views\\Content\\Article.js":"13","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\components\\AuthRoute.js":"14","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\components\\Editor.js":"15","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\components\\AnalystInfo.js":"16","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\components\\UI\\messages.js":"17","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\components\\Company\\CompanyCard.js":"18","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\util\\hooks.js":"19","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\components\\Content\\ContentCards.js":"20","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Content\\commentGql.js":"21","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Content\\draftsGql.js":"22","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Content\\articleGql.js":"23","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Auth\\authGql.js":"24","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\components\\UserInfo.js":"25","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\views\\EndUserProfile.js":"26","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\views\\profileSetting\\ProfileSetting.js":"27","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\views\\profileSetting\\AccountSecurty.js":"28"},{"size":520,"mtime":1616876444791,"results":"29","hashOfConfig":"30"},{"size":746,"mtime":1616876444772,"results":"31","hashOfConfig":"30"},{"size":4813,"mtime":1616876444795,"results":"32","hashOfConfig":"30"},{"size":1884,"mtime":1618055978358,"results":"33","hashOfConfig":"30"},{"size":430,"mtime":1617633652587,"results":"34","hashOfConfig":"30"},{"size":1341,"mtime":1616876444787,"results":"35","hashOfConfig":"30"},{"size":5813,"mtime":1616876444802,"results":"36","hashOfConfig":"30"},{"size":7361,"mtime":1617743231392,"results":"37","hashOfConfig":"30"},{"size":9885,"mtime":1617742943872,"results":"38","hashOfConfig":"30"},{"size":8220,"mtime":1617633652603,"results":"39","hashOfConfig":"30"},{"size":7241,"mtime":1616876444803,"results":"40","hashOfConfig":"30"},{"size":4114,"mtime":1617633652603,"results":"41","hashOfConfig":"30"},{"size":10162,"mtime":1617633652603,"results":"42","hashOfConfig":"30"},{"size":883,"mtime":1617633652587,"results":"43","hashOfConfig":"30"},{"size":4982,"mtime":1617633652603,"results":"44","hashOfConfig":"30"},{"size":3323,"mtime":1617633652587,"results":"45","hashOfConfig":"30"},{"size":1089,"mtime":1616876444786,"results":"46","hashOfConfig":"30"},{"size":4471,"mtime":1617633652603,"results":"47","hashOfConfig":"30"},{"size":937,"mtime":1616876444798,"results":"48","hashOfConfig":"30"},{"size":3950,"mtime":1617653860434,"results":"49","hashOfConfig":"30"},{"size":436,"mtime":1617633652603,"results":"50","hashOfConfig":"30"},{"size":1451,"mtime":1617633652603,"results":"51","hashOfConfig":"30"},{"size":1348,"mtime":1617633652603,"results":"52","hashOfConfig":"30"},{"size":476,"mtime":1616876444789,"results":"53","hashOfConfig":"30"},{"size":4448,"mtime":1617747845111,"results":"54","hashOfConfig":"30"},{"size":11458,"mtime":1618253279187,"results":"55","hashOfConfig":"30"},{"size":12240,"mtime":1618249906698,"results":"56","hashOfConfig":"30"},{"size":27006,"mtime":1618249568679,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"v5fjf5",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"61"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"61"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"61"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"61"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"61"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"61"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"61"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"61"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"61"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"61"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"61"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"61"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"61"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"61"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"61"},"C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\index.js",["135","136"],"\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\n\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport ApolloProvider from \"./ApolloProvider\";\r\n\r\n\r\nReactDOM.render(ApolloProvider, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n",["137","138"],"C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\ApolloProvider.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\serviceWorker.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\App.js",["139","140","141"],"import React, { Component } from \"react\";\r\nimport {\r\n  HashRouter,\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport { AuthProvider } from \"./context/auth\";\r\nimport \"./scss/style.scss\";\r\nimport Login from \"./views/Login\";\r\nimport SignUp from \"./views/Sign-up\";\r\nimport {AuthRoute} from \"./components/AuthRoute\";\r\nimport Home from \"./views/Home\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport EndUserProfile from \"./views/EndUserProfile\";\r\nimport ProfileSetting from \"./views/profileSetting/ProfileSetting\";\r\nimport AccountSecurty from \"./views/profileSetting/AccountSecurty\";\r\n\r\n\r\nimport Article from \"./views/Content/Article\";\r\nimport Draft from \"./views/Content/Draft\";\r\nimport { MyAuthors } from \"./views/Content/MyAuthors\";\r\nimport { theme } from \"./Theme\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { Container } from \"@material-ui/core\";\r\nexport class App extends Component {\r\n  render() {\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <AuthProvider>\r\n          <Router>\r\n            <Navbar />\r\n            <div>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route exact path=\"/EndUserProfile\" component={EndUserProfile} />\r\n              <Route exact path=\"/ProfileSetting\" component={ProfileSetting} />\r\n              <Route exact path=\"/AccountSecurty\" component={AccountSecurty} />\r\n\r\n\r\n\r\n              <Route exact path=\"/article\" component={Article} />\r\n              <Route  path=\"/draft/:draftId\" component={Draft} />\r\n              <Route exact path=\"/MyAuthers/:username/\" component={MyAuthors} />\r\n              <AuthRoute exact path=\"/Signup\" component={SignUp} />\r\n\r\n              <AuthRoute exact path=\"/Login\" component={Login} />\r\n            </div>\r\n          </Router>\r\n        </AuthProvider>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\Theme.js",["142","143"],"import { createMuiTheme } from '@material-ui/core/styles';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport green from '@material-ui/core/colors/green';\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#0081A7',\r\n    },\r\n    secondary: {\r\n      main: '#FED9B7',\r\n    },\r\n    success:{\r\n        main:'#00AFB9'\r\n    }, \r\n    background:{\r\n      default:\"#E5E5E5\"\r\n    }\r\n\r\n  },\r\n});","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\context\\auth.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\views\\Login.js",["144","145","146"],"import React, {  useContext, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n// //imagers\r\nimport GoogleIcon from \"../assets/icons/1004px-Google__G__Logo.svg.png\";\r\nimport TwitterIcon from \"../assets/icons/580b57fcd9996e24bc43c53e.png\";\r\n//graphql\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { LOGIN_USER } from \"../graphql/Auth/authGql\";\r\n//auth\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { useForm } from \"../util/hooks\";\r\nimport { CustomizedSnackbars } from \"../components/UI/messages\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://google.com/\">\r\n        Alpha+ best website ever!\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  GTsubmit: {\r\n    margin: theme.spacing(3, 0, 0),\r\n  },\r\n}));\r\nexport default function SignIn(props) {\r\n  const classes = useStyles();\r\n  const [success, setSuccess] = useState(false);\r\n  const context = useContext(AuthContext);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { onChange, onSubmit, values } = useForm(loginUserCallback, {\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\r\n    update(_, { data: { login: userData } }) {\r\n      context.login(userData);\r\n      props.history.push(\"/\");\r\n    },\r\n    onError(err) {\r\n      setErrors(\r\n        err && err.graphQLErrors[0]\r\n          ? err.graphQLErrors[0].extensions.exception.errors\r\n          : {}\r\n      );\r\n    },\r\n    variables: values,\r\n  });\r\n\r\n  function loginUserCallback() {\r\n    loginUser();\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={onSubmit}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={values.email}\r\n            onChange={onChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={values.password}\r\n            onChange={onChange}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          {loading ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n          )}\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"/Signup\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.GTsubmit}\r\n            >\r\n              Continue with google\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.GTsubmit}\r\n            >\r\n              Continue with twitter\r\n            </Button>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n      {success && (\r\n        <div>\r\n          <CustomizedSnackbars color=\"success\" message=\"Draft is created\" />;\r\n        </div>\r\n      )}\r\n      {Object.keys(errors).length > 0 && (\r\n        <div>\r\n          <ul>\r\n            {Object.values(errors).map((value) => (\r\n              <CustomizedSnackbars color=\"error\" message={value} />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\views\\Home.js",["147","148","149","150","151"],"import React, { useState, useEffect } from \"react\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { Button, Container, Grid, Paper } from \"@material-ui/core\";\r\n\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { CompanyCardLine } from \"../components/Company/CompanyCard\";\r\nimport {\r\n  ContentCard,\r\n  ContentCardPaper,\r\n} from \"../components/Content/ContentCards\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  rootCom: {\r\n    // width: \"100%\",\r\n    paddingTop: theme.spacing(2),\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1),\r\n      marginRight: theme.spacing(3),\r\n      marginLeft: theme.spacing(3),\r\n    },\r\n  },\r\n  cardStyle: {\r\n    width: \"100%\",\r\n    paddingBottom: theme.spacing(2),\r\n\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: \"660px\",\r\n      paddingRight: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2),\r\n    },\r\n  },\r\n  cardBtn: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(0.5),\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      // marginRight: theme.spacing(1),\r\n      marginLeft: theme.spacing(4),\r\n      display: \"inline-flex\",\r\n    },\r\n  },\r\n  companyLine: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    flexWrap: \"no-wrap\",\r\n    overflowX: \"scroll\",\r\n    overflowY: \"hidden\",\r\n    // whiteSpace: 'nowrap',\r\n    padding: theme.spacing(0),\r\n    \"-webkit-overflow-scrolling\": \"touch\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  porto: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1),\r\n    marginBottom: theme.spacing(8),\r\n\r\n  },\r\n}));\r\n\r\nfunction Home() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.rootCom}>\r\n      {/* Compnany line + 2 Content cards  */}\r\n\r\n      <Paper>\r\n        <Grid container direction=\"column\">\r\n          {/* Company Line */}\r\n\r\n          <CompanyCardLine data={companydummyData} />\r\n          <Grid container direction=\"row\" justify=\"space-around\">\r\n            <Grid item>\r\n              {/* Trending Card */}\r\n              <HomeCard\r\n                cardTitle=\"Trending Analysis\"\r\n                dataLimit={3}\r\n                data={contentdummyData}\r\n                btnText=\"More\"\r\n                auther\r\n              />\r\n            </Grid>\r\n\r\n            {/* News */}\r\n            <Grid item>\r\n              {/* Trending Card */}\r\n              <HomeCard\r\n                cardTitle=\"News\"\r\n                dataLimit={3}\r\n                data={contentdummyData}\r\n                btnText=\"More\"\r\n                \r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n\r\n      {/* Editors Picks + Latest Articles */}\r\n      <Grid container direction=\"row\" justify=\"space-between\">\r\n        <Grid item>\r\n          <Paper>\r\n            <HomeCard\r\n              dataLimit={3}\r\n              cardTitle=\"Editors Picks\"\r\n              data={contentdummyData}\r\n              btnText=\"Explore More\"\r\n              auther\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item>\r\n          <Paper>\r\n            <HomeCard\r\n              dataLimit={3}\r\n              cardTitle=\"Latest Articles\"\r\n              data={contentdummyData}\r\n              btnText=\"Explore More\"\r\n              auther\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n      {/* Portfolio : (Compnay + Articles) */}\r\n      <Paper className={classes.porto}>\r\n        <div>\r\n          <Typography variant=\"h4\" align=\"center\">\r\n            My Portfolio\r\n          </Typography>\r\n        </div>\r\n        <Grid container direction=\"row\" justify=\"space-around\">\r\n          {/* Company */}\r\n          <Grid item>\r\n            <ContentCardPaper data={contentdummyData} limit={3} auther />\r\n          </Grid>\r\n          {/* Articles */}\r\n          <Grid item>\r\n            <ContentCardPaper data={contentdummyData} limit={3} auther />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      {/* About Alpha+ ? */}\r\n      <Container></Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function HomeCard(props) {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = useState({\r\n    mobileView: false,\r\n  });\r\n\r\n  const { mobileView } = state;\r\n\r\n  useEffect(() => {\r\n    const setResponsiveness = () => {\r\n      return window.innerWidth < 900\r\n        ? setState((prevState) => ({ ...prevState, mobileView: true }))\r\n        : setState((prevState) => ({ ...prevState, mobileView: false }));\r\n    };\r\n\r\n    setResponsiveness();\r\n\r\n    window.addEventListener(\"resize\", () => setResponsiveness());\r\n  }, []);\r\n  const cardButton = () =>\r\n    mobileView ? (\r\n      <Button\r\n        className={classes.cardBtn}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        component={RouterLink}\r\n        to=\"/\"\r\n      >\r\n        {props.btnText}\r\n      </Button>\r\n    ) : (\r\n      <Button\r\n        className={classes.cardBtn}\r\n        color=\"primary\"\r\n        size=\"medium\"\r\n        component={RouterLink}\r\n        to=\"/\"\r\n      >\r\n        {`${props.btnText} >>`}\r\n      </Button>\r\n    );\r\n\r\n  return (\r\n    <div className={classes.cardStyle}>\r\n      {/* Trending Card */}\r\n      <ContentCardPaper\r\n        limit={props.dataLimit}\r\n        title={props.cardTitle}\r\n        data={props.data}\r\n        auther={props.auther}\r\n      />\r\n      {cardButton()}\r\n    </div>\r\n  );\r\n}\r\nHome.defaultProps = {\r\n  auther: false,\r\n};\r\nHome.propTypes = {\r\n  cardTitle: PropTypes.string,\r\n  dataLimit: PropTypes.number,\r\n  data: PropTypes.array,\r\n  btnText: PropTypes.string,\r\n  btnRoute: PropTypes.string,\r\n  auther: PropTypes,\r\n};\r\n\r\nconst companydummyData = [\r\n  { Symbol: \"AAPL\", price: 293, changePrice: +192 },\r\n  { Symbol: \"GOOG\", price: 351, changePrice: -122 },\r\n  { Symbol: \"AMZN\", price: 120, changePrice: +50 },\r\n  { Symbol: \"EBSY\", price: 963, changePrice: +124 },\r\n  { Symbol: \"MOZA\", price: 56, changePrice: -56 },\r\n  { Symbol: \"NANI\", price: 123, changePrice: +21 },\r\n  { Symbol: \"AAPL\", price: 293, changePrice: +192 },\r\n  { Symbol: \"GOOG\", price: 351, changePrice: -122 },\r\n  { Symbol: \"AMZN\", price: 120, changePrice: +50 },\r\n  { Symbol: \"EBSY\", price: 963, changePrice: +124 },\r\n  { Symbol: \"MOZA\", price: 56, changePrice: -56 },\r\n  { Symbol: \"NANI\", price: 123, changePrice: +21 },\r\n];\r\nconst contentdummyData = [\r\n  {\r\n    name: \"jhon Doe\",\r\n    img: \"Jh\",\r\n    title: \"This a test dummy title\",\r\n    bio: \"simpleBio\",\r\n  },\r\n  {\r\n    name: \"Ziad Fnan\",\r\n    img: \"Zi\",\r\n    title: \"Don't Miss This intersting analyst\",\r\n    bio: \"simpleBio\",\r\n  },\r\n  {\r\n    name: \"Abo Motlaq\",\r\n    img: \"AH\",\r\n    title: \"I only love apple products\",\r\n    bio: \"simpleBio\",\r\n  },\r\n  {\r\n    name: \"Aziz Amir\",\r\n    img: \"AA\",\r\n    title: \"Play it cool with your stocks\",\r\n    bio: \"simpleBio\",\r\n  },\r\n  {\r\n    name: \"Saleh Mogren\",\r\n    img: \"SM\",\r\n    title: \"How to write dummy data like a pro\",\r\n    bio: \"simpleBio\",\r\n  },\r\n];\r\n\r\nexport default Home;\r\n","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\components\\Navbar.js",["152"],"import {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n  IconButton,\r\n  Drawer,\r\n  Link,\r\n  MenuItem,\r\n  fade,\r\n  InputBase,\r\n  Menu,\r\n  Divider,\r\n  List,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { AccountCircle, Search, ExitToApp } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    backgroundColor: theme.palette.primary,\r\n\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      paddingRight: \"79px\",\r\n      paddingLeft: \"118px\",\r\n    },\r\n    flexGrow: 1,\r\n    paddingLeft: 0,\r\n  },\r\n  logo: {\r\n    fontFamily: \"sans-serif\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"bold\",\r\n    marginRight: theme.spacing(5),\r\n    /* or 54px */\r\n    textDecoration: \"none\",\r\n    \"&:visited\": {\r\n      color: theme.palette.common.white,\r\n    },\r\n    letterSpacing: \"2px\",\r\n    // display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n      fontSize: \"36px\",\r\n      lineHeight: \"150%\",\r\n    },\r\n  },\r\n  leftMenu: {\r\n    paddingTop: theme.spacing(4),\r\n  },\r\n  menuButton: {\r\n    display: \"inline-block\",\r\n\r\n    fontFamily: \"Open Sans, sans-serif\",\r\n    fontWeight: 400,\r\n    size: theme.typography.fontSize,\r\n    marginLeft: theme.spacing(4),\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  drawerContainer: {\r\n    padding: theme.spacing(3, 6),\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"80%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginRight: theme.spacing(2),\r\n\r\n      marginLeft: theme.spacing(12),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"80%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n  rightMenu: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n\r\n    // marginRight: theme.spacing(2),\r\n    marginLeft: theme.spacing(20),\r\n    color: theme.palette.primary,\r\n  },\r\n  loginBtn: {\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.9),\r\n      color: theme.palette.getContrastText(theme.palette.common.white),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Header(props) {\r\n  const context = useContext(AuthContext);\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const loggingOut = () => {\r\n    handleMenuClose();\r\n    context.logout();\r\n  };\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>{\" \"}\r\n      <MenuItem onClick={loggingOut}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          onClick={loggingOut}\r\n        >\r\n          <ExitToApp />\r\n        </IconButton>\r\n        <p>Logout</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const leftMenu = [\r\n    {\r\n      title: \"My Authers\",\r\n      link: context.user ? `/MyAuthers/${context.user.id}/` : `/Login`,\r\n    },\r\n    {\r\n      title: \"My Portfolio\",\r\n      link: \"/Portfolio\",\r\n    },\r\n    {\r\n      title: \"Sectors\",\r\n      dropdown: true,\r\n      menu: [\r\n        {\r\n          title: \"My Portfolio\",\r\n          link: \"/Portfolio\",\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const rightMenu = [\r\n    {\r\n      title: \"Login\",\r\n      link: \"/Login\",\r\n      isLoggedIn: false,\r\n    },\r\n    {\r\n      title: \"logut\",\r\n      link: \"/\",\r\n      function: () => context.logout(),\r\n      isLoggedIn: true,\r\n    },\r\n  ];\r\n\r\n  const { header, logo, menuButton, toolbar, drawerContainer } = useStyles();\r\n\r\n  const [state, setState] = useState({\r\n    mobileView: false,\r\n    drawerOpen: false,\r\n  });\r\n\r\n  const { mobileView, drawerOpen } = state;\r\n\r\n  useEffect(() => {\r\n    const setResponsiveness = () => {\r\n      return window.innerWidth < 900\r\n        ? setState((prevState) => ({ ...prevState, mobileView: true }))\r\n        : setState((prevState) => ({ ...prevState, mobileView: false }));\r\n    };\r\n\r\n    setResponsiveness();\r\n\r\n    window.addEventListener(\"resize\", () => setResponsiveness());\r\n  }, []);\r\n  const searchBar = () => {\r\n    return (\r\n      <div className={classes.search}>\r\n        <div className={classes.searchIcon}>\r\n          <Search />\r\n        </div>\r\n        <InputBase\r\n          placeholder=\"Search…\"\r\n          classes={{\r\n            root: classes.inputRoot,\r\n            input: classes.inputInput,\r\n          }}\r\n          inputProps={{ \"aria-label\": \"search\" }}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n  const displayDesktop = () => {\r\n    return (\r\n      <Toolbar className={toolbar}>\r\n        {Logo}\r\n        <div className={classes.leftMenu}>{getLeftMenu()}</div>\r\n        {/* Search Bar */}\r\n        <div>{searchBar()}</div>\r\n        {/* Righ Menu */}\r\n        <div> {getRightMenu()}</div>\r\n        {renderMenu}\r\n      </Toolbar>\r\n    );\r\n  };\r\n  const getRightMenu = () => {\r\n    return (\r\n      <div className={classes.rightMenu}>\r\n        {context.user ? (\r\n          <IconButton\r\n            edge=\"end\"\r\n            aria-label=\"account of current user\"\r\n            aria-controls={menuId}\r\n            aria-haspopup=\"true\"\r\n            onClick={handleProfileMenuOpen}\r\n            color=\"inherit\"\r\n          >\r\n            <AccountCircle />\r\n          </IconButton>\r\n        ) : (\r\n          <Button\r\n            className={classes.loginBtn}\r\n            variant=\"outlined\"\r\n            color=\"inherit\"\r\n            component={RouterLink}\r\n            to=\"/Login\"\r\n          >\r\n            Login\r\n          </Button>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n  const displayMobile = () => {\r\n    const handleDrawerOpen = () =>\r\n      setState((prevState) => ({ ...prevState, drawerOpen: true }));\r\n    const handleDrawerClose = () =>\r\n      setState((prevState) => ({ ...prevState, drawerOpen: false }));\r\n\r\n    return (\r\n      <Toolbar>\r\n        <IconButton\r\n          {...{\r\n            edge: \"start\",\r\n            color: \"inherit\",\r\n            \"aria-label\": \"menu\",\r\n            \"aria-haspopup\": \"true\",\r\n            onClick: handleDrawerOpen,\r\n          }}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n\r\n        <Drawer\r\n          {...{\r\n            anchor: \"left\",\r\n            open: drawerOpen,\r\n            onClose: handleDrawerClose,\r\n          }}\r\n        >\r\n          <div className={drawerContainer}>{getDrawerChoices()}</div>\r\n        </Drawer>\r\n\r\n        <div>{Logo}</div>\r\n        <div>{searchBar()}</div>\r\n      </Toolbar>\r\n    );\r\n  };\r\n\r\n  const getDrawerChoices = () => {\r\n    return (\r\n      <div>\r\n        {leftMenu.map((e) => {\r\n          return (\r\n            <Link\r\n              {...{\r\n                component: RouterLink,\r\n                to: e.link,\r\n                color: \"inherit\",\r\n                style: { textDecoration: \"none\" },\r\n                key: e.title,\r\n              }}\r\n            >\r\n              <MenuItem>{e.title}</MenuItem>\r\n            </Link>\r\n          );\r\n        })}\r\n        <Divider />\r\n        {context.user ? (\r\n          <List>\r\n            <MenuItem>Profile</MenuItem>\r\n\r\n            <MenuItem component={Button} onClick={() => context.logout()}>\r\n              Logout\r\n            </MenuItem>\r\n          </List>\r\n        ) : (\r\n          <Link\r\n            {...{\r\n              component: RouterLink,\r\n              to: \"/Login\",\r\n              color: \"inherit\",\r\n              style: { textDecoration: \"none\" },\r\n              key: \"Login\",\r\n            }}\r\n          >\r\n            <MenuItem>Login</MenuItem>\r\n          </Link>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const Logo = (\r\n    <Typography variant=\"h6\" component=\"h1\" className={logo}>\r\n      Alpha+\r\n    </Typography>\r\n  );\r\n\r\n  const getLeftMenu = () => {\r\n    return leftMenu.map((e) => {\r\n      return (\r\n        <Button\r\n          {...{\r\n            key: e.title,\r\n            color: \"inherit\",\r\n            to: e.link,\r\n            component: RouterLink,\r\n            className: menuButton,\r\n          }}\r\n        >\r\n          {e.title}\r\n        </Button>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar className={header} position=\"static\">\r\n        {mobileView ? displayMobile() : displayDesktop()}\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\views\\Content\\Draft.js",["153","154","155","156","157"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Editor } from \"../../components/Editor\";\r\nimport { Button, Container } from \"@material-ui/core\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport { CustomizedSnackbars } from \"../../components/UI/messages\";\r\n\r\n// import Snackbar from '@material-ui/core/Snackbar';\r\n// import MuiAlert from '@material-ui/lab/Alert';\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { useForm } from \"../../util/hooks\";\r\nimport {\r\n  CREATE_DRAFT,\r\n  EDIT_DRAFT,\r\n  GET_DRAFT,\r\n  PUBLISH_DRAFT,\r\n} from \"../../graphql/Content/draftsGql\";\r\nimport { useMutation, useLazyQuery, useQuery } from \"@apollo/client\";\r\nimport TagsInput from \"react-tagsinput\";\r\n\r\nimport \"react-tagsinput/react-tagsinput.css\"; // If using WebPack and style-loader.\r\n\r\nfunction sleep(ms) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"25ch\",\r\n  },\r\n  publishBtn: {\r\n    backgroundColor: theme.palette.success.light,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.success.main,\r\n    },\r\n    color: theme.palette.common.white,\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  saveBtn: {\r\n    backgroundColor: theme.palette.primary.light,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n    color: theme.palette.common.white,\r\n  },\r\n  tagsInputStyle: {\r\n    marginBottom: theme.spacing(4),\r\n    marginTop: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nfunction Draft(props) {\r\n  const classes = useStyles();\r\n\r\n  // Check if new draft or editing existing draft with prams\r\n\r\n  const { user } = useContext(AuthContext);\r\n  const [errors, setErrors] = useState({});\r\n  const [success, setSuccess] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const { onSubmit } = useForm(actionDraftCallback, {});\r\n  const [startPublish, setPublish] = useState(false);\r\n  const [newDraft, setNewDraft] = useState(false);\r\n  const [fetched, setFetched] = useState(false);\r\n\r\n  let { draftId } = useParams();\r\n  if (draftId == \"new\" && !newDraft) {\r\n    setNewDraft(true);\r\n  }\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [tags, setTags] = useState([]);\r\n  const [files, setFiles] = useState([]);\r\n  const { loading: fetchLoading, data: fetchedData } = useQuery(GET_DRAFT, {\r\n    variables: {\r\n      draftId,\r\n    },\r\n    onCompleted(data) {\r\n      setFetched(true);\r\n      setTitle(fetchedData.getDraft.draftName);\r\n      // setContent({\r\n      //   body: fetchedData.getDraft.draftBody,\r\n      // });\r\n      setBody(fetchedData.getDraft.draftBody);\r\n      console.log(`body`, fetchedData.getDraft.draftBody);\r\n    },\r\n    skip: newDraft || fetched,\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   if (!fetchLoading && !fetched) {\r\n\r\n  //   }\r\n  // });\r\n  const [createDraft, { loading: createLoading }] = useMutation(CREATE_DRAFT, {\r\n    onError(err) {\r\n      console.log(`Error on ${err}`);\r\n      setErrors(\r\n        err && err.graphQLErrors[0]\r\n          ? err.graphQLErrors[0].extensions.exception.errors\r\n          : {}\r\n      );\r\n    },\r\n    variables: {\r\n      id: user.id,\r\n      contentInput: {\r\n        title,\r\n        body,\r\n      },\r\n    },\r\n    onCompleted(data) {\r\n      console.log(`Draft is success ${data.createDraft.id}`);\r\n      setSuccessMessage(\"Draft is created\");\r\n      setSuccess(true);\r\n      sleep(2000).then(() => props.history.push(\"/\"));\r\n    },\r\n  });\r\n  const [saveDraft, { loading: saveLoading }] = useMutation(EDIT_DRAFT, {\r\n    onError(err) {\r\n      console.log(`Error on ${err}`);\r\n      setErrors(\r\n        err && err.graphQLErrors[0]\r\n          ? err.graphQLErrors[0].extensions.exception.errors\r\n          : {}\r\n      );\r\n    },\r\n    variables: {\r\n      id: user.id,\r\n      draftID: draftId,\r\n      contentInput: {\r\n        title,\r\n        body,\r\n      },\r\n    },\r\n    onCompleted(data) {\r\n      console.log(`Draft is Updated ${data.editDraft.id}`);\r\n      setSuccessMessage(\"Draft is Saveed\");\r\n\r\n      setSuccess(true);\r\n      if (!startPublish)\r\n        sleep(2000).then(() =>\r\n          props.history.push(`/MyAuthers/${data.editDraft.draftAuther.id}`)\r\n        );\r\n    },\r\n  });\r\n  const [publishDraft] = useMutation(PUBLISH_DRAFT, {\r\n    onError(err) {\r\n      console.log(`Error on ${err}`);\r\n      setErrors(\r\n        err && err.graphQLErrors[0]\r\n          ? err.graphQLErrors[0].extensions.exception.errors\r\n          : {}\r\n      );\r\n    },\r\n    variables: {\r\n      id: user.id,\r\n      draftID: draftId,\r\n      tags: tags,\r\n    },\r\n    onCompleted(data) {\r\n      console.log(`Draft is Published ${data.publishDraft.id}`);\r\n      setSuccessMessage(\"Draft is published\");\r\n      setSuccess(true);\r\n      sleep(2000).then(() =>\r\n        props.history.push(`/MyAuthers/${user.id}`)\r\n      );\r\n    },\r\n  });\r\n  function actionDraftCallback() {\r\n    if (newDraft) createDraft();\r\n    else {\r\n      saveDraft();\r\n    }\r\n  }\r\n  function publishDraftCall() {\r\n    setPublish(true);\r\n    saveDraft().then(() => publishDraft());\r\n  }\r\n  function handleTagsChange(tags) {\r\n    setTags(tags);\r\n    console.log(tags);\r\n  }\r\n\r\n  function onEditorChange(value) {\r\n    setBody(value);\r\n    // console.log(`New Body :${body}`);\r\n  }\r\n  const onTitleChange = (value) => {\r\n    setTitle(value.target.value);\r\n  };\r\n\r\n  const onFilesChange = (files) => {\r\n    setFiles(files);\r\n  };\r\n  const buttons = () => {\r\n    return newDraft ? (\r\n      // Create Button For New Draft\r\n      <Container>\r\n        <Button\r\n          size=\"large\"\r\n          variant=\"contained\"\r\n          className={classes.saveBtn}\r\n          onClick={onSubmit}\r\n        >\r\n          Create\r\n        </Button>\r\n      </Container>\r\n    ) : (\r\n      <Container>\r\n        {/* Save Draft 📝 */}\r\n        <Button\r\n          size=\"large\"\r\n          variant=\"contained\"\r\n          className={classes.saveBtn}\r\n          onClick={onSubmit}\r\n        >\r\n          Save\r\n        </Button>\r\n        {/* Publish Draft 📑 */}\r\n        <Button\r\n          size=\"large\"\r\n          variant=\"contained\"\r\n          className={classes.publishBtn}\r\n          onClick={publishDraftCall}\r\n        >\r\n          Publish Draft\r\n        </Button>\r\n      </Container>\r\n    );\r\n  };\r\n  return fetchLoading ? (\r\n    <CircularProgress />\r\n  ) : (\r\n    <div style={{ maxWidth: \"700px\", margin: \"2rem auto\" }}>\r\n      <div style={{ alignItems: \"center\" }}>\r\n        <TextField\r\n          id=\"outlined-full-width\"\r\n          label=\"Draft Name\"\r\n          style={{ margin: 8 }}\r\n          placeholder=\"Placeholder\"\r\n          helperText=\"Full width!\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          value={title}\r\n          variant=\"outlined\"\r\n          onChange={onTitleChange}\r\n        />{\" \"}\r\n      </div>\r\n      {!newDraft && (\r\n        <div\r\n          style={{ alignItems: \"center\" }}\r\n          className={classes.tagsInputStyle}\r\n        >\r\n          <TagsInput value={tags} onChange={handleTagsChange} />\r\n        </div>\r\n      )}\r\n      <Editor\r\n        placeholder={\"Start Posting Something\"}\r\n        onEditorChange={onEditorChange}\r\n        body={fetched ? body : \"\"}\r\n        onChange\r\n        onFilesChange={onFilesChange}\r\n      />\r\n\r\n      <div style={{ textAlign: \"center\", margin: \"2rem\" }}>\r\n        {saveLoading | createLoading ? <CircularProgress /> : buttons()}\r\n      </div>\r\n      {success && (\r\n        <div>\r\n          <CustomizedSnackbars color=\"success\" message={successMessage} />;\r\n        </div>\r\n      )}\r\n      {Object.keys(errors).length > 0 && (\r\n        <div>\r\n          <ul>\r\n            {Object.values(errors).map((value) => (\r\n              <CustomizedSnackbars color=\"error\" message={value} />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Draft;\r\n","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\views\\Sign-up.js",["158"],"import React, { useContext, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { CustomizedSnackbars } from \"../components/UI/messages\";\r\n\r\n//graphql\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { SIGNUP_USER } from \"../graphql/Auth/authGql\";\r\n//auth\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { useForm } from \"../util/hooks\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://google.com/\">\r\n        Alpha+\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp(props) {\r\n  const classes = useStyles();\r\n  const [success, setSuccess] = useState(false);\r\n  const context = useContext(AuthContext);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { onChange, onSubmit, values } = useForm(signUpUserCallback, {\r\n    firstName: \"\",\r\n    lasttName: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPasswrod: \"\",\r\n  });\r\n\r\n  const [signUpUser, { loading }] = useMutation(SIGNUP_USER, {\r\n    update(_, { data: { register: userData } }) {\r\n      context.login(userData);\r\n      props.history.push(\"/\");\r\n    },\r\n    onError(err) {\r\n      setErrors(\r\n        err && err.graphQLErrors[0]\r\n          ? err.graphQLErrors[0].extensions.exception.errors\r\n          : {}\r\n      );\r\n    },\r\n    variables: {\r\n      registerInput: {\r\n        name: values.firstName.concat(\" \", values.lasttName),\r\n        username: values.username,\r\n        email: values.email,\r\n        password: values.password,\r\n        confirmPassword: values.confirmPasswrod,\r\n      },\r\n    },\r\n  });\r\n\r\n  function signUpUserCallback() {\r\n    signUpUser();\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Create Free Account\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={onSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                onChange={onChange}\r\n                value={values.firstName}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"lname\"\r\n                name=\"lasttName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                autoFocus\r\n                onChange={onChange}\r\n                value={values.lasttName}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                onChange={onChange}\r\n                value={values.username}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={onChange}\r\n                value={values.email}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                onChange={onChange}\r\n                value={values.password}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"confirmPasswrod\"\r\n                label=\"Confrim Password\"\r\n                type=\"password\"\r\n                id=\"confirmPasswrod\"\r\n                onChange={onChange}\r\n                value={values.confirmPasswrod}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {loading ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          )}\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/Login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n      {success && (\r\n        <div>\r\n          <CustomizedSnackbars color=\"success\" message=\"Draft is created\" />;\r\n        </div>\r\n      )}\r\n      {Object.keys(errors).length > 0 && (\r\n        <div>\r\n          <ul>\r\n            {Object.values(errors).map((value) => (\r\n              <CustomizedSnackbars color=\"error\" message={value} />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\views\\Content\\MyAuthors.js",["159","160","161","162","163","164","165","166","167","168","169"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useParams, Link as RouterLink, Link } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  Card,\r\n  Typography,\r\n  Divider,\r\n  ButtonBase,\r\n  Button,\r\n  Avatar,\r\n  TextField,\r\n  FormHelperText,\r\n  List,\r\n  ListItem,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_DRAFTS } from \"../../graphql/Content/draftsGql\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport { ContentCard } from \"../../components/Content/ContentCards\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { GET_ARTICLES } from \"../../graphql/Content/articleGql\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginLeft: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  Section: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: theme.spacing(4),\r\n    },\r\n  },\r\n  titleSection: {\r\n    padding: theme.spacing(2),\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n}));\r\nexport function MyAuthors(props) {\r\n  const classes = useStyles();\r\n\r\n  const context = useContext(AuthContext);\r\n  const [drafts, setDrafts] = useState([]);\r\n  const [articles, setArticles] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(`Drafts are Fetched`);\r\n  // }, [state.drafts]);\r\n  const params = props.match.params.username;\r\n  const { loading: draftFetchingLoading } = useQuery(GET_DRAFTS, {\r\n    onCompleted(data) {\r\n      setDrafts(data.getDrafts);\r\n      console.log(`Drafts length ${drafts.length}`);\r\n    },\r\n    variables: {\r\n      autherId: params,\r\n    },\r\n    onError(error) {\r\n      console.log(`F}ailed to fetch drafts : ${error}`);\r\n    },\r\n  });\r\n  const { loading: articlesFethcingLoading } = useQuery(GET_ARTICLES, {\r\n    onCompleted(data) {\r\n      setArticles(data.getArticles);\r\n      console.log(`Articles length ${articles.length}`);\r\n    },\r\n    variables: {\r\n      userId: params,\r\n    },\r\n    onError(error) {\r\n      console.log(`F}ailed to fetch articles : ${error}`);\r\n    },\r\n  });\r\n  const articlesSection = () => {\r\n    return articlesFethcingLoading ? (\r\n      <CircularProgress />\r\n    ) : (\r\n      <Container className={classes.Section}>\r\n        <Card>\r\n          <Container>\r\n            <Typography variant=\"h4\" className={classes.titleSection}>\r\n              My Articles{\" \"}\r\n            </Typography>\r\n          </Container>\r\n          <Container>\r\n            <List>\r\n              {articles.map((e) => {\r\n                return (\r\n                  <ListItem>\r\n                    <ContentCard\r\n                      \r\n                      title={e.articleTitle}\r\n                      link={`/article/${e.id}`}\r\n                    />\r\n                  </ListItem>\r\n                );\r\n              })}\r\n            </List>\r\n          </Container>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  };\r\n  const draftSection = () => {\r\n    return draftFetchingLoading ? (\r\n      <CircularProgress />\r\n    ) : (\r\n      <Container className={classes.Section}>\r\n        <Card>\r\n          <Container>\r\n            <Typography variant=\"h4\" className={classes.titleSection}>\r\n              My Drafts\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              component={Link}\r\n              to=\"/draft/new\"\r\n            >\r\n              Create New Draft\r\n            </Button>\r\n          </Container>\r\n          <Container>\r\n            <List>\r\n              {drafts.map((e) => {\r\n                return (\r\n                  <ListItem>\r\n                    <ContentCard\r\n                      crudOtin\r\n                      title={e.draftName}\r\n                      link={`/draft/${e.id}`}\r\n                    />\r\n                  </ListItem>\r\n                );\r\n              })}\r\n            </List>\r\n          </Container>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  };\r\n  return (\r\n    <Container>\r\n      <Grid>\r\n        <Grid item>{articlesSection()}</Grid>\r\n        <Grid item>{draftSection()}</Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\views\\Content\\Article.js",["170","171","172","173","174","175","176","177"],"import React, { useState, useContext } from \"react\";\r\nimport PropTypes, { func } from \"prop-types\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Divider,\r\n  ButtonBase,\r\n  Button,\r\n  Avatar,\r\n  TextField,\r\n  FormHelperText,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { AuthContext } from \"../../context/auth\";\r\n\r\nimport ReplyIcon from \"@material-ui/icons/Reply\";\r\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport AddCommentIcon from \"@material-ui/icons/AddComment\";\r\nimport {\r\n  ArticleAutherInfo,\r\n  ArticleAutherInfoExpanded,\r\n} from \"../../components/AnalystInfo\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport { GET_ARTICLE } from \"../../graphql/Content/articleGql\";\r\nimport { ADD_COMMENT } from \"../../graphql/Content/commentGql\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginLeft: 0,\r\n  },\r\n  articleLayout: {\r\n    paddingTop: theme.spacing(5),\r\n    marginRight: theme.spacing(0),\r\n    marginLeft: theme.spacing(0),\r\n    padding: theme.spacing(1),\r\n    paddingBottom: theme.spacing(4),\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      marginLeft: theme.spacing(40),\r\n      marginRight: theme.spacing(40),\r\n    },\r\n    \"& img\": {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  analystInfoSection: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  title: {\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  body: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  likeBtn: {\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.9),\r\n    },\r\n  },\r\n  commentsLayout: {\r\n    marginTop: theme.spacing(5),\r\n  },\r\n  commentsHeader: {\r\n    padding: theme.spacing(4),\r\n    color: theme.palette.grey[400],\r\n  },\r\n  addComment: {\r\n    paddingBottom: theme.spacing(2),\r\n    paddingRight: theme.spacing(4),\r\n    \"& .MuiTextField-root\": {\r\n      width: \"100%\",\r\n      padding: theme.spacing(4),\r\n      paddingTop: theme.spacing(1),\r\n      borderTopLeftRadius: 0,\r\n    },\r\n  },\r\n  comment: {\r\n    padding: theme.spacing(2),\r\n    \"& .MuiAvatar-root\": {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    \"& .MuiDivider-root\": {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    \"& .MuiGrid-root\": {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    \"& .commentBody\": {\r\n      paddingBottom: theme.spacing(2),\r\n    },\r\n  },\r\n  commentBtn: {\r\n    paddingTop: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nconst img = \"avatars/7.jpg\";\r\nconst analystInfo = {\r\n  name: \"jhon doe\",\r\n  img: img,\r\n  bio:\r\n    \"This a logn bio from the user and should give a breif about the user prsonality\",\r\n};\r\nconst commentsDocs = [\r\n  {\r\n    name: \"Alex\",\r\n    Avatar: \"AL\",\r\n    date: \"2021-2-21\",\r\n    body: \"Great Article\",\r\n  },\r\n  {\r\n    name: \"Ziad\",\r\n    Avatar: \"ZI\",\r\n    date: \"2021-2-22\",\r\n    body: \"I dissagree , there should not be any downsides\",\r\n  },\r\n  {\r\n    name: \"Mohammed\",\r\n    Avatar: \"MO\",\r\n    date: \"2021-2-24\",\r\n    body: \"Please keep up the good work\",\r\n  },\r\n];\r\n\r\nconst Article = (props) => {\r\n  const classes = useStyles();\r\n  let { articleId } = useParams();\r\n  console.log(articleId);\r\n  const { loading: articleFetchingLoading, data, error } = useQuery(\r\n    GET_ARTICLE,\r\n    {\r\n      variables: {\r\n        articleId: articleId,\r\n      },\r\n      onError(err) {\r\n        console.log(`Error Happend ${err}`);\r\n      },\r\n    }\r\n  );\r\n  return articleFetchingLoading ? (\r\n    <CircularProgress />\r\n  ) : (\r\n    <div className=\"background\">\r\n      <div className={classes.articleLayout}>\r\n        <ArticleSection\r\n          title={data.getArticle.articleTitle}\r\n          body={data.getArticle.articleBody}\r\n          auther={data.getArticle.articleAuthor}\r\n        />\r\n\r\n        <CommentsSection\r\n          commentCount={data.getArticle.commentCount}\r\n          cooments={data.getComments}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nArticle.propTypes = {};\r\n\r\nexport default Article;\r\n\r\nconst ArticleSection = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container>\r\n      <Paper elevation={2}>\r\n        <ArticleAutherInfo\r\n          img={props.auther.img}\r\n          name={props.auther.username}\r\n        />\r\n        {/* Title + Body Container */}\r\n        <Container>\r\n          {/* Title  */}\r\n          <Container className={classes.title}>\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              direction=\"column\"\r\n              justify=\"space-between\"\r\n              alignItems=\"baseline\"\r\n            >\r\n              <Grid item>\r\n                <h1>{props.title}</h1>\r\n              </Grid>\r\n              <Grid item container direction=\"row\" spacing={1}>\r\n                <Grid item xs>\r\n                  <Typography variant=\"caption\">\r\n                    Published 17 Feb, 2021\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <Typography variant=\"caption\">\r\n                    last updated feb 19 2021\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n          {/* Body */}\r\n          <Container className={classes.body}>\r\n            <div dangerouslySetInnerHTML={{ __html: props.body }} />\r\n          </Container>\r\n          <Divider variant=\"middle\" />\r\n          {/* Article Buttons */}\r\n          <Container>\r\n            <Grid container justify=\"space-evenly\" spacing={2} xs sm>\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"text\"\r\n                  color=\"primary\"\r\n                  startIcon={<ThumbUpAltOutlinedIcon />}\r\n                >\r\n                  Like the article?\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"text\"\r\n                  color=\"primary\"\r\n                  startIcon={<ShareIcon />}\r\n                >\r\n                  Share the article\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"text\"\r\n                  color=\"primary\"\r\n                  startIcon={<AddCommentIcon />}\r\n                >\r\n                  Add Comment\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        </Container>\r\n      </Paper>\r\n      <Paper elevation={2} className={classes.analystInfoSection}>\r\n        <ArticleAutherInfoExpanded\r\n          img={props.auther.img}\r\n          name={props.auther.name}\r\n          username={props.auther.username}\r\n          bio={analystInfo.bio}\r\n        />\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nArticleSection.propTypes = {};\r\n\r\nfunction CommentsSection(props) {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  let { articleId } = useParams();\r\n  const [errors, setErrors] = useState({});\r\n  const [commentBody, setCommentBody] = useState(\"\");\r\n  const classes = useStyles();\r\n  const comments = (commentsDocs) =>\r\n    commentsDocs.map((v) => (\r\n      <CreateComment\r\n        name={v.commentAuthor.username}\r\n        body={v.commentBody}\r\n        date={v.createdAt}\r\n        avatar={v.commentAuthor.img}\r\n      />\r\n    ));\r\n  const [addComment, { laoding: commentLoading }] = useMutation(ADD_COMMENT, {\r\n    variables: {\r\n      autherId: !user ? \"undefind\" : user.id,\r\n      articleId: articleId,\r\n      commentBody: commentBody,\r\n    },\r\n    onCompleted(data) {\r\n      window.location.reload();\r\n    },\r\n    onError(err) {\r\n      console.log(`Error on ${err}`);\r\n      setErrors(\r\n        err && err.graphQLErrors[0]\r\n          ? err.graphQLErrors[0].extensions.exception.errors\r\n          : {}\r\n      );\r\n    },\r\n  });\r\n  function onCommentChange(value) {\r\n    setCommentBody(value.target.value);\r\n  }\r\n  function addCommentCall() {\r\n    if (commentBody.trim() != \"\") addComment();\r\n  }\r\n  return (\r\n    <Container className={classes.commentsLayout}>\r\n      <Paper elevation={2}>\r\n        <Container>\r\n          <Container className={classes.commentsHeader}>\r\n            <Typography variant=\"h4\">Comments({props.commentCount})</Typography>\r\n          </Container>\r\n          <Container className={classes.addComment}>\r\n            <form onSubmit={addCommentCall}>\r\n              <Avatar>OP</Avatar>\r\n              <TextField\r\n                id=\"outlined-multiline-static\"\r\n                multiline\r\n                rows={4}\r\n                placeholder=\"add your comment..\"\r\n                variant=\"outlined\"\r\n                value={commentBody}\r\n                error={Object.keys(errors).length > 0}\r\n                onChange={onCommentChange}\r\n                disabled={!user}\r\n              />\r\n              {commentLoading ? (\r\n                <CircularProgress />\r\n              ) : (\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                  Publish\r\n                </Button>\r\n              )}\r\n            </form>\r\n          </Container>\r\n          <Container>{comments(props.cooments)}</Container>\r\n        </Container>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst CreateComment = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container className={classes.comment}>\r\n      <Divider />\r\n      <Grid container direction=\"row\" justify=\"space-between\">\r\n        <Grid item container xs={4} sm>\r\n          <Avatar>\r\n            {props.avatar == null ? props.name.split(2) : props.avatar}\r\n          </Avatar>\r\n          <Typography variant=\"subtitle1\">{props.name}</Typography>\r\n        </Grid>\r\n        <Typography variant=\"caption\">{props.date}</Typography>\r\n      </Grid>\r\n      <Container className=\"commentBody\">\r\n        <Typography variant=\"body2\">{props.body}</Typography>\r\n      </Container>\r\n      <Container className={classes.commentBtn}>\r\n        <Button startIcon={<ReplyIcon />}>Reply</Button>\r\n        <Button startIcon={<ThumbUpAltOutlinedIcon />}>Like</Button>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nCreateComment.propTypes = {};\r\n","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\components\\AuthRoute.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\components\\Editor.js",["178","179","180","181","182","183","184","185","186","187"],"import React, { useState } from \"react\";\r\n\r\nimport { useQuill } from \"react-quilljs\";\r\n// or const { useQuill } = require('react-quilljs');\r\n\r\nimport \"quill/dist/quill.snow.css\"; // Add css for snow theme\r\n// or import 'quill/dist/quill.bubble.css'; // Add css for bubble theme\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { gql, useMutation, useQuery } from \"@apollo/client\";\r\nimport { useForm } from \"../util/hooks\";\r\nconst s3SignMutation = gql`\r\n  mutation($filename: String!, $filetype: String!) {\r\n    signS3(filename: $filename, filetype: $filetype) {\r\n      url\r\n      signedRequest\r\n    }\r\n  }\r\n`;\r\nexport function Editor(props) {\r\n  const theme = \"snow\";\r\n  const placeholder = props.placeholder;\r\n\r\n  const modules = {\r\n    toolbar: [\r\n      [\"bold\", \"italic\", \"underline\", \"strike\"], // toggled buttons\r\n      [\"blockquote\", \"code-block\"],\r\n\r\n      [{ header: 1 }, { header: 2 }], // custom button values\r\n      [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n      [{ script: \"sub\" }, { script: \"super\" }], // superscript/subscript\r\n      [{ indent: \"-1\" }, { indent: \"+1\" }], // outdent/indent\r\n      [{ direction: \"rtl\" }], // text direction\r\n\r\n      [{ size: [\"small\", false, \"large\", \"huge\"] }], // custom dropdown\r\n      [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n\r\n      [{ color: [] }, { background: [] }], // dropdown with defaults from theme\r\n      [{ font: [] }],\r\n      [{ align: [] }],\r\n      [\"link\", \"image\", \"video\"],\r\n\r\n      [\"clean\"], // remove formatting button\r\n    ],\r\n  };\r\n  const formats = [\r\n    // Inline\r\n    \"font\",\r\n    \"size\",\r\n    \"bold\",\r\n    \"italic\",\r\n    \"underline\",\r\n    \"strike\",\r\n    // Block\r\n    \"blockquote\",\r\n    \"code-block\",\r\n    \"list\",\r\n    \"bullet\",\r\n    \"indent\",\r\n    \"link\",\r\n    \"direction\",\r\n    \"align\",\r\n    \"header\",\r\n\r\n    //   Embeds\r\n    \"image\",\r\n    \"video\",\r\n  ];\r\n  const { quill, quillRef } = useQuill({\r\n    theme,\r\n    modules,\r\n    formats,\r\n    placeholder,\r\n  });\r\n  const [hasBody, setHasBody] = useState(false);\r\n  const [body, setBody] = useState(\"\");\r\n  const [files, setFiles] = useState([]);\r\n  const [filename, setFileName] = useState();\r\n  const [filetype, setFileType] = useState();\r\n\r\n  // Insert Image(selected by user) to quill\r\n  const insertToEditor = (url) => {\r\n    const range = quill.getSelection();\r\n    quill.insertEmbed(range.index, \"image\", url);\r\n  };\r\n  const [getS3SignedUrl, { loading, data, error }] = useMutation(\r\n    s3SignMutation,\r\n    {\r\n      variables: {\r\n        filename,\r\n        filetype,\r\n      },\r\n    }\r\n  );\r\n\r\n  function getS3SignedUrlCallBack() {\r\n    getS3SignedUrl();\r\n  }\r\n  const uploadToS3 = async (file, signedRequest) => {\r\n    const options = {\r\n      headers: {\r\n        \"Content-Type\": file.type,\r\n      },\r\n    };\r\n    await axios.put(signedRequest, file, options);\r\n  };\r\n  const formatFilename = (filename) => {\r\n    const date = moment().format(\"YYYYMMDD\");\r\n    const randomString = Math.random().toString(36).substring(2, 7);\r\n    const cleanFileName = filename.toLowerCase().replace(/[^a-z0-9]/g, \"-\");\r\n    const newFilename = `${date}-${randomString}-${cleanFileName}`;\r\n    return newFilename.substring(0, 60);\r\n  };\r\n  // Upload Image to Image Server such as AWS S3, Cloudinary, Cloud Storage, etc..\r\n  const saveToServer = async (file) => {\r\n    const body = new FormData();\r\n    body.append(\"file\", file);\r\n    setFileName(formatFilename(file.name));\r\n    setFileType(file.type);\r\n    const res = (await getS3SignedUrl()).data;\r\n\r\n    const response = res.signS3;\r\n    const { signedRequest, url } = response;\r\n    console.log(`signed ${signedRequest}`);\r\n    await uploadToS3(file, signedRequest);\r\n    insertToEditor(url);\r\n  };\r\n  const handleChange = () => {\r\n    if (quill) {\r\n      const html = quill.root.innerHTML;\r\n      // console.log(`${html}`);\r\n      setBody(html.toString());\r\n      console.log(body);\r\n      props.onEditorChange(html);\r\n    }\r\n  };\r\n  // Open Dialog to select Image File\r\n  const selectLocalImage = () => {\r\n    const input = document.createElement(\"input\");\r\n    input.setAttribute(\"type\", \"file\");\r\n    input.setAttribute(\"accept\", \"image/*\");\r\n    input.click();\r\n\r\n    input.onchange = () => {\r\n      const file = input.files[0];\r\n      saveToServer(file);\r\n    };\r\n  };\r\n  React.useEffect(() => {\r\n    if (quill) {\r\n      if (props.body != \"\" && !hasBody) {\r\n        console.log(`assign body`);\r\n\r\n        setHasBody(true);\r\n        const fetchedBody = props.body;\r\n        console.log(fetchedBody);\r\n        quill.clipboard.dangerouslyPasteHTML(fetchedBody);\r\n      } else {\r\n        console.log(`No Body`);\r\n      }\r\n      quill.on(\"editor-change\", () => {\r\n        handleChange();\r\n      });\r\n      // Add custom handler for Image Upload\r\n      quill.getModule(\"toolbar\").addHandler(\"image\", selectLocalImage);\r\n    }\r\n  }, [quill, body]);\r\n  return (\r\n    <div style={{ maxWidth: \"700px\", height: 300, marginBottom: 100 }}>\r\n      <div ref={quillRef} />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\components\\AnalystInfo.js",["188","189","190"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Avatar,\r\n  ButtonBase,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginLeft: 0,\r\n  },\r\n  wideFollowBtn: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: theme.spacing(20),\r\n    },\r\n  },\r\n}));\r\n\r\nexport function ArticleAutherInfo(props) {\r\n  const state = useState();\r\n  const classes = useStyles();\r\n  return (\r\n    <Container className={classes.root} maxWidth=\"xs\">\r\n      <Grid\r\n        spacing={4}\r\n        container\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        <Grid item xs={2}>\r\n          <Avatar alt={props.name} src={props.img} />\r\n        </Grid>\r\n        {/* // Analyst info  */}\r\n        <Grid item xs={4} sm spacing={0}>\r\n          <Grid item xs container direction=\"column\" spacing={0}>\r\n            <Grid item xs>\r\n              <Typography gutterBottom variant=\"subtitle1\">\r\n                {props.name}\r\n              </Typography>\r\n              <Typography variant=\"subtitle2\" gutterBottom noWrap>\r\n                {props.bio}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {/* //Analyst Follow Button */}\r\n        <Grid item xs={2} sm>\r\n          <Button variant=\"outlined\" color=\"primary\">\r\n            Follow\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nArticleAutherInfo.propTypes = {};\r\n\r\nexport function ArticleAutherInfoExpanded(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Grid\r\n        spacing={2}\r\n        container\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        <Grid item xs={0}>\r\n          <Avatar alt={props.name} src={props.img} />\r\n        </Grid>\r\n        {/* // Analyst info  */}\r\n        <Grid item xs={4} sm spacing={0}>\r\n          <Grid item xs container direction=\"column\" spacing={0}>\r\n            <Grid item xs sm>\r\n              <Typography  variant=\"body1\">\r\n                {props.name == null ? \"Name Null\" : props.name}\r\n              </Typography>\r\n              <Typography variant=\"caption\"  noWrap>\r\n                {props.username}\r\n              </Typography>\r\n              <Typography variant=\"body2\" >\r\n                {props.bio}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {/* //Analyst Follow Button */}\r\n        <Grid\r\n          item\r\n          xs={2}\r\n          sm\r\n          direction=\"column\"\r\n          justify=\"flex-end\"\r\n          alignItems=\"flex-end\"\r\n          container\r\n        >\r\n          <Grid item>\r\n            <Button\r\n              className={classes.wideFollowBtn}\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n            >\r\n              Follow\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item spacing={2} alignItems=\"center\" alignContent=\"center\">\r\n            <Typography gutterBottom variant=\"caption\">\r\n              100 Followers\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\components\\UI\\messages.js",["191"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport function CustomizedSnackbars(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  //   const handleClick = () => {\r\n  //     setOpen(true);\r\n  //   };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={props.color}>\r\n          {props.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\components\\Company\\CompanyCard.js",["192","193","194","195"],"import React, { Component, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Container,\r\n  Divider,\r\n  Typography,\r\n  Grid,\r\n  ButtonGroup,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport KeyboardArrowLeftIcon from \"@material-ui/icons/KeyboardArrowLeft\";\r\n\r\nconst userStyles = makeStyles((theme) => ({\r\n  companySymbol: {\r\n    color: theme.palette.primary.light,\r\n    fontWeight: theme.typography.fontWeightBold,\r\n  },\r\n  price: {\r\n    color: theme.palette.common.black,\r\n    fontWeight: theme.typography.fontWeightBold,\r\n  },\r\n  changePrice: {\r\n    color: theme.palette.success.light,\r\n    fontWeight: theme.typography.fontWeightBold,\r\n  },\r\n  verticalCard: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    padding: theme.spacing(1),\r\n    paddingRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      paddingRight: theme.spacing(10),\r\n    },\r\n  },\r\n  vertRoot: {\r\n    // \"& hr\": {\r\n    //   margin: theme.spacing(0, 0.5),\r\n    //   alignSelf: \"stretch\",\r\n    //   height: \"auto\",\r\n    // },\r\n    borderRight: `2px solid ${theme.palette.divider}`,\r\n    borderRadius: theme.shape.borderRadius,\r\n    paddingRight: theme.spacing(2),\r\n    marginLeft: theme.spacing(1),\r\n    // paddingLeft:theme.spacing(1)\r\n  },\r\n  companyLine: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    flexWrap: \"nowrap\",\r\n    overflowX: \"scroll\",\r\n    overflowY: \"hidden\",\r\n    // whiteSpace: 'nowrap',\r\n    padding: theme.spacing(0),\r\n    \"-webkit-overflow-scrolling\": \"touch\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n    scrollBehavior: \"smooth\",\r\n  },\r\n  companyLineScroll: {\r\n    width: \"100%\",\r\n    overflowX: \"auto\",\r\n    // overflowY: \"hidden\",\r\n    // whiteSpace: \"nowrap\",\r\n\r\n    \"-webkit-overflow-scrolling\": \"touch\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n    \"& .vertRoot\": {\r\n      flex: \"0 0 auto\",\r\n      marginRight: \" 3px\",\r\n    },\r\n  },\r\n  arrowButtons: {\r\n    zIndex: 2,\r\n    transform: \"matrix(-1, 0, 0, 1, 0, 0)\",\r\n    paddingLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n// Variant , Size\r\n\r\n// Data : Symbol(Compnay) , Price , Change\r\nfunction CompanyCard(props) {\r\n  const classes = userStyles();\r\n  const VerticalCard = () => {\r\n    return (\r\n      <div className={classes.vertRoot}>\r\n        <Grid Container className={classes.verticalCard} direction=\"row\">\r\n          <Grid item>\r\n            <Typography variant=\"subtitle2\" className={classes.companySymbol}>\r\n              {props.Symbol}\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" className={classes.price}>\r\n              {props.price}\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" className={classes.changePrice}>\r\n              {props.change}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Divider orientation=\"vertical\" flexItem />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  };\r\n  return <div>{props.vertical ? VerticalCard() : null}</div>;\r\n}\r\nCompanyCard.defaultProps = {\r\n  vertical: true,\r\n};\r\nCompanyCard.propTypes = {\r\n  vertical: PropTypes.bool,\r\n  Symbol: PropTypes.string.isRequired,\r\n  price: PropTypes.number.isRequired,\r\n  change: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction CompanyCardLine(props) {\r\n  const ref = useRef(null);\r\n\r\n  const scroll = (scrollOffset) => {\r\n    ref.current.scrollLeft += scrollOffset;\r\n  };\r\n  const classes = userStyles();\r\n\r\n  return (\r\n    <div className={classes.companyLineScroll}>\r\n      <div className={classes.companyLine} ref={ref}>\r\n        {props.data.map((e) => (\r\n          <CompanyCard\r\n            vertical={true}\r\n            Symbol={e.Symbol}\r\n            price={e.price}\r\n            change={e.changePrice}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className={classes.arrowButtons}>\r\n        <IconButton size=\"small\" onClick={() => scroll(500)}>\r\n          <KeyboardArrowLeftIcon fontSize=\"small\" />\r\n        </IconButton>\r\n        <IconButton size=\"small\" onClick={() => scroll(-500)}>\r\n          <KeyboardArrowRightIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nCompanyCardLine.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n};\r\n\r\nexport { CompanyCard, CompanyCardLine };\r\n","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\util\\hooks.js",["196","197"],"import { gql, useMutation } from \"@apollo/client\";\r\nimport { useState } from \"react\";\r\nconst s3SignMutation = gql`\r\n  mutation($filename: String!, $filetype: String!) {\r\n    signS3(filename: $filename, filetype: $filetype) {\r\n      url\r\n      signedRequest\r\n    }\r\n  }\r\n`;\r\nexport const useForm = (callback, initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const onChange = (event) => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    callback();\r\n  };\r\n\r\n  return {\r\n    onChange,\r\n    onSubmit,\r\n    values,\r\n  };\r\n};\r\n\r\n// export const useS3Url = (callback, initialState = {}) => {\r\n//   const [values, setValues] = useState(initialState);\r\n\r\n//   const onRequest = (event) => {\r\n//     const response = useMutation(s3SignMutation, {\r\n//       variables: values,\r\n      \r\n//     });\r\n//   };\r\n// };\r\n","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\components\\Content\\ContentCards.js",["198","199","200","201","202","203","204"],"import React, { useEffect, useState } from \"react\";\r\nimport PropTypes, { func } from \"prop-types\";\r\nimport {\r\n  Avatar,\r\n  ButtonBase,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  Container,\r\n  Card,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginLeft: 0,\r\n    paddingTop: theme.spacing(1),\r\n    paddingLeft: theme.spacing(2),\r\n    \"& hr\": {\r\n      margin: theme.spacing(1),\r\n      alignSelf: \"stretch\",\r\n    },\r\n    alignItems: \"center\",\r\n  },\r\n  title: {\r\n    textDecoration: \"none\",\r\n    \"&:visited\": {\r\n      color: theme.palette.common.black,\r\n    },\r\n    padding: theme.spacing(1),\r\n  },\r\n  cardLayout: {\r\n    marginTop: theme.spacing(2),\r\n    \"& .MuiTypography-h5\": {\r\n      paddingLeft: theme.spacing(2),\r\n      color: theme.palette.grey[700],\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: theme.typography.fontSize,\r\n      marginTop: theme.spacing(4),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction ContentCard(props) {\r\n  const [state, setState] = useState({\r\n    withAuther: false,\r\n    crudOtion: false,\r\n  });\r\n  useEffect(() => {\r\n    if (props.withAuther)\r\n      setState({\r\n        withAuther: props.withAuther,\r\n      });\r\n    if (props.crudOtion)\r\n      setState({\r\n        crudOtion: props.crudOtion,\r\n      });\r\n  }, []);\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        {/* <Grid item>\r\n          {state.withAuther ? (\r\n            <Avatar alt={props.name} src={props.img} />\r\n          ) : (\r\n            <Container />\r\n          )}\r\n        </Grid> */}\r\n\r\n        {/* // Content info  */}\r\n        <Grid item sm>\r\n          <Grid item container direction=\"column\">\r\n            <Grid item>\r\n              <Typography\r\n                // component={RouterLink}\r\n                // to={props.link == null ? null : props.link}\r\n                variant=\"h6\"\r\n                className={classes.title}\r\n              >\r\n                {props.title}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\">{props.bio}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {/* // Crud Buttons */}\r\n        {state.crudOtion ? (\r\n          <Grid container item>\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              Edit\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"secondary\">\r\n              Delete\r\n            </Button>\r\n          </Grid>\r\n        ) : null}\r\n      </Grid>\r\n      <Divider variant=\"fullWidth\" />\r\n    </div>\r\n  );\r\n}\r\nContentCard.defaultProps = {\r\n  withAuther: false,\r\n  crudOtion: false,\r\n  link: null,\r\n};\r\nContentCard.propTypes = {\r\n  withAuther: PropTypes.bool,\r\n  crudOtion: PropTypes.bool,\r\n  name: PropTypes.string,\r\n  img: PropTypes.string,\r\n  bio: PropTypes.string,\r\n  title: PropTypes.string,\r\n  link: PropTypes.string,\r\n};\r\nfunction ContentCardPaper(props) {\r\n  const classes = useStyles();\r\n\r\n  const ContentCardsItems = () =>\r\n    props.data.slice(0, props.limit).map((e) => {\r\n      return (\r\n        <ContentCard\r\n          title={e.title}\r\n          name={e.name}\r\n          img={e.img}\r\n          bio={e.bio}\r\n          withAuther={props.auther}\r\n        />\r\n      );\r\n    });\r\n  return (\r\n    <div className={classes.cardLayout}>\r\n      <Typography variant=\"h5\">{props.title}</Typography>\r\n      {ContentCardsItems()}\r\n    </div>\r\n  );\r\n}\r\nContentCardPaper.defaultProps = {\r\n  auther: false,\r\n};\r\nContentCardPaper.propTypes = {\r\n  limit: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  auther: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport { ContentCard, ContentCardPaper };\r\n","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Content\\commentGql.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Content\\draftsGql.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Content\\articleGql.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Auth\\authGql.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\components\\UserInfo.js",["205","206","207","208"],"import React, { useState } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Grid,\r\n  Chip,\r\n  Divider,\r\n  Typography,\r\n  Button,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport {makeStyles } from \"@material-ui/core/styles\";\r\nconst img = \"avatars/7.jpg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginLeft: 0,\r\n  },\r\n\r\n  avatar: {\r\n    width: theme.spacing(8),\r\n    height: theme.spacing(8),\r\n    marginTop: theme.spacing(0.75),\r\n\r\n    [theme.breakpoints.between('sm', 'md')]: {\r\n      width: theme.spacing(7),\r\n      height: theme.spacing(7),\r\n      marginTop: theme.spacing(1.25),\r\n    },\r\n    [theme.breakpoints.between('md', 'xl')]: {\r\n      width: theme.spacing(11),\r\n      height: theme.spacing(11),\r\n      marginTop: theme.spacing(2.75),\r\n    },\r\n  },\r\n\r\n  avatar2: {\r\n    // width: theme.spacing(4),\r\n    // height: theme.spacing(4),\r\n\r\n    [theme.breakpoints.between('sm', 'xl')]: {\r\n      // width: theme.spacing(5.75),\r\n      // height: theme.spacing(5.75),\r\n    },\r\n  },\r\n\r\n  typography: {\r\n    fontSize: \"20px\",\r\n    marginBottom: theme.spacing(1),\r\n\r\n    [theme.breakpoints.between('sm', 'md')]: {\r\n      // fontSize: \"15.5px\",\r\n    },\r\n    [theme.breakpoints.between('md', 'xl')]: {\r\n      marginBottom: theme.spacing(2),\r\n      fontSize: \"22px\",\r\n      fontStyle: \"normal\",\r\n      lineHeight: \"32px\",\r\n    },\r\n  },\r\n\r\n  chip: {\r\n    fontSize: \"14px\",\r\n    height: theme.spacing(3),\r\n    marginBottom: theme.spacing(1),\r\n\r\n    [theme.breakpoints.between('md', 'xl')]: {\r\n      fontSize: \"10px\",\r\n      height: theme.spacing(3),\r\n      marginBottom: theme.spacing(0.75),\r\n      marginTop: theme.spacing(0.75),\r\n    },\r\n    [theme.breakpoints.between('md', 'xl')]: {\r\n      height: theme.spacing(3),\r\n      fontSize: \"13px\",\r\n      marginBottom: theme.spacing(1),\r\n      marginTop: theme.spacing(0.75)\r\n    },\r\n  },\r\n\r\n  followBt: {\r\n    \r\n    width:theme.spacing(11),\r\n    \r\n  },\r\n\r\n  FollowBtn2: {\r\n\r\n    [theme.breakpoints.between('xs', 'sm')]: {\r\n      width: theme.spacing(1),\r\n      marginLeft: theme.spacing(-4),\r\n    },\r\n    [theme.breakpoints.between('sm', 'md')]: {\r\n      width: theme.spacing(9),\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n  },\r\n\r\n  typogrFollowerFollwing: {\r\n\r\n    [theme.breakpoints.between('xs', 'sm')]: {\r\n      // fontSize: '1px'\r\n    },\r\n  },\r\n\r\n}));\r\n\r\n {/* // UserInfo\"theSmallCard\"  */}\r\nexport function UserInfo(props) {\r\n  const state = useState();\r\n  const classes = useStyles();\r\n  return (\r\n\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justify=\"flex-start\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Grid item xs>\r\n        <Avatar className={classes.avatar} alt={props.name} src={props.img} />\r\n      </Grid>\r\n\r\n      <Grid item xs >\r\n        <Typography className={classes.typography} variant=\"h6\" >\r\n          {props.name}\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid item xs >\r\n        <Chip className={classes.chip} label={props.bio} color=\"primary\" variant=\"outlined\" />\r\n      </Grid>\r\n\r\n      {/* //User Follow Button */}\r\n      <Grid item xs >\r\n        <Button size='small' className={classes.followBt} variant=\"contained\" color=\"primary\" >\r\n          Follow\r\n            </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nUserInfo.propTypes = {};\r\n\r\n\r\n {/* // FollowerFollowingForm  */}\r\nexport function FollowerFollowingForm(props) {\r\n  const classes = useStyles();\r\n  return (\r\n\r\n    <Grid\r\n      spacing={3}\r\n      container\r\n      direction=\"row\"\r\n      justify='flex-start'\r\n      alignItems='center'\r\n    >\r\n      {/* // User Avatar  */}\r\n      <Grid item  >\r\n        <Avatar className={classes.avatar2} alt={props.name} src={props.avatar} />\r\n      </Grid>\r\n\r\n      {/* // User info  */}\r\n      <Grid item xs='8' container alignItems='flex-start' justify='flex-start' direction=\"column\" spacing={0}>\r\n        <Typography className={classes.typogrFollowerFollwing} variant=\"subtitle1\">\r\n          {props.name}\r\n        </Typography>\r\n        <Typography className={classes.typogrFollowerFollwing} variant=\"subtitle2\">\r\n          {props.bio}\r\n        </Typography>\r\n\r\n        <Container>\r\n          <Divider variant=\"middle\" />\r\n        </Container>\r\n      </Grid>\r\n\r\n      {/* //User Follow Button */}\r\n      <Grid item  >\r\n        <Button\r\n          className={classes.FollowBtn2}\r\n          variant=\"outlined\"\r\n          color=\"black\"\r\n        >\r\n          Follow\r\n              </Button>\r\n      </Grid>\r\n    </Grid>\r\n    \r\n  );\r\n}\r\n\r\n\r\n","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\views\\EndUserProfile.js",["209","210"],"import React, { useState } from \"react\";\r\nimport { UserInfo, FollowerFollowingForm } from \"../components/UserInfo\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport { HomeCard } from \"./Home\";\r\nimport {\r\n  List,\r\n  ListItemText,\r\n  Grid,\r\n  Tabs,\r\n  Divider,\r\n  Typography,\r\n  IconButton,\r\n  Container,\r\n  Tab,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\n\r\nconst img = \"avatars/7.jpg\";\r\nconst userInfo = {\r\n  name: \"Jhon Doe\",\r\n  img: img,\r\n  bio: \"Analyst\",\r\n};\r\n\r\nconst contentdummyData1 = [\r\n  {\r\n    name: \"jhon Doe\",\r\n    img: \"Jh\",\r\n    title: \"This a test dummy title\",\r\n    bio: \"18 comments\",\r\n  },\r\n  {\r\n    name: \"Ziad Fnan\",\r\n    img: \"Zi\",\r\n    title: \"Don't Miss This intersting analyst\",\r\n    bio: \"18 comments\",\r\n  },\r\n  {\r\n    name: \"Abo Motlaq\",\r\n    img: \"AH\",\r\n    title: \"I only love apple products\",\r\n    bio: \"18 comments\",\r\n  },\r\n  {\r\n    name: \"Aziz Amir\",\r\n    img: \"AA\",\r\n    title: \"Play it cool with your stocks\",\r\n    bio: \"18 comments\",\r\n  },\r\n  {\r\n    name: \"Saleh Mogren\",\r\n    img: \"SM\",\r\n    title: \"How to write dummy data like a pro\",\r\n    bio: \"18 comments\",\r\n  },\r\n];\r\n\r\nconst contentdummyData2 = [\r\n  {\r\n    name: \"jhon Doe\",\r\n    img: \"Jh\",\r\n    title: \"This a test dummy title\",\r\n    bio:\r\n      \"Contributor long only, Growth, registered investment advisor, investment advisor\",\r\n  },\r\n  {\r\n    name: \"Ziad Fnan\",\r\n    img: \"Zi\",\r\n    title: \"Don't Miss This intersting analyst\",\r\n    bio:\r\n      \"Contributor long only, Growth, registered investment advisor, investment advisor\",\r\n  },\r\n  {\r\n    name: \"Abo Motlaq\",\r\n    img: \"AH\",\r\n    title: \"I only love apple products\",\r\n    bio:\r\n      \"Contributor long only, Growth, registered investment advisor, investment advisor\",\r\n  },\r\n  {\r\n    name: \"Aziz Amir\",\r\n    img: \"AA\",\r\n    title: \"Play it cool with your stocks\",\r\n    bio:\r\n      \"Contributor long only, Growth, registered investment advisor, investment advisor\",\r\n  },\r\n  {\r\n    name: \"Saleh Mogren\",\r\n    img: \"SM\",\r\n    title: \"How to write dummy data like a pro\",\r\n    bio:\r\n      \"Contributor long only, Growth, registered investment advisor, investment advisor\",\r\n  },\r\n];\r\n\r\nconst FollowersDocs = [\r\n  {\r\n    name: \"Alex\",\r\n    avatar: img,\r\n    bio:\r\n      \"Contributor long only, Growth, registered investment advisor, investment advisor\",\r\n  },\r\n  {\r\n    name: \"Ziad\",\r\n    avatar: img,\r\n    bio:\r\n      \"Contributor long only, Growth, registered investment advisor, investment advisor\",\r\n  },\r\n  {\r\n    name: \"Mohammed\",\r\n    avatar: img,\r\n    bio:\r\n      \"Contributor long only, Growth, registered investment advisor, investment advisor\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(4),\r\n    background: theme.palette.grey[400],\r\n  },\r\n\r\n  paper1: {\r\n     width: theme.spacing(21),\r\n    // height: theme.spacing(14),\r\n    padding: theme.spacing(1),\r\n\r\n    [theme.breakpoints.between(\"sm\", \"md\")]: {\r\n      width: theme.spacing(13.5),\r\n      height: theme.spacing(21.5),\r\n      padding: theme.spacing(0.5),\r\n    },\r\n    [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n      width: theme.spacing(17),\r\n      height: theme.spacing(29),\r\n      padding: theme.spacing(1.5),\r\n    },\r\n  },\r\n\r\n  paper2: {\r\n    // width: \"100%\",\r\n    padding: theme.spacing(3),\r\n\r\n    [theme.breakpoints.between(\"sm\", \"md\")]: {\r\n      width: theme.spacing(72),\r\n    },\r\n    [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n      padding: theme.spacing(1),\r\n      width: theme.spacing(105),\r\n    },\r\n  },\r\n\r\n  typogrAboutMe: {\r\n    // width: \"auto\",\r\n    // height: \"auto\",\r\n    marginTop: theme.spacing(0.8),\r\n    // fontSize: \"14px\",\r\n    // fontStyle: \"normal\",\r\n    // fontWeight: \"400\",\r\n    // marginLeft: theme.spacing(2),\r\n    textAlign: \"left\",\r\n\r\n    [theme.breakpoints.between(\"sm\", \"md\")]: {\r\n      fontSize: \"25px\",\r\n      marginTop: theme.spacing(1.25),\r\n    },\r\n\r\n    [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n      marginTop: theme.spacing(2.75),\r\n      marginBottom: theme.spacing(0.5),\r\n      fontSize: \"34px\",\r\n    },\r\n  },\r\n\r\n  typogrText: {\r\n    // marginLeft: theme.spacing(2),\r\n    marginBottom: theme.spacing(0.75),\r\n    marginTop: theme.spacing(1),\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n    // fontSize: \"12px\",\r\n    // fontStyle: \"normal\",\r\n    // fontWeight: \"400\",\r\n    textAlign: \"left\",\r\n\r\n    [theme.breakpoints.between(\"sm\", \"md\")]: {\r\n      fontSize: \"18.5px\",\r\n      width: \"auto\",\r\n    },\r\n\r\n    [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n      width: \"auto\",\r\n      marginBottom: theme.spacing(2),\r\n      marginTop: theme.spacing(1),\r\n      fontSize: \"24px\",\r\n    },\r\n  },\r\n\r\n  iconstyle: {\r\n    [theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n    fontSize: \"xx-large\",\r\n    },\r\n\r\n    [theme.breakpoints.between(\"sm\", \"md\")]: {\r\n      fontSize: \"medium\",\r\n    },\r\n  },\r\n\r\n  typogrLabel: {\r\n    \r\n\r\n    [theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n      //  fontSize: theme.typography.fontSize*0.3,\r\n\r\n    },\r\n  },\r\n}));\r\n\r\nconst EndUserProfile = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"flex-start\"\r\n        spacing={1}\r\n      >\r\n        <Grid item >\r\n          <Paper className={classes.paper1} elevation={2}>\r\n            <UserInfo\r\n              img={userInfo.img}\r\n              name={userInfo.name}\r\n              bio={userInfo.bio}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs sm md lg={8}>\r\n          <Paper className={classes.paper2} elevation={2}>\r\n            <UserProfileDetails />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nEndUserProfile.propTypes = {};\r\n\r\nexport default EndUserProfile;\r\n\r\n{\r\n  /* // UserProfileDetails(Bio+Icons+Tabs)  */\r\n}\r\nexport function UserProfileDetails(props) {\r\n  const state = useState();\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const Followers = (FollowersDocs) =>\r\n    FollowersDocs.map((v) => (\r\n      <FollowerFollowingForm name={v.name} bio={v.bio} avatar={v.avatar} />\r\n    ));\r\n\r\n  const Following = (FollowersDocs) =>\r\n    FollowersDocs.map((v) => (\r\n      <FollowerFollowingForm name={v.name} bio={v.bio} avatar={v.avatar} />\r\n    ));\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justify=\"flex-start\"\r\n      alignItems=\"flex-start\"\r\n    >\r\n      {/* // UserBio  */}\r\n      <Grid item  >\r\n        <Typography className={classes.typogrAboutMe} variant=\"body1\">\r\n          ABOUT ME\r\n        </Typography>\r\n        <Typography\r\n          className={classes.typogrText}\r\n          style={{ color: \"#4d4d4d\" }}\r\n          variant=\"subtitle1\"\r\n        >\r\n          Contributor Since: 2021\r\n        </Typography>\r\n\r\n        <Typography className={classes.typogrText} variant=\"body1\">\r\n          Contributor long only, Growth, registered investment\r\n          advisor,investment advisor\r\n        </Typography>\r\n      </Grid>\r\n\r\n      {/* // UserSocialMediaAccounts  */}\r\n      <Grid item xs container direction=\"row\" justify=\"flex-end\">\r\n        <IconButton size=\"small\">\r\n          {\" \"}\r\n          <TwitterIcon\r\n            className={classes.iconstyle}\r\n            style={{ color: \"grey\" }}\r\n          />\r\n        </IconButton>\r\n        <IconButton size=\"small\">\r\n          {\" \"}\r\n          <FacebookIcon\r\n            className={classes.iconstyle}\r\n            style={{ color: \"grey\" }}\r\n          />\r\n        </IconButton>\r\n        <IconButton size=\"small\">\r\n          {\" \"}\r\n          <LinkedInIcon\r\n            className={classes.iconstyle}\r\n            style={{ color: \"grey\" }}\r\n          />\r\n        </IconButton>\r\n      </Grid>\r\n\r\n      {/* // UserProfileTabs  */}\r\n      <Grid item xs >\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"inherit\"\r\n          \r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n        >\r\n          <Tab\r\n            label={\r\n              <List>\r\n                <ListItemText\r\n                  primary={\r\n                    <Typography className={classes.typogrLabel}>\r\n                      Comments\r\n                    </Typography>\r\n                  }\r\n                  secondary={\r\n                    <Typography className={classes.typogrLabel}>500</Typography>\r\n                  }\r\n                />\r\n              </List>\r\n            }\r\n          />\r\n\r\n          <Tab\r\n            label={\r\n              <List>\r\n                <ListItemText\r\n                  primary={\r\n                    <Typography className={classes.typogrLabel}>\r\n                      Followers\r\n                    </Typography>\r\n                  }\r\n                  secondary={\r\n                    <Typography className={classes.typogrLabel}>500</Typography>\r\n                  }\r\n                />\r\n              </List>\r\n            }\r\n          />\r\n\r\n          <Tab\r\n            label={\r\n              <List>\r\n                <ListItemText\r\n                  primary={\r\n                    <Typography className={classes.typogrLabel}>\r\n                      Following\r\n                    </Typography>\r\n                  }\r\n                  secondary={\r\n                    <Typography className={classes.typogrLabel}>500</Typography>\r\n                  }\r\n                />\r\n              </List>\r\n            }\r\n          />\r\n\r\n          <Tab\r\n            label={\r\n              <List>\r\n                <ListItemText\r\n                  primary={\r\n                    <Typography className={classes.typogrLabel}>\r\n                      Articles\r\n                    </Typography>\r\n                  }\r\n                  secondary={\r\n                    <Typography className={classes.typogrLabel}>500</Typography>\r\n                  }\r\n                />\r\n              </List>\r\n            }\r\n          />\r\n\r\n          <Tab\r\n            label={\r\n              <List>\r\n                <ListItemText\r\n                  primary={\r\n                    <Typography className={classes.typogrLabel}>\r\n                      Author’s Picks\r\n                    </Typography>\r\n                  }\r\n                  secondary={\r\n                    <Typography className={classes.typogrLabel}>500</Typography>\r\n                  }\r\n                />\r\n              </List>\r\n            }\r\n          />\r\n        </Tabs>\r\n        <Container>\r\n          <Divider variant=\"middle\" />\r\n        </Container>\r\n\r\n        {value === 0 && (\r\n          <Container>\r\n            {<HomeCard dataLimit={4} data={contentdummyData2} btnText=\"More\" />}\r\n          </Container>\r\n        )}\r\n        {value === 1 && <Container>{Followers(FollowersDocs)}</Container>}\r\n        {value === 2 && <Container>{Following(FollowersDocs)}</Container>}\r\n        {value === 3 && (\r\n          <Container>\r\n            {<HomeCard dataLimit={4} data={contentdummyData1} btnText=\"More\" />}\r\n          </Container>\r\n        )}\r\n        {value === 4 && (\r\n          <Container>\r\n            {<HomeCard dataLimit={4} data={contentdummyData1} btnText=\"More\" />}\r\n          </Container>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\views\\profileSetting\\ProfileSetting.js",["211"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {\r\n    Divider,\r\n    Button,\r\n    Paper,\r\n    Grid,\r\n    Avatar,\r\n    TextField,\r\n\r\n} from '@material-ui/core';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PictureInPictureIcon from '@material-ui/icons/PictureInPicture';\r\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nconst img = \"avatars/7.jpg\";\r\nconst userInfo = {\r\n    name: \"Jhon Doe\",\r\n    img: img,\r\n    bio: \"Analyst\",\r\n};\r\nconst drawerWidth = 210;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n\r\n    drawer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n\r\n    appBar: {\r\n        marginTop: theme.spacing(7),\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            marginTop: theme.spacing(8.5),\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            marginLeft: drawerWidth,\r\n        },\r\n    },\r\n\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    // necessary for content to be below app bar\r\n    //   toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n        marginTop: theme.spacing(7),\r\n\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            marginTop: theme.spacing(8.5),\r\n        },\r\n    },\r\n\r\n    content: {\r\n        flexGrow: 1,\r\n        // padding: theme.spacing(3),\r\n        paddingTop: theme.spacing(7),\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            paddingTop: theme.spacing(8),\r\n        },\r\n    },\r\n\r\n    helpButton: {\r\n        marginLeft: drawerWidth / 6,\r\n        width: theme.spacing(14),\r\n        marginTop: theme.spacing(3.5),\r\n\r\n    },\r\n\r\n    profilePaper: {\r\n        width: '100%',\r\n        padding: theme.spacing(5),\r\n        paddingTop: theme.spacing(7)\r\n\r\n    },\r\n\r\n    avatar: {\r\n        width: theme.spacing(12),\r\n        height: theme.spacing(12),\r\n    },\r\n\r\n    NameTypog: {\r\n        fontWeight: \"bold\",\r\n        fontSize: \"20px\"\r\n    },\r\n\r\n    inputValue: {\r\n        fontSize: \"20px\",\r\n        color: \"grey\"\r\n    },\r\n\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '35ch',\r\n    },\r\n\r\n    textFieldBio: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '35ch',\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            width: '74ch',\r\n        },\r\n    },\r\n\r\n    ReqEditBtn: {\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            marginTop: theme.spacing(5),\r\n        },\r\n    }\r\n\r\n}));\r\n\r\nfunction ProfileSetting(props) {\r\n    const { window } = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n\r\n    const itemsList = [\r\n        {\r\n            text: \"Profile\",\r\n            icon: <PictureInPictureIcon />,\r\n            onClick: () => history.push(\"/ProfileSetting\")\r\n        },\r\n        {\r\n            text: \"Account Securty\",\r\n            icon: <VerifiedUserIcon />,\r\n            onClick: () => history.push(\"/AccountSecurty\")\r\n        },\r\n\r\n    ];\r\n\r\n    const { history } = props;\r\n    const drawer = (\r\n        <div>\r\n            <div className={classes.toolbar} />\r\n            <Divider />\r\n            <List>\r\n                {itemsList.map((item, index) => {\r\n\r\n                    const { text, icon, onClick } = item;\r\n                    return (\r\n                        <ListItem button key={text} onClick={onClick}>\r\n                            {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n\r\n                    )\r\n                })}\r\n            </List>\r\n            <List>\r\n                <ListItem>\r\n                    <Button className={classes.helpButton} variant=\"outlined\">Help</Button></ListItem></List>\r\n        </div>\r\n    );\r\n\r\n    const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"absolute\" color=\"white\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        edge=\"start\"\r\n                        onClick={handleDrawerToggle}\r\n                        className={classes.menuButton}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h5\" noWrap>\r\n                        Profile\r\n          </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Drawer\r\n                        container={container}\r\n                        variant=\"temporary\"\r\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                        open={mobileOpen}\r\n                        onClose={handleDrawerToggle}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true, // Better open performance on mobile.\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        variant=\"permanent\"\r\n                        open\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n            <main className={classes.content}>\r\n                <div />\r\n                <Paper className={classes.profilePaper} elevation={0}>\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify='center'\r\n                        alignItems=\"flex-start\"\r\n                        spacing={6}\r\n                    >\r\n\r\n                        <Grid item>\r\n                            <Avatar className={classes.avatar} alt={props.name} src={\"\"} />\r\n                        </Grid>\r\n\r\n                        <Grid item xs\r\n                            container\r\n                            direction=\"column\"\r\n                            justify='flex-start'\r\n                            alignItems=\"flex-start\"\r\n                            spacing={3}\r\n                        >\r\n\r\n                            <Grid item\r\n                                container\r\n                                direction=\"row\"\r\n                                justify='flex-start'\r\n                                alignItems=\"center\"\r\n                                spacing={3}>\r\n\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        label=\"First name\"\r\n                                        id=\"margin-none\"\r\n                                        // defaultValue=\"\"\r\n                                        className={classes.textField}\r\n                                    />\r\n                                </Grid>\r\n\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        label=\"Last name\"\r\n                                        id=\"margin-normal\"\r\n                                        // defaultValue=\"\"\r\n                                        className={classes.textField}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid item>\r\n                                <TextField\r\n                                    label=\"Username\"\r\n                                    id=\"margin-normal\"\r\n                                    // defaultValue=\"\"\r\n                                    className={classes.textField}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item>\r\n                                <TextField\r\n                                    className={classes.textFieldBio}\r\n                                    id=\"standard-multiline-flexible\"\r\n                                    label=\"Bio\"\r\n                                    multiline\r\n                                    rowsMax={4}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item\r\n                                container\r\n                                direction=\"row\"\r\n                                justify='flex-start'\r\n                                alignItems=\"center\"\r\n                                spacing={3}>\r\n\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        label=\"Compony\"\r\n                                        id=\"margin-none\"\r\n                                        // defaultValue=\"\"\r\n                                        className={classes.textField}\r\n                                    />\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        label=\"Linkedin\"\r\n                                        id=\"margin-normal\"\r\n                                        // defaultValue=\"\"\r\n                                        className={classes.textField}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid item\r\n                                container\r\n                                direction=\"row\"\r\n                                justify='flex-start'\r\n                                alignItems='flex-end'\r\n                                spacing={1}>\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={classes.ReqEditBtn}>\r\n                                        Request To Be Analyst\r\n                                </Button>\r\n                                </Grid>\r\n\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={classes.ReqEditBtn}>\r\n                                        Edit\r\n                                </Button>\r\n                                </Grid>\r\n\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nProfileSetting.propTypes = {\r\n\r\n    window: PropTypes.func,\r\n};\r\nexport default ProfileSetting","C:\\Users\\ziads\\Desktop\\alphaplus\\Client\\alpha-p-web\\src\\views\\profileSetting\\AccountSecurty.js",["212","213"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {\r\n    Divider,\r\n    Button,\r\n    Paper,\r\n    Grid,\r\n    Avatar,\r\n    TextField,\r\n    Input,\r\n    InputLabel,\r\n    FormControl,\r\n    Container\r\n\r\n} from '@material-ui/core';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PictureInPictureIcon from '@material-ui/icons/PictureInPicture';\r\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst img = \"avatars/7.jpg\";\r\nconst userInfo = {\r\n    name: \"Jhon Doe\",\r\n    img: img,\r\n    bio: \"Analyst\",\r\n};\r\n\r\nconst drawerWidth = 210;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    appBar: {\r\n        marginTop: theme.spacing(7),\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            marginTop: theme.spacing(8.5),\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            marginLeft: drawerWidth,\r\n        },\r\n    },\r\n\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    // necessary for content to be below app bar\r\n    //   toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n        marginTop: theme.spacing(7),\r\n\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            marginTop: theme.spacing(8.5),\r\n        },\r\n    },\r\n\r\n    content: {\r\n        flexGrow: 1,\r\n        // padding: theme.spacing(3),\r\n        paddingTop: theme.spacing(7),\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            paddingTop: theme.spacing(8),\r\n        },\r\n    },\r\n\r\n    helpButton: {\r\n        marginLeft: drawerWidth / 6,\r\n        width: theme.spacing(14),\r\n        marginTop: theme.spacing(3.5),\r\n\r\n    },\r\n    profilePaper: {\r\n        width: '100%',\r\n        padding: theme.spacing(5),\r\n        paddingTop: theme.spacing(7),\r\n\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            paddingTop: theme.spacing(13),\r\n\r\n        },\r\n    },\r\n\r\n    avatar: {\r\n        width: theme.spacing(12),\r\n        height: theme.spacing(12),\r\n    },\r\n\r\n    NameTypog: {\r\n        fontWeight: \"bold\",\r\n        fontSize: \"20px\"\r\n    },\r\n\r\n    inputValue: {\r\n        fontSize: \"20px\",\r\n        color: \"grey\"\r\n    },\r\n\r\n    textField: {\r\n        marginRight: theme.spacing(1),\r\n        width: '35ch',\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            marginLeft: theme.spacing(15),\r\n        },\r\n    },\r\n\r\n    textFieldBio: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '35ch',\r\n\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            width: '74ch',\r\n        },\r\n    },\r\n\r\n    ReqEditBtn: {\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            marginTop: theme.spacing(5),\r\n        },\r\n    },\r\n\r\n    ChaRestBtn: {\r\n        width: theme.spacing(12),\r\n        marginLeft: theme.spacing(7),\r\n    },\r\n\r\n    PopUpPaperReset: {\r\n        [theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n            width: '100%',\r\n        },\r\n\r\n        width: '432px',\r\n        height: '471px',\r\n        padding: theme.spacing(3),\r\n        [theme.breakpoints.between(\"sm\", \"md\")]: {\r\n            marginLeft: theme.spacing(30),\r\n            width: '432px',\r\n        },\r\n    },\r\n\r\n    PopUpPaperChan: {\r\n        [theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n            width: '100%',\r\n        },\r\n\r\n        width: '432px',\r\n        height: '301px',\r\n        padding: theme.spacing(3),\r\n\r\n        [theme.breakpoints.between(\"sm\", \"md\")]: {\r\n            marginLeft: theme.spacing(30),\r\n            width: '432px',\r\n        },\r\n    },\r\n\r\n    CancelBtn: {\r\n        fontSize: '20px',\r\n        fontWeight: '700',\r\n        [theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n            fontSize: '14px',\r\n        },\r\n    },\r\n\r\n    ChPasswordBtn: {\r\n        fontSize: '24px',\r\n        color: 'grey',\r\n        [theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n            fontSize: '16px',\r\n        },\r\n    },\r\n\r\n    ChPasstextField: {\r\n        [theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n            width: '300px'\r\n        },\r\n\r\n        marginTop: theme.spacing(5),\r\n        width: '366px'\r\n    },\r\n\r\n    DoneBtn: {\r\n        width: '320px',\r\n        marginTop: theme.spacing(2.5),\r\n        marginBottom: theme.spacing(2.5),\r\n    },\r\n\r\n    ForgetTypog: {\r\n        color: \"grey\",\r\n        fontWeight: '500',\r\n        fontSize: '14px'\r\n    },\r\n\r\n    ResetHereBtn: {\r\n        color: \"blue\",\r\n        fontWeight: '500',\r\n        fontSize: '14px'\r\n    },\r\n\r\n    PopperPassword: {\r\n        [theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n            width: '100%',\r\n            marginLeft: \"-6px\"\r\n        },\r\n    },\r\n\r\n    textFieldChEmail: {\r\n        width: '42ch',\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            width: '48ch',\r\n        }\r\n    },\r\n\r\n    ChEmailBtn: {\r\n        width: '320px',\r\n        marginTop: theme.spacing(3.5),\r\n        // marginBottom: theme.spacing(2.5),\r\n    }\r\n}));\r\n\r\nfunction AccountSecurty(props) {\r\n    const { window } = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n    const [values, setValues] = React.useState({\r\n        NewPassword: '',\r\n        CurrentPassword: '',\r\n        VerifyPassword: '',\r\n        password: '',\r\n        showPassword: false,\r\n    });\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n    const itemsList = [\r\n        {\r\n            text: \"Profile\",\r\n            icon: <PictureInPictureIcon />,\r\n            onClick: () => history.push(\"/ProfileSetting\")\r\n        },\r\n        {\r\n            text: \"Account Securty\",\r\n            icon: <VerifiedUserIcon />,\r\n            onClick: () => history.push(\"/AccountSecurty\")\r\n        },\r\n    ];\r\n    const { history } = props;\r\n    const drawer = (\r\n        <div>\r\n            <div className={classes.toolbar} />\r\n            <Divider />\r\n            <List>\r\n                {itemsList.map((item, index) => {\r\n\r\n                    const { text, icon, onClick } = item;\r\n                    return (\r\n                        <ListItem button key={text} onClick={onClick}>\r\n                            {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    )\r\n                })}\r\n            </List>\r\n\r\n            <List>\r\n                <ListItem>\r\n                    <Button className={classes.helpButton} variant=\"outlined\">Help</Button></ListItem></List>\r\n        </div>\r\n    );\r\n\r\n    const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n    const [anchorElReset, setAnchorElReset] = React.useState(null);\r\n    const handleClickReset = (event) => {\r\n        setAnchorElReset(anchorElReset ? null : event.currentTarget);\r\n    };\r\n    const openReset = Boolean(anchorElReset);\r\n    const idReset = openReset ? 'Reset-popper' : undefined;\r\n\r\n    const [anchorElChange, setAnchorElChange] = React.useState(null);\r\n    const handleClickChange = (event) => {\r\n        setAnchorElChange(anchorElChange ? null : event.currentTarget);\r\n    };\r\n    const openChange = Boolean(anchorElChange);\r\n    const idChange = openChange ? 'Change-popper' : undefined;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"absolute\" color=\"white\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        edge=\"start\"\r\n                        onClick={handleDrawerToggle}\r\n                        className={classes.menuButton}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h5\" noWrap>\r\n                        Account Securty\r\n          </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Drawer\r\n                        container={container}\r\n                        variant=\"temporary\"\r\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                        open={mobileOpen}\r\n                        onClose={handleDrawerToggle}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true, // Better open performance on mobile.\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        variant=\"permanent\"\r\n                        open\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n            <main className={classes.content}>\r\n                <div />\r\n                <Paper className={classes.profilePaper} elevation={0}>\r\n                    <Grid item xs\r\n                        container\r\n                        direction=\"column\"\r\n                        justify='flex-start'\r\n                        alignItems='center'\r\n                        spacing={7}\r\n                    >\r\n                        <Grid item\r\n                            container\r\n                            direction=\"row\"\r\n                            justify='flex-start'\r\n                            alignItems='flex-end'\r\n                            spacing={2}\r\n                        >\r\n\r\n                            <Grid item>\r\n                                <TextField\r\n                                    label=\"Email\"\r\n                                    id=\"margin-none\"\r\n                                    InputProps={{\r\n                                        readOnly: true,\r\n                                    }}\r\n                                    defaultValue=\"UserEmail@gmail.com\"\r\n                                    // defaultValue=\"\"\r\n                                    className={classes.textField}\r\n                                // helperText=\"Some important text\"\r\n\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n\r\n                                <Button\r\n                                    onClick={handleClickChange}\r\n                                    aria-describedby={idChange}\r\n                                    variant=\"contained\"\r\n                                    size=\"medium\"\r\n                                    color=\"primary\"\r\n                                    className={classes.ChaRestBtn} >\r\n                                    Change\r\n                                 </Button>\r\n\r\n                                <Popper\r\n                                    id={idChange}\r\n                                    open={openChange}\r\n                                    anchorEl={anchorElChange}\r\n                                    className={classes.PopperPassword}\r\n                                    placement='left'\r\n                                    modifiers={{\r\n                                        flip: {\r\n                                            enabled: false,\r\n                                        },\r\n                                        preventOverflow: {\r\n                                            enabled: true,\r\n                                        },\r\n                                    }}\r\n                                >\r\n\r\n                                    <Paper className={classes.PopUpPaperChan}>\r\n\r\n                                        <Grid item\r\n                                            container\r\n                                            direction=\"column\"\r\n                                            justify='flex-start'\r\n                                            alignItems='center'\r\n                                            spacing={6}\r\n                                        >\r\n\r\n                                            <Grid item\r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justify='flex-start'\r\n                                                alignItems='flex-start'\r\n                                                spacing={10}\r\n                                            >\r\n                                                <Grid item><Typography className={classes.ChPasswordBtn}>Change password</Typography></Grid>\r\n                                                <Grid item> <Button onClick={handleClickChange}><Typography className={classes.CancelBtn}>Cancel</Typography></Button></Grid>\r\n\r\n                                            </Grid>\r\n\r\n                                            <Grid item>\r\n                                                <TextField\r\n                                                    label=\"New Email\"\r\n                                                    id=\"margin-none\"\r\n                                                    // defaultValue=\"\"\r\n                                                    className={classes.textFieldChEmail}\r\n                                                />\r\n                                            </Grid>\r\n\r\n                                            <Grid item>\r\n                                                <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={classes.ChEmailBtn} >\r\n                                                    Change\r\n                                                  </Button>\r\n                                            </Grid>\r\n\r\n                                        </Grid>\r\n                                    </Paper>\r\n                                </Popper>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item\r\n                            container\r\n                            direction=\"row\"\r\n                            justify='flex-start'\r\n                            alignItems='flex-end'\r\n                            spacing={2}\r\n                        >\r\n\r\n                            <Grid item>\r\n                                <TextField\r\n                                    label=\"Password\"\r\n                                    id=\"margin-none\"\r\n                                    type=\"password\"\r\n                                    defaultValue=\"11111111\"\r\n                                    InputProps={{\r\n                                        readOnly: true,\r\n                                    }}\r\n                                    className={classes.textField}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item>\r\n                                <Button\r\n                                    aria-describedby={idReset}\r\n                                    onClick={handleClickReset}\r\n                                    variant=\"contained\"\r\n                                    size=\"medium\"\r\n                                    color=\"primary\"\r\n                                    className={classes.ChaRestBtn} >\r\n                                    Reset\r\n                                </Button>\r\n\r\n                                <Popper\r\n                                    id={idReset}\r\n                                    open={openReset}\r\n                                    anchorEl={anchorElReset}\r\n                                    className={classes.PopperPassword}\r\n                                    placement='left'\r\n                                    modifiers={{\r\n                                        flip: {\r\n                                            enabled: false,\r\n                                        },\r\n                                        preventOverflow: {\r\n                                            enabled: true,\r\n                                        },\r\n                                    }}\r\n                                >\r\n\r\n                                    <Paper className={classes.PopUpPaperReset}>\r\n\r\n                                        <Grid item\r\n                                            container\r\n                                            direction=\"column\"\r\n                                            justify='flex-start'\r\n                                            alignItems='center'\r\n                                            spacing={2}\r\n                                        >\r\n\r\n                                            <Grid item\r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justify='flex-start'\r\n                                                alignItems='flex-start'\r\n                                                spacing={10}\r\n                                            >\r\n                                                <Grid item><Typography className={classes.ChPasswordBtn}>Change password</Typography></Grid>\r\n                                                <Grid item> <Button onClick={handleClickReset}><Typography className={classes.CancelBtn}>Cancel</Typography></Button></Grid>\r\n\r\n                                            </Grid>\r\n\r\n                                            <Grid item>\r\n                                                <FormControl >\r\n                                                    <InputLabel htmlFor=\"standard-adornment-password\">Enter current password</InputLabel>\r\n                                                    <Input\r\n                                                        className={classes.ChPasstextField}\r\n                                                        id=\"standard-adornment-password\"\r\n                                                        type={values.showPassword ? 'text' : 'password'}\r\n                                                        value={values.CurrentPassword}\r\n                                                        onChange={handleChange('CurrentPassword')}\r\n                                                        endAdornment={\r\n                                                            <InputAdornment>\r\n                                                                <IconButton\r\n                                                                    aria-label=\"toggle password visibility\"\r\n                                                                    onClick={handleClickShowPassword}\r\n                                                                    onMouseDown={handleMouseDownPassword}\r\n                                                                    edge=\"end\"\r\n                                                                >\r\n                                                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                                </IconButton>\r\n                                                            </InputAdornment>\r\n                                                        }\r\n                                                    />\r\n                                                </FormControl>\r\n                                            </Grid>\r\n\r\n                                            <Grid item>\r\n\r\n                                                <FormControl >\r\n                                                    <InputLabel htmlFor=\"standard-adornment-password\">Enter new password</InputLabel>\r\n                                                    <Input\r\n                                                        className={classes.ChPasstextField}\r\n                                                        id=\"standard-adornment-password\"\r\n                                                        type={values.showPassword ? 'text' : 'password'}\r\n                                                        value={values.NewPassword}\r\n                                                        onChange={handleChange('NewPassword')}\r\n                                                        endAdornment={\r\n                                                            <InputAdornment>\r\n                                                                <IconButton\r\n                                                                    aria-label=\"toggle password visibility\"\r\n                                                                    onClick={handleClickShowPassword}\r\n                                                                    onMouseDown={handleMouseDownPassword}\r\n                                                                    edge=\"end\"\r\n                                                                >\r\n                                                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                                </IconButton>\r\n                                                            </InputAdornment>\r\n                                                        }\r\n                                                    />\r\n                                                </FormControl>\r\n                                            </Grid>\r\n\r\n                                            <Grid item>\r\n\r\n                                                <FormControl >\r\n                                                    <InputLabel htmlFor=\"standard-adornment-password\"> Verify password</InputLabel>\r\n                                                    <Input\r\n                                                        className={classes.ChPasstextField}\r\n                                                        id=\"standard-adornment-password\"\r\n                                                        type={values.showPassword ? 'text' : 'password'}\r\n                                                        value={values.VerifyPassword}\r\n                                                        onChange={handleChange('VerifyPassword')}\r\n                                                        endAdornment={\r\n                                                            <InputAdornment>\r\n                                                                <IconButton\r\n                                                                    aria-label=\"toggle password visibility\"\r\n                                                                    onClick={handleClickShowPassword}\r\n                                                                    onMouseDown={handleMouseDownPassword}\r\n                                                                    edge=\"end\"\r\n                                                                >\r\n                                                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                                </IconButton>\r\n                                                            </InputAdornment>\r\n                                                        }\r\n                                                    />\r\n                                                </FormControl>\r\n\r\n                                            </Grid>\r\n\r\n                                            <Grid item>\r\n                                                <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={classes.DoneBtn} >\r\n                                                    Done\r\n                                                  </Button>\r\n\r\n                                            </Grid>\r\n\r\n                                            <Container>  <Divider variant=\"middle\" /> </Container>\r\n\r\n                                            <Grid item\r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justify='center'\r\n                                                alignItems='center'\r\n                                                spacing={0}\r\n                                            >\r\n                                                <Grid item>    <Typography className={classes.ForgetTypog}>Forget Password?</Typography></Grid>\r\n                                                <Grid item> <Button className={classes.ResetHereBtn}>Reset here</Button></Grid>\r\n\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Paper>\r\n                                </Popper>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nAccountSecurty.propTypes = {\r\n\r\n    window: PropTypes.func,\r\n};\r\nexport default AccountSecurty",{"ruleId":"214","severity":1,"message":"215","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":13},{"ruleId":"214","severity":1,"message":"218","line":7,"column":10,"nodeType":"216","messageId":"217","endLine":7,"endColumn":18},{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","replacedBy":"222"},{"ruleId":"214","severity":1,"message":"223","line":3,"column":3,"nodeType":"216","messageId":"217","endLine":3,"endColumn":13},{"ruleId":"214","severity":1,"message":"224","line":5,"column":3,"nodeType":"216","messageId":"217","endLine":5,"endColumn":9},{"ruleId":"214","severity":1,"message":"225","line":25,"column":10,"nodeType":"216","messageId":"217","endLine":25,"endColumn":19},{"ruleId":"214","severity":1,"message":"226","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":14},{"ruleId":"214","severity":1,"message":"227","line":3,"column":8,"nodeType":"216","messageId":"217","endLine":3,"endColumn":13},{"ruleId":"214","severity":1,"message":"228","line":16,"column":8,"nodeType":"216","messageId":"217","endLine":16,"endColumn":18},{"ruleId":"214","severity":1,"message":"229","line":17,"column":8,"nodeType":"216","messageId":"217","endLine":17,"endColumn":19},{"ruleId":"214","severity":1,"message":"230","line":63,"column":19,"nodeType":"216","messageId":"217","endLine":63,"endColumn":29},{"ruleId":"214","severity":1,"message":"231","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":14},{"ruleId":"214","severity":1,"message":"232","line":11,"column":8,"nodeType":"216","messageId":"217","endLine":11,"endColumn":12},{"ruleId":"214","severity":1,"message":"233","line":12,"column":8,"nodeType":"216","messageId":"217","endLine":12,"endColumn":19},{"ruleId":"214","severity":1,"message":"234","line":13,"column":8,"nodeType":"216","messageId":"217","endLine":13,"endColumn":19},{"ruleId":"214","severity":1,"message":"235","line":16,"column":3,"nodeType":"216","messageId":"217","endLine":16,"endColumn":14},{"ruleId":"214","severity":1,"message":"236","line":200,"column":9,"nodeType":"216","messageId":"217","endLine":200,"endColumn":18},{"ruleId":"214","severity":1,"message":"237","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":26},{"ruleId":"214","severity":1,"message":"231","line":7,"column":10,"nodeType":"216","messageId":"217","endLine":7,"endColumn":14},{"ruleId":"214","severity":1,"message":"238","line":20,"column":23,"nodeType":"216","messageId":"217","endLine":20,"endColumn":35},{"ruleId":"239","severity":1,"message":"240","line":74,"column":15,"nodeType":"241","messageId":"242","endLine":74,"endColumn":17},{"ruleId":"214","severity":1,"message":"243","line":80,"column":10,"nodeType":"216","messageId":"217","endLine":80,"endColumn":15},{"ruleId":"214","severity":1,"message":"230","line":60,"column":19,"nodeType":"216","messageId":"217","endLine":60,"endColumn":29},{"ruleId":"214","severity":1,"message":"237","line":1,"column":39,"nodeType":"216","messageId":"217","endLine":1,"endColumn":48},{"ruleId":"214","severity":1,"message":"244","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":19},{"ruleId":"214","severity":1,"message":"245","line":2,"column":29,"nodeType":"216","messageId":"217","endLine":2,"endColumn":39},{"ruleId":"214","severity":1,"message":"246","line":6,"column":3,"nodeType":"216","messageId":"217","endLine":6,"endColumn":8},{"ruleId":"214","severity":1,"message":"247","line":9,"column":3,"nodeType":"216","messageId":"217","endLine":9,"endColumn":10},{"ruleId":"214","severity":1,"message":"248","line":10,"column":3,"nodeType":"216","messageId":"217","endLine":10,"endColumn":13},{"ruleId":"214","severity":1,"message":"249","line":12,"column":3,"nodeType":"216","messageId":"217","endLine":12,"endColumn":9},{"ruleId":"214","severity":1,"message":"250","line":13,"column":3,"nodeType":"216","messageId":"217","endLine":13,"endColumn":12},{"ruleId":"214","severity":1,"message":"251","line":14,"column":3,"nodeType":"216","messageId":"217","endLine":14,"endColumn":17},{"ruleId":"214","severity":1,"message":"231","line":21,"column":10,"nodeType":"216","messageId":"217","endLine":21,"endColumn":14},{"ruleId":"214","severity":1,"message":"252","line":43,"column":9,"nodeType":"216","messageId":"217","endLine":43,"endColumn":16},{"ruleId":"214","severity":1,"message":"253","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":17},{"ruleId":"214","severity":1,"message":"254","line":2,"column":21,"nodeType":"216","messageId":"217","endLine":2,"endColumn":25},{"ruleId":"214","severity":1,"message":"248","line":9,"column":3,"nodeType":"216","messageId":"217","endLine":9,"endColumn":13},{"ruleId":"214","severity":1,"message":"251","line":13,"column":3,"nodeType":"216","messageId":"217","endLine":13,"endColumn":17},{"ruleId":"214","severity":1,"message":"255","line":26,"column":21,"nodeType":"216","messageId":"217","endLine":26,"endColumn":31},{"ruleId":"214","severity":1,"message":"256","line":110,"column":7,"nodeType":"216","messageId":"217","endLine":110,"endColumn":19},{"ruleId":"214","severity":1,"message":"257","line":135,"column":50,"nodeType":"216","messageId":"217","endLine":135,"endColumn":55},{"ruleId":"239","severity":1,"message":"258","line":298,"column":28,"nodeType":"241","messageId":"242","endLine":298,"endColumn":30},{"ruleId":"214","severity":1,"message":"259","line":10,"column":28,"nodeType":"216","messageId":"217","endLine":10,"endColumn":36},{"ruleId":"214","severity":1,"message":"260","line":11,"column":10,"nodeType":"216","messageId":"217","endLine":11,"endColumn":17},{"ruleId":"214","severity":1,"message":"243","line":77,"column":10,"nodeType":"216","messageId":"217","endLine":77,"endColumn":15},{"ruleId":"214","severity":1,"message":"261","line":77,"column":17,"nodeType":"216","messageId":"217","endLine":77,"endColumn":25},{"ruleId":"214","severity":1,"message":"262","line":86,"column":28,"nodeType":"216","messageId":"217","endLine":86,"endColumn":35},{"ruleId":"214","severity":1,"message":"263","line":86,"column":37,"nodeType":"216","messageId":"217","endLine":86,"endColumn":41},{"ruleId":"214","severity":1,"message":"257","line":86,"column":43,"nodeType":"216","messageId":"217","endLine":86,"endColumn":48},{"ruleId":"214","severity":1,"message":"264","line":96,"column":12,"nodeType":"216","messageId":"217","endLine":96,"endColumn":34},{"ruleId":"239","severity":1,"message":"258","line":151,"column":22,"nodeType":"241","messageId":"242","endLine":151,"endColumn":24},{"ruleId":"265","severity":1,"message":"266","line":167,"column":6,"nodeType":"267","endLine":167,"endColumn":19,"suggestions":"268"},{"ruleId":"214","severity":1,"message":"253","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":17},{"ruleId":"214","severity":1,"message":"248","line":5,"column":3,"nodeType":"216","messageId":"217","endLine":5,"endColumn":13},{"ruleId":"214","severity":1,"message":"269","line":25,"column":9,"nodeType":"216","messageId":"217","endLine":25,"endColumn":14},{"ruleId":"214","severity":1,"message":"270","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":14},{"ruleId":"214","severity":1,"message":"271","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":26},{"ruleId":"214","severity":1,"message":"231","line":3,"column":10,"nodeType":"216","messageId":"217","endLine":3,"endColumn":14},{"ruleId":"214","severity":1,"message":"225","line":5,"column":3,"nodeType":"216","messageId":"217","endLine":5,"endColumn":12},{"ruleId":"214","severity":1,"message":"272","line":9,"column":3,"nodeType":"216","messageId":"217","endLine":9,"endColumn":14},{"ruleId":"214","severity":1,"message":"273","line":1,"column":15,"nodeType":"216","messageId":"217","endLine":1,"endColumn":26},{"ruleId":"214","severity":1,"message":"274","line":3,"column":7,"nodeType":"216","messageId":"217","endLine":3,"endColumn":21},{"ruleId":"214","severity":1,"message":"254","line":2,"column":21,"nodeType":"216","messageId":"217","endLine":2,"endColumn":25},{"ruleId":"214","severity":1,"message":"249","line":4,"column":3,"nodeType":"216","messageId":"217","endLine":4,"endColumn":9},{"ruleId":"214","severity":1,"message":"248","line":5,"column":3,"nodeType":"216","messageId":"217","endLine":5,"endColumn":13},{"ruleId":"214","severity":1,"message":"225","line":9,"column":3,"nodeType":"216","messageId":"217","endLine":9,"endColumn":12},{"ruleId":"214","severity":1,"message":"232","line":10,"column":3,"nodeType":"216","messageId":"217","endLine":10,"endColumn":7},{"ruleId":"214","severity":1,"message":"245","line":14,"column":18,"nodeType":"216","messageId":"217","endLine":14,"endColumn":28},{"ruleId":"265","severity":1,"message":"275","line":62,"column":6,"nodeType":"267","endLine":62,"endColumn":8,"suggestions":"276"},{"ruleId":"214","severity":1,"message":"277","line":12,"column":7,"nodeType":"216","messageId":"217","endLine":12,"endColumn":10},{"ruleId":"278","severity":1,"message":"279","line":107,"column":2,"nodeType":"280","messageId":"281","endLine":107,"endColumn":36},{"ruleId":"214","severity":1,"message":"269","line":109,"column":9,"nodeType":"216","messageId":"217","endLine":109,"endColumn":14},{"ruleId":"278","severity":1,"message":"279","line":146,"column":2,"nodeType":"280","messageId":"281","endLine":146,"endColumn":35},{"ruleId":"278","severity":1,"message":"279","line":258,"column":1,"nodeType":"280","messageId":"281","endLine":260,"endColumn":2},{"ruleId":"214","severity":1,"message":"269","line":262,"column":9,"nodeType":"216","messageId":"217","endLine":262,"endColumn":14},{"ruleId":"214","severity":1,"message":"282","line":29,"column":7,"nodeType":"216","messageId":"217","endLine":29,"endColumn":15},{"ruleId":"214","severity":1,"message":"249","line":10,"column":5,"nodeType":"216","messageId":"217","endLine":10,"endColumn":11},{"ruleId":"214","severity":1,"message":"282","line":37,"column":7,"nodeType":"216","messageId":"217","endLine":37,"endColumn":15},"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'Provider' is defined but never used.","no-native-reassign",["283"],"no-negated-in-lhs",["284"],"'HashRouter' is defined but never used.","'Switch' is defined but never used.","'Container' is defined but never used.","'purple' is defined but never used.","'green' is defined but never used.","'GoogleIcon' is defined but never used.","'TwitterIcon' is defined but never used.","'setSuccess' is assigned a value but never used.","'fade' is defined but never used.","'Card' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'ContentCard' is defined but never used.","'rightMenu' is assigned a value but never used.","'useEffect' is defined but never used.","'useLazyQuery' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'files' is assigned a value but never used.","'useParams' is defined but never used.","'RouterLink' is defined but never used.","'Paper' is defined but never used.","'Divider' is defined but never used.","'ButtonBase' is defined but never used.","'Avatar' is defined but never used.","'TextField' is defined but never used.","'FormHelperText' is defined but never used.","'context' is assigned a value but never used.","'PropTypes' is defined but never used.","'func' is defined but never used.","'useHistory' is defined but never used.","'commentsDocs' is assigned a value but never used.","'error' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'useQuery' is defined but never used.","'useForm' is defined but never used.","'setFiles' is assigned a value but never used.","'loading' is assigned a value but never used.","'data' is assigned a value but never used.","'getS3SignedUrlCallBack' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'handleChange', 'hasBody', 'props.body', and 'selectLocalImage'. Either include them or remove the dependency array.","ArrayExpression",["285"],"'state' is assigned a value but never used.","'Button' is defined but never used.","'Component' is defined but never used.","'ButtonGroup' is defined but never used.","'useMutation' is defined but never used.","'s3SignMutation' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.crudOtion' and 'props.withAuther'. Either include them or remove the dependency array. If 'setState' needs the current value of 'props.withAuther', you can also switch to useReducer instead of useState and read 'props.withAuther' in the reducer.",["286"],"'img' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'userInfo' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},"Update the dependencies array to be: [quill, body, props.body, hasBody, selectLocalImage, handleChange]",{"range":"291","text":"292"},"Update the dependencies array to be: [props.crudOtion, props.withAuther]",{"range":"293","text":"294"},[4829,4842],"[quill, body, props.body, hasBody, selectLocalImage, handleChange]",[1444,1446],"[props.crudOtion, props.withAuther]"]