[{"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\index.js":"1","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\ApolloProvider.js":"2","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\serviceWorker.js":"3","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\App.js":"4","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\context\\auth.js":"5","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Sign-up.js":"6","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Login.js":"7","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\AuthRoute.js":"8","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Home.js":"9","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Navbar.js":"10","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Buttons.js":"11","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\FormInput.js":"12","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\util\\hooks.js":"13","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\AnalystInfo.js":"14","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Content\\Article.js":"15","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Content\\Draft.js":"16","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Editor.js":"17","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Content\\draftsGql.js":"18","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\UI\\messages.js":"19","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Auth\\authGql.js":"20","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\Theme.js":"21","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Content\\MyAuthors.js":"22","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Content\\ContentCards.js":"23","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Content\\fileGql.js":"24"},{"size":520,"mtime":1613630748221,"results":"25","hashOfConfig":"26"},{"size":746,"mtime":1615709392501,"results":"27","hashOfConfig":"26"},{"size":4686,"mtime":1612258551962,"results":"28","hashOfConfig":"26"},{"size":1437,"mtime":1615909507962,"results":"29","hashOfConfig":"26"},{"size":1341,"mtime":1613483158778,"results":"30","hashOfConfig":"26"},{"size":7241,"mtime":1615709392585,"results":"31","hashOfConfig":"26"},{"size":5813,"mtime":1615709392579,"results":"32","hashOfConfig":"26"},{"size":436,"mtime":1613483158737,"results":"33","hashOfConfig":"26"},{"size":4458,"mtime":1615709392571,"results":"34","hashOfConfig":"26"},{"size":9885,"mtime":1615709392536,"results":"35","hashOfConfig":"26"},{"size":1459,"mtime":1613483158754,"results":"36","hashOfConfig":"26"},{"size":500,"mtime":1613483158766,"results":"37","hashOfConfig":"26"},{"size":937,"mtime":1615892750506,"results":"38","hashOfConfig":"26"},{"size":3177,"mtime":1615709392517,"results":"39","hashOfConfig":"26"},{"size":8962,"mtime":1615709392553,"results":"40","hashOfConfig":"26"},{"size":4826,"mtime":1615909637858,"results":"41","hashOfConfig":"26"},{"size":4776,"mtime":1615909621561,"results":"42","hashOfConfig":"26"},{"size":590,"mtime":1615908609005,"results":"43","hashOfConfig":"26"},{"size":1089,"mtime":1615709392537,"results":"44","hashOfConfig":"26"},{"size":476,"mtime":1615709392544,"results":"45","hashOfConfig":"26"},{"size":376,"mtime":1615709392516,"results":"46","hashOfConfig":"26"},{"size":2674,"mtime":1615909106855,"results":"47","hashOfConfig":"26"},{"size":2287,"mtime":1615709392525,"results":"48","hashOfConfig":"26"},{"size":235,"mtime":1615894684863,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},"197fvus",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"53"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"53"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"53"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"53"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"53"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"53"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"53"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"53"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"53"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\index.js",["111","112"],"\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\n\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport ApolloProvider from \"./ApolloProvider\";\r\n\r\n\r\nReactDOM.render(ApolloProvider, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n",["113","114"],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\ApolloProvider.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\serviceWorker.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\App.js",["115","116","117"],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\context\\auth.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Sign-up.js",["118"],"import React, { useContext, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { CustomizedSnackbars } from \"../components/UI/messages\";\r\n\r\n//graphql\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { SIGNUP_USER } from \"../graphql/Auth/authGql\";\r\n//auth\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { useForm } from \"../util/hooks\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright Â© \"}\r\n      <Link color=\"inherit\" href=\"https://google.com/\">\r\n        Alpha+\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp(props) {\r\n  const classes = useStyles();\r\n  const [success, setSuccess] = useState(false);\r\n  const context = useContext(AuthContext);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { onChange, onSubmit, values } = useForm(signUpUserCallback, {\r\n    firstName: \"\",\r\n    lasttName: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPasswrod: \"\",\r\n  });\r\n\r\n  const [signUpUser, { loading }] = useMutation(SIGNUP_USER, {\r\n    update(_, { data: { register: userData } }) {\r\n      context.login(userData);\r\n      props.history.push(\"/\");\r\n    },\r\n    onError(err) {\r\n      setErrors(\r\n        err && err.graphQLErrors[0]\r\n          ? err.graphQLErrors[0].extensions.exception.errors\r\n          : {}\r\n      );\r\n    },\r\n    variables: {\r\n      registerInput: {\r\n        name: values.firstName.concat(\" \", values.lasttName),\r\n        username: values.username,\r\n        email: values.email,\r\n        password: values.password,\r\n        confirmPassword: values.confirmPasswrod,\r\n      },\r\n    },\r\n  });\r\n\r\n  function signUpUserCallback() {\r\n    signUpUser();\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Create Free Account\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={onSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                onChange={onChange}\r\n                value={values.firstName}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"lname\"\r\n                name=\"lasttName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                autoFocus\r\n                onChange={onChange}\r\n                value={values.lasttName}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                onChange={onChange}\r\n                value={values.username}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={onChange}\r\n                value={values.email}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                onChange={onChange}\r\n                value={values.password}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"confirmPasswrod\"\r\n                label=\"Confrim Password\"\r\n                type=\"password\"\r\n                id=\"confirmPasswrod\"\r\n                onChange={onChange}\r\n                value={values.confirmPasswrod}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {loading ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          )}\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/Login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n      {success && (\r\n        <div>\r\n          <CustomizedSnackbars color=\"success\" message=\"Draft is created\" />;\r\n        </div>\r\n      )}\r\n      {Object.keys(errors).length > 0 && (\r\n        <div>\r\n          <ul>\r\n            {Object.values(errors).map((value) => (\r\n              <CustomizedSnackbars color=\"error\" message={value} />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Login.js",["119","120","121"],"import React, {  useContext, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n// //imagers\r\nimport GoogleIcon from \"../assets/icons/1004px-Google__G__Logo.svg.png\";\r\nimport TwitterIcon from \"../assets/icons/580b57fcd9996e24bc43c53e.png\";\r\n//graphql\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { LOGIN_USER } from \"../graphql/Auth/authGql\";\r\n//auth\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { useForm } from \"../util/hooks\";\r\nimport { CustomizedSnackbars } from \"../components/UI/messages\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright Â© \"}\r\n      <Link color=\"inherit\" href=\"https://google.com/\">\r\n        Alpha+ best website ever!\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  GTsubmit: {\r\n    margin: theme.spacing(3, 0, 0),\r\n  },\r\n}));\r\nexport default function SignIn(props) {\r\n  const classes = useStyles();\r\n  const [success, setSuccess] = useState(false);\r\n  const context = useContext(AuthContext);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { onChange, onSubmit, values } = useForm(loginUserCallback, {\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\r\n    update(_, { data: { login: userData } }) {\r\n      context.login(userData);\r\n      props.history.push(\"/\");\r\n    },\r\n    onError(err) {\r\n      setErrors(\r\n        err && err.graphQLErrors[0]\r\n          ? err.graphQLErrors[0].extensions.exception.errors\r\n          : {}\r\n      );\r\n    },\r\n    variables: values,\r\n  });\r\n\r\n  function loginUserCallback() {\r\n    loginUser();\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={onSubmit}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={values.email}\r\n            onChange={onChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={values.password}\r\n            onChange={onChange}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          {loading ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n          )}\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"/Signup\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.GTsubmit}\r\n            >\r\n              Continue with google\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.GTsubmit}\r\n            >\r\n              Continue with twitter\r\n            </Button>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n      {success && (\r\n        <div>\r\n          <CustomizedSnackbars color=\"success\" message=\"Draft is created\" />;\r\n        </div>\r\n      )}\r\n      {Object.keys(errors).length > 0 && (\r\n        <div>\r\n          <ul>\r\n            {Object.values(errors).map((value) => (\r\n              <CustomizedSnackbars color=\"error\" message={value} />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\AuthRoute.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Home.js",["122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147"],"import React from \"react\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from '@material-ui/core/Box';\r\nimport { sizing } from '@material-ui/system';\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport { red, white } from \"@material-ui/core/colors\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Height } from \"@material-ui/icons\";\r\nimport { borders } from '@material-ui/system';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  topContainer: {\r\n  fontStyle: \"oblique\",\r\n  color: \"red\",\r\n  fontSize: \"30px\",\r\n  border: \"none\"\r\n  \r\n   \r\n},\r\nrootCom: {\r\n  minWidth: 275,\r\n  // padding: '50px 250px',\r\n  height: 400,\r\n  width: \"98.5%\", \r\n  // borderTop: 5,\r\n  // border: 0,\r\n  borderRadius: 5,\r\n  marginTop: theme.spacing(1),\r\n  marginLeft: theme.spacing(1),\r\n  marginRight: theme.spacing(1),\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center', \r\n},\r\nrootAna: {\r\n  minWidth: 275,\r\n  // padding: '50px 250px',\r\n  height: 400,\r\n  width: \"45%\", \r\n  // borderTop: 5,\r\n  // border: 0,\r\n  borderRadius: 5,\r\n  marginTop: theme.spacing(1),\r\n  marginLeft: theme.spacing(1),\r\n  marginRight: theme.spacing(1),\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'left', \r\n},\r\n\r\ntitleCom: {\r\n  fontSize: 43,\r\n},\r\ntitleAna: {\r\n  fontSize: 24,\r\n  marginLeft: theme.spacing(1),\r\n},\r\npos: {\r\n  marginBottom: 12,\r\n},\r\nLearnMoreCommunity: {\r\n  // marginBottom: theme.spacing(10),\r\n  margin: theme.spacing(30, 30, 30),\r\n\r\n},\r\n}));\r\n\r\n\r\nexport default function Home(){\r\n  const classes = useStyles();\r\n  return (\r\n    <div className='background'>\r\n    <Card className={classes.rootCom} variant=\"h1\">\r\n      <CardContent>\r\n        <Typography className={classes.titleCom} color=\"textSecondary\" gutterBottom>\r\n          Community\r\n        </Typography>\r\n       \r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"medium\" color=\"primary\" className={classes.LearnMoreCommunity}>Learn More</Button>\r\n      </CardActions>\r\n    </Card>\r\n    <Grid>\r\n    <Card className={classes.rootAna} variant=\"h1\">\r\n      <CardContent>\r\n        <Typography className={classes.titleAna} color=\"textSecondary\" gutterBottom>\r\n          Trending Analysis\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n\r\n    <Card className={classes.rootAna} variant=\"h1\">\r\n      <CardContent>\r\n        <Typography className={classes.titleAna} color=\"textSecondary\" gutterBottom>\r\n          Latest News\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n    </Grid>\r\n\r\n    <Card className={classes.rootCom} variant=\"h1\">\r\n      <CardContent>\r\n        <Typography className={classes.titleCom} color=\"textSecondary\" gutterBottom>\r\n          Portfolilo\r\n        </Typography>\r\n       \r\n      </CardContent>\r\n    </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\n// const Home = () => {\r\n//   return (\r\n//     <div className='background'> \r\n//       <Grid container spacing={2} >\r\n//         <Grid item xs = {10} lg={10} style={{ width: \"100%\"}}>\r\n//           <Cards />\r\n//           <Card>\r\n//             <Grid>\r\n//               kkokk\r\n//             </Grid>\r\n//           </Card>\r\n//         </Grid>\r\n//         {/* <Grid item xs={5}>\r\n//           <Cards />\r\n//         </Grid> */}\r\n//       </Grid>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Home;\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Navbar.js",["148"],"import {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n  IconButton,\r\n  Drawer,\r\n  Link,\r\n  MenuItem,\r\n  fade,\r\n  InputBase,\r\n  Menu,\r\n  Divider,\r\n  List,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { AccountCircle, Search, ExitToApp } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    backgroundColor: theme.palette.primary,\r\n\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      paddingRight: \"79px\",\r\n      paddingLeft: \"118px\",\r\n    },\r\n    flexGrow: 1,\r\n    paddingLeft: 0,\r\n  },\r\n  logo: {\r\n    fontFamily: \"sans-serif\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"bold\",\r\n    marginRight: theme.spacing(5),\r\n    /* or 54px */\r\n    textDecoration: \"none\",\r\n    \"&:visited\": {\r\n      color: theme.palette.common.white,\r\n    },\r\n    letterSpacing: \"2px\",\r\n    // display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n      fontSize: \"36px\",\r\n      lineHeight: \"150%\",\r\n    },\r\n  },\r\n  leftMenu: {\r\n    paddingTop: theme.spacing(4),\r\n  },\r\n  menuButton: {\r\n    display: \"inline-block\",\r\n\r\n    fontFamily: \"Open Sans, sans-serif\",\r\n    fontWeight: 400,\r\n    size: theme.typography.fontSize,\r\n    marginLeft: theme.spacing(4),\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  drawerContainer: {\r\n    padding: theme.spacing(3, 6),\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"80%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginRight: theme.spacing(2),\r\n\r\n      marginLeft: theme.spacing(12),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"80%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n  rightMenu: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n\r\n    // marginRight: theme.spacing(2),\r\n    marginLeft: theme.spacing(20),\r\n    color: theme.palette.primary,\r\n  },\r\n  loginBtn: {\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.9),\r\n      color: theme.palette.getContrastText(theme.palette.common.white),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Header(props) {\r\n  const context = useContext(AuthContext);\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const loggingOut = () => {\r\n    handleMenuClose();\r\n    context.logout();\r\n  };\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>{\" \"}\r\n      <MenuItem onClick={loggingOut}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          onClick={loggingOut}\r\n        >\r\n          <ExitToApp />\r\n        </IconButton>\r\n        <p>Logout</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const leftMenu = [\r\n    {\r\n      title: \"My Authers\",\r\n      link: context.user ? `/MyAuthers/${context.user.id}/` : `/Login`,\r\n    },\r\n    {\r\n      title: \"My Portfolio\",\r\n      link: \"/Portfolio\",\r\n    },\r\n    {\r\n      title: \"Sectors\",\r\n      dropdown: true,\r\n      menu: [\r\n        {\r\n          title: \"My Portfolio\",\r\n          link: \"/Portfolio\",\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const rightMenu = [\r\n    {\r\n      title: \"Login\",\r\n      link: \"/Login\",\r\n      isLoggedIn: false,\r\n    },\r\n    {\r\n      title: \"logut\",\r\n      link: \"/\",\r\n      function: () => context.logout(),\r\n      isLoggedIn: true,\r\n    },\r\n  ];\r\n\r\n  const { header, logo, menuButton, toolbar, drawerContainer } = useStyles();\r\n\r\n  const [state, setState] = useState({\r\n    mobileView: false,\r\n    drawerOpen: false,\r\n  });\r\n\r\n  const { mobileView, drawerOpen } = state;\r\n\r\n  useEffect(() => {\r\n    const setResponsiveness = () => {\r\n      return window.innerWidth < 900\r\n        ? setState((prevState) => ({ ...prevState, mobileView: true }))\r\n        : setState((prevState) => ({ ...prevState, mobileView: false }));\r\n    };\r\n\r\n    setResponsiveness();\r\n\r\n    window.addEventListener(\"resize\", () => setResponsiveness());\r\n  }, []);\r\n  const searchBar = () => {\r\n    return (\r\n      <div className={classes.search}>\r\n        <div className={classes.searchIcon}>\r\n          <Search />\r\n        </div>\r\n        <InputBase\r\n          placeholder=\"Searchâ¦\"\r\n          classes={{\r\n            root: classes.inputRoot,\r\n            input: classes.inputInput,\r\n          }}\r\n          inputProps={{ \"aria-label\": \"search\" }}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n  const displayDesktop = () => {\r\n    return (\r\n      <Toolbar className={toolbar}>\r\n        {Logo}\r\n        <div className={classes.leftMenu}>{getLeftMenu()}</div>\r\n        {/* Search Bar */}\r\n        <div>{searchBar()}</div>\r\n        {/* Righ Menu */}\r\n        <div> {getRightMenu()}</div>\r\n        {renderMenu}\r\n      </Toolbar>\r\n    );\r\n  };\r\n  const getRightMenu = () => {\r\n    return (\r\n      <div className={classes.rightMenu}>\r\n        {context.user ? (\r\n          <IconButton\r\n            edge=\"end\"\r\n            aria-label=\"account of current user\"\r\n            aria-controls={menuId}\r\n            aria-haspopup=\"true\"\r\n            onClick={handleProfileMenuOpen}\r\n            color=\"inherit\"\r\n          >\r\n            <AccountCircle />\r\n          </IconButton>\r\n        ) : (\r\n          <Button\r\n            className={classes.loginBtn}\r\n            variant=\"outlined\"\r\n            color=\"inherit\"\r\n            component={RouterLink}\r\n            to=\"/Login\"\r\n          >\r\n            Login\r\n          </Button>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n  const displayMobile = () => {\r\n    const handleDrawerOpen = () =>\r\n      setState((prevState) => ({ ...prevState, drawerOpen: true }));\r\n    const handleDrawerClose = () =>\r\n      setState((prevState) => ({ ...prevState, drawerOpen: false }));\r\n\r\n    return (\r\n      <Toolbar>\r\n        <IconButton\r\n          {...{\r\n            edge: \"start\",\r\n            color: \"inherit\",\r\n            \"aria-label\": \"menu\",\r\n            \"aria-haspopup\": \"true\",\r\n            onClick: handleDrawerOpen,\r\n          }}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n\r\n        <Drawer\r\n          {...{\r\n            anchor: \"left\",\r\n            open: drawerOpen,\r\n            onClose: handleDrawerClose,\r\n          }}\r\n        >\r\n          <div className={drawerContainer}>{getDrawerChoices()}</div>\r\n        </Drawer>\r\n\r\n        <div>{Logo}</div>\r\n        <div>{searchBar()}</div>\r\n      </Toolbar>\r\n    );\r\n  };\r\n\r\n  const getDrawerChoices = () => {\r\n    return (\r\n      <div>\r\n        {leftMenu.map((e) => {\r\n          return (\r\n            <Link\r\n              {...{\r\n                component: RouterLink,\r\n                to: e.link,\r\n                color: \"inherit\",\r\n                style: { textDecoration: \"none\" },\r\n                key: e.title,\r\n              }}\r\n            >\r\n              <MenuItem>{e.title}</MenuItem>\r\n            </Link>\r\n          );\r\n        })}\r\n        <Divider />\r\n        {context.user ? (\r\n          <List>\r\n            <MenuItem>Profile</MenuItem>\r\n\r\n            <MenuItem component={Button} onClick={() => context.logout()}>\r\n              Logout\r\n            </MenuItem>\r\n          </List>\r\n        ) : (\r\n          <Link\r\n            {...{\r\n              component: RouterLink,\r\n              to: \"/Login\",\r\n              color: \"inherit\",\r\n              style: { textDecoration: \"none\" },\r\n              key: \"Login\",\r\n            }}\r\n          >\r\n            <MenuItem>Login</MenuItem>\r\n          </Link>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const Logo = (\r\n    <Typography variant=\"h6\" component=\"h1\" className={logo}>\r\n      Alpha+\r\n    </Typography>\r\n  );\r\n\r\n  const getLeftMenu = () => {\r\n    return leftMenu.map((e) => {\r\n      return (\r\n        <Button\r\n          {...{\r\n            key: e.title,\r\n            color: \"inherit\",\r\n            to: e.link,\r\n            component: RouterLink,\r\n            className: menuButton,\r\n          }}\r\n        >\r\n          {e.title}\r\n        </Button>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar className={header} position=\"static\">\r\n        {mobileView ? displayMobile() : displayDesktop()}\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Buttons.js",[],["149","150"],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\FormInput.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\util\\hooks.js",["151","152"],"import { gql, useMutation } from \"@apollo/client\";\r\nimport { useState } from \"react\";\r\nconst s3SignMutation = gql`\r\n  mutation($filename: String!, $filetype: String!) {\r\n    signS3(filename: $filename, filetype: $filetype) {\r\n      url\r\n      signedRequest\r\n    }\r\n  }\r\n`;\r\nexport const useForm = (callback, initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const onChange = (event) => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    callback();\r\n  };\r\n\r\n  return {\r\n    onChange,\r\n    onSubmit,\r\n    values,\r\n  };\r\n};\r\n\r\n// export const useS3Url = (callback, initialState = {}) => {\r\n//   const [values, setValues] = useState(initialState);\r\n\r\n//   const onRequest = (event) => {\r\n//     const response = useMutation(s3SignMutation, {\r\n//       variables: values,\r\n      \r\n//     });\r\n//   };\r\n// };\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\AnalystInfo.js",["153","154","155"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Avatar,\r\n  ButtonBase,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginLeft: 0,\r\n  },\r\n  wideFollowBtn: {\r\n    [theme.breakpoints.up('md')]: {\r\n      width: theme.spacing(20),\r\n    },\r\n  },\r\n}));\r\n\r\nexport function ArticleAutherInfo(props) {\r\n  const state = useState();\r\n  const classes = useStyles();\r\n  return (\r\n    <Container className={classes.root} maxWidth=\"xs\">\r\n      <Grid\r\n        spacing={4}\r\n        container\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        <Grid item xs={2}>\r\n          <Avatar alt={props.name} src={props.img} />\r\n        </Grid>\r\n        {/* // Analyst info  */}\r\n        <Grid item xs={4} sm spacing={0}>\r\n          <Grid item xs container direction=\"column\" spacing={0}>\r\n            <Grid item xs>\r\n              <Typography gutterBottom variant=\"subtitle1\">\r\n                {props.name}\r\n              </Typography>\r\n              <Typography variant=\"subtitle2\" gutterBottom noWrap>\r\n                {props.bio}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {/* //Analyst Follow Button */}\r\n        <Grid item xs={2} sm>\r\n          <Button variant=\"outlined\" color=\"primary\">\r\n            Follow\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nArticleAutherInfo.propTypes = {};\r\n\r\nexport function ArticleAutherInfoExpanded(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Grid\r\n        spacing={4}\r\n        container\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        <Grid item xs={2}>\r\n          <Avatar alt={props.name} src={props.img} />\r\n        </Grid>\r\n        {/* // Analyst info  */}\r\n        <Grid item xs={4} sm spacing={0}>\r\n          <Grid item xs container direction=\"column\" spacing={0}>\r\n            <Grid item xs>\r\n              <Typography gutterBottom variant=\"subtitle1\">\r\n                {props.name}\r\n              </Typography>\r\n              <Typography variant=\"subtitle2\" gutterBottom noWrap>\r\n                {props.bio}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {/* //Analyst Follow Button */}\r\n        <Grid\r\n          item\r\n          xs={2}\r\n          sm\r\n          direction=\"column\"\r\n          justify=\"flex-end\"\r\n          alignItems=\"flex-end\"\r\n          container\r\n        >\r\n          <Grid item>\r\n            <Button\r\n              className={classes.wideFollowBtn}\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n            >\r\n              Follow\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item spacing={2} alignItems=\"center\" alignContent=\"center\">\r\n            <Typography gutterBottom variant=\"caption\">100 Followers</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Content\\Article.js",["156","157","158"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Divider,\r\n  ButtonBase,\r\n  Button,\r\n  Avatar,\r\n  TextField,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport ReplyIcon from \"@material-ui/icons/Reply\";\r\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport AddCommentIcon from \"@material-ui/icons/AddComment\";\r\nimport {\r\n  ArticleAutherInfo,\r\n  ArticleAutherInfoExpanded,\r\n} from \"../../components/AnalystInfo\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginLeft: 0,\r\n  },\r\n  articleLayout: {\r\n    paddingTop: theme.spacing(5),\r\n    marginRight: theme.spacing(0),\r\n    marginLeft: theme.spacing(0),\r\n    padding: theme.spacing(1),\r\n    paddingBottom: theme.spacing(4),\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      marginLeft: theme.spacing(40),\r\n      marginRight: theme.spacing(40),\r\n    },\r\n  },\r\n  analystInfoSection: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  title: {\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  body: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  likeBtn: {\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.9),\r\n    },\r\n  },\r\n  commentsLayout: {\r\n    marginTop: theme.spacing(5),\r\n  },\r\n  commentsHeader: {\r\n    padding: theme.spacing(4),\r\n    color: theme.palette.grey[400],\r\n  },\r\n  addComment: {\r\n    paddingBottom: theme.spacing(2),\r\n    paddingRight: theme.spacing(4),\r\n    \"& .MuiTextField-root\": {\r\n      width: \"60ch\",\r\n      padding: theme.spacing(4),\r\n      paddingTop: theme.spacing(1),\r\n      borderTopLeftRadius: 0,\r\n    },\r\n  },\r\n  comment: {\r\n    padding:theme.spacing(2),\r\n    \"& .MuiAvatar-root\": {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    \"& .MuiDivider-root\": {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    \"& .MuiGrid-root\":{\r\n      marginBottom: theme.spacing(2),\r\n\r\n    },\r\n    '& .commentBody':{\r\n      paddingBottom: theme.spacing(2),\r\n\r\n    }\r\n  },\r\n  commentBtn:{\r\n    paddingTop:theme.spacing(4),\r\n  }\r\n\r\n}));\r\n\r\nconst img = \"avatars/7.jpg\";\r\nconst analystInfo = {\r\n  name: \"jhon doe\",\r\n  img: img,\r\n  bio: \"Analyst\",\r\n};\r\nconst commentsDocs = [\r\n  {\r\n    name: \"Alex\",\r\n    Avatar: \"AL\",\r\n    date: \"2021-2-21\",\r\n    body: \"Great Article\",\r\n  },\r\n  {\r\n    name: \"Ziad\",\r\n    Avatar: \"ZI\",\r\n    date: \"2021-2-22\",\r\n    body: \"I dissagree , there should not be any downsides\",\r\n  },\r\n  {\r\n    name: \"Mohammed\",\r\n    Avatar: \"MO\",\r\n    date: \"2021-2-24\",\r\n    body: \"Please keep up the good work\",\r\n  },\r\n];\r\n\r\nconst Article = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"background\">\r\n      <div className={classes.articleLayout}>\r\n        <ArticleSection />\r\n        {/* Comments Section */}\r\n        <CommentsSection />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nArticle.propTypes = {};\r\n\r\nexport default Article;\r\n\r\nconst ArticleSection = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container>\r\n      <Paper elevation={2}>\r\n        <ArticleAutherInfo\r\n          img={analystInfo.img}\r\n          name={analystInfo.name}\r\n          bio={analystInfo.bio}\r\n        />\r\n        {/* Title + Body Container */}\r\n        <Container>\r\n          {/* Title  */}\r\n          <Container className={classes.title}>\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              direction=\"column\"\r\n              justify=\"space-between\"\r\n              alignItems=\"baseline\"\r\n            >\r\n              <Grid item>\r\n                <h1>First Article on alpha+</h1>\r\n              </Grid>\r\n              <Grid item container direction=\"row\" spacing={1}>\r\n                <Grid item xs>\r\n                  <Typography variant=\"caption\">\r\n                    Published 17 Feb, 2021\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <Typography variant=\"caption\">\r\n                    last updated feb 19 2021\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n          {/* Body */}\r\n          <Container className={classes.body}>\r\n            <Typography variant=\"body1\">{body}</Typography>\r\n          </Container>\r\n          <Divider variant=\"middle\" />\r\n          {/* Article Buttons */}\r\n          <Container>\r\n            <Grid container justify=\"space-evenly\" spacing={2} xs sm>\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"text\"\r\n                  color=\"primary\"\r\n                  startIcon={<ThumbUpAltOutlinedIcon />}\r\n                >\r\n                  Like the article?\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"text\"\r\n                  color=\"primary\"\r\n                  startIcon={<ShareIcon />}\r\n                >\r\n                  Share the article\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"text\"\r\n                  color=\"primary\"\r\n                  startIcon={<AddCommentIcon />}\r\n                >\r\n                  Add Comment\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        </Container>\r\n      </Paper>\r\n      <Paper elevation={2} className={classes.analystInfoSection}>\r\n        <ArticleAutherInfoExpanded\r\n          img={analystInfo.img}\r\n          name={analystInfo.name}\r\n          bio={analystInfo.bio}\r\n        />\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nArticleSection.propTypes = {};\r\n\r\nfunction CommentsSection(props) {\r\n  const classes = useStyles();\r\n  const comments = (commentsDocs) =>\r\n    commentsDocs.map((v) => (\r\n      <CreateComment\r\n        name={v.name}\r\n        body={v.body}\r\n        date={v.date}\r\n        avatar={v.Avatar}\r\n      />\r\n    ));\r\n\r\n  return (\r\n    <Container className={classes.commentsLayout}>\r\n      <Paper elevation={2}>\r\n        <Container>\r\n          <Container className={classes.commentsHeader}>\r\n            <Typography variant=\"h4\">Comments(2)</Typography>\r\n          </Container>\r\n          <Container className={classes.addComment}>\r\n            <form>\r\n              <Avatar>OP</Avatar>\r\n              <TextField\r\n                id=\"outlined-multiline-static\"\r\n                multiline\r\n                rows={4}\r\n                placeholder=\"add your comment..\"\r\n                variant=\"outlined\"\r\n              />\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                Publish\r\n              </Button>\r\n            </form>\r\n          </Container>\r\n          <Container>{comments(commentsDocs)}</Container>\r\n        </Container>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst CreateComment = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container className={classes.comment}>\r\n      <Divider />\r\n      <Grid container direction=\"row\" justify=\"space-between\">\r\n        <Grid item container xs={4} sm>\r\n          <Avatar>{props.avatar}</Avatar>\r\n          <Typography variant=\"subtitle1\">{props.name}</Typography>\r\n        </Grid>\r\n        <Typography variant=\"caption\">{props.date}</Typography>\r\n      </Grid>\r\n      <Container className='commentBody'>\r\n        <Typography variant=\"body2\">{props.body}</Typography>\r\n      </Container>\r\n      <Container className={classes.commentBtn}>\r\n        <Button startIcon={<ReplyIcon />}>Reply</Button>\r\n        <Button startIcon={<ThumbUpAltOutlinedIcon />}>Like</Button>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nCreateComment.propTypes = {};\r\n\r\nconst body =\r\n  \"Summary\\n\\nBoth Tilray and Aphria have seen 200% stock surges in just days from Reddit-style buying.\\n\\nThe 'blue wave' will help cannabis companies as federal legalization will open up new markets internally in the United States.\\n\\nRevenues and earnings for both companies are muted compared to the growth of other companies in the same sector.\\n\\nStock prices do not reflect potential growth of revenue and earnings for either of these companies.\\n\\nA couple of weeks ago, I reviewed the Tilray (TLRY) and Aphria (APHA) merger. I was neutral on the deal simply because although there would be potential cost savings, the stock price had already achieved a rational valuation based upon what could be earned. Since then, the stock has caught fire and shot up sharply. I received many messages from readers asking what I thought and if I still maintained my neutral position.\\n\\n\\n\\nYes, I will always be a âneutralâ on a stock that is overvalued.\\n\\n\\n\\nI felt the valuations were too rich before and now both stocks are up significantly.\\n\\n\\n\\nBut, there have been fundamental changes since that last review I did so I wanted to take another look at what has transpired.\";\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Content\\Draft.js",["159","160","161","162"],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Editor.js",["163","164","165","166","167","168","169","170"],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Content\\draftsGql.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\UI\\messages.js",["171"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport function CustomizedSnackbars(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  //   const handleClick = () => {\r\n  //     setOpen(true);\r\n  //   };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={props.color}>\r\n          {props.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Auth\\authGql.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\Theme.js",["172","173"],"import { createMuiTheme } from '@material-ui/core/styles';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport green from '@material-ui/core/colors/green';\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#0081A7',\r\n    },\r\n    secondary: {\r\n      main: '#FED9B7',\r\n    },\r\n    success:{\r\n        main:'#00AFB9'\r\n    }\r\n  },\r\n});","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Content\\MyAuthors.js",["174","175","176","177","178","179","180","181","182","183","184","185","186","187"],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Content\\ContentCards.js",["188","189","190","191"],"import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Avatar,\r\n  ButtonBase,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  Container,\r\n  Card,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginLeft: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  title: {\r\n    fontSize: theme.typography.fontSize * 2,\r\n    textDecoration: \"none\",\r\n    \"&:visited\": {\r\n      color: theme.palette.common.black,\r\n    },\r\n  },\r\n}));\r\n\r\nfunction ContentCards(props) {\r\n  const [state, setState] = useState({\r\n    withAuther: false,\r\n    crudOtion: true,\r\n  });\r\n  useEffect(() => {\r\n    if (props.withAuther)\r\n      setState({\r\n        withAuther: props.withAuther,\r\n      });\r\n    if (props.crudOtion)\r\n      setState({\r\n        crudOtion: props.crudOtion,\r\n      });\r\n  });\r\n  const classes = useStyles();\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Grid\r\n        spacing={4}\r\n        container\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        <Grid item>\r\n          {state.withAuther ? (\r\n            <Avatar alt={props.name} src={props.img} />\r\n          ) : null}\r\n        </Grid>\r\n\r\n        {/* // Content info  */}\r\n        <Grid item xs={2} sm>\r\n          <Grid item container direction=\"column\" spacing={2}>\r\n            <Grid item>\r\n              <Typography\r\n                component={RouterLink}\r\n                to={props.link}\r\n                gutterBottom\r\n                variant=\"subtitle1\"\r\n                className={classes.title}\r\n              >\r\n                {props.title}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {/* // Crud Buttons */}\r\n        {state.crudOtion ? (\r\n          <Grid container item xs={2}>\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              Edit\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"secondary\">\r\n              Delete\r\n            </Button>\r\n          </Grid>\r\n        ) : null}\r\n      </Grid>\r\n      <Divider  />\r\n\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport { ContentCards };\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Content\\fileGql.js",[],{"ruleId":"192","severity":1,"message":"193","line":2,"column":8,"nodeType":"194","messageId":"195","endLine":2,"endColumn":13},{"ruleId":"192","severity":1,"message":"196","line":7,"column":10,"nodeType":"194","messageId":"195","endLine":7,"endColumn":18},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"192","severity":1,"message":"201","line":3,"column":3,"nodeType":"194","messageId":"195","endLine":3,"endColumn":13},{"ruleId":"192","severity":1,"message":"202","line":5,"column":3,"nodeType":"194","messageId":"195","endLine":5,"endColumn":9},{"ruleId":"192","severity":1,"message":"203","line":20,"column":10,"nodeType":"194","messageId":"195","endLine":20,"endColumn":19},{"ruleId":"192","severity":1,"message":"204","line":60,"column":19,"nodeType":"194","messageId":"195","endLine":60,"endColumn":29},{"ruleId":"192","severity":1,"message":"205","line":16,"column":8,"nodeType":"194","messageId":"195","endLine":16,"endColumn":18},{"ruleId":"192","severity":1,"message":"206","line":17,"column":8,"nodeType":"194","messageId":"195","endLine":17,"endColumn":19},{"ruleId":"192","severity":1,"message":"204","line":63,"column":19,"nodeType":"194","messageId":"195","endLine":63,"endColumn":29},{"ruleId":"192","severity":1,"message":"207","line":2,"column":10,"nodeType":"194","messageId":"195","endLine":2,"endColumn":14},{"ruleId":"192","severity":1,"message":"208","line":3,"column":8,"nodeType":"194","messageId":"195","endLine":3,"endColumn":11},{"ruleId":"192","severity":1,"message":"209","line":4,"column":10,"nodeType":"194","messageId":"195","endLine":4,"endColumn":16},{"ruleId":"192","severity":1,"message":"210","line":5,"column":8,"nodeType":"194","messageId":"195","endLine":5,"endColumn":14},{"ruleId":"192","severity":1,"message":"211","line":6,"column":8,"nodeType":"194","messageId":"195","endLine":6,"endColumn":15},{"ruleId":"192","severity":1,"message":"212","line":7,"column":8,"nodeType":"194","messageId":"195","endLine":7,"endColumn":18},{"ruleId":"192","severity":1,"message":"213","line":9,"column":8,"nodeType":"194","messageId":"195","endLine":9,"endColumn":17},{"ruleId":"192","severity":1,"message":"214","line":10,"column":8,"nodeType":"194","messageId":"195","endLine":10,"endColumn":13},{"ruleId":"192","severity":1,"message":"215","line":11,"column":8,"nodeType":"194","messageId":"195","endLine":11,"endColumn":16},{"ruleId":"192","severity":1,"message":"216","line":12,"column":8,"nodeType":"194","messageId":"195","endLine":12,"endColumn":12},{"ruleId":"192","severity":1,"message":"217","line":13,"column":8,"nodeType":"194","messageId":"195","endLine":13,"endColumn":16},{"ruleId":"192","severity":1,"message":"218","line":14,"column":8,"nodeType":"194","messageId":"195","endLine":14,"endColumn":18},{"ruleId":"192","severity":1,"message":"219","line":15,"column":8,"nodeType":"194","messageId":"195","endLine":15,"endColumn":21},{"ruleId":"192","severity":1,"message":"220","line":16,"column":8,"nodeType":"194","messageId":"195","endLine":16,"endColumn":16},{"ruleId":"192","severity":1,"message":"221","line":17,"column":8,"nodeType":"194","messageId":"195","endLine":17,"endColumn":25},{"ruleId":"192","severity":1,"message":"222","line":18,"column":8,"nodeType":"194","messageId":"195","endLine":18,"endColumn":16},{"ruleId":"192","severity":1,"message":"223","line":19,"column":10,"nodeType":"194","messageId":"195","endLine":19,"endColumn":13},{"ruleId":"192","severity":1,"message":"224","line":19,"column":15,"nodeType":"194","messageId":"195","endLine":19,"endColumn":20},{"ruleId":"192","severity":1,"message":"225","line":21,"column":8,"nodeType":"194","messageId":"195","endLine":21,"endColumn":19},{"ruleId":"192","severity":1,"message":"206","line":22,"column":8,"nodeType":"194","messageId":"195","endLine":22,"endColumn":19},{"ruleId":"192","severity":1,"message":"226","line":23,"column":8,"nodeType":"194","messageId":"195","endLine":23,"endColumn":17},{"ruleId":"192","severity":1,"message":"227","line":24,"column":10,"nodeType":"194","messageId":"195","endLine":24,"endColumn":14},{"ruleId":"192","severity":1,"message":"203","line":25,"column":8,"nodeType":"194","messageId":"195","endLine":25,"endColumn":17},{"ruleId":"192","severity":1,"message":"228","line":29,"column":10,"nodeType":"194","messageId":"195","endLine":29,"endColumn":16},{"ruleId":"192","severity":1,"message":"229","line":30,"column":10,"nodeType":"194","messageId":"195","endLine":30,"endColumn":17},{"ruleId":"192","severity":1,"message":"230","line":31,"column":10,"nodeType":"194","messageId":"195","endLine":31,"endColumn":18},{"ruleId":"192","severity":1,"message":"231","line":200,"column":9,"nodeType":"194","messageId":"195","endLine":200,"endColumn":18},{"ruleId":"197","replacedBy":"232"},{"ruleId":"199","replacedBy":"233"},{"ruleId":"192","severity":1,"message":"234","line":1,"column":15,"nodeType":"194","messageId":"195","endLine":1,"endColumn":26},{"ruleId":"192","severity":1,"message":"235","line":3,"column":7,"nodeType":"194","messageId":"195","endLine":3,"endColumn":21},{"ruleId":"192","severity":1,"message":"236","line":2,"column":8,"nodeType":"194","messageId":"195","endLine":2,"endColumn":17},{"ruleId":"192","severity":1,"message":"237","line":5,"column":3,"nodeType":"194","messageId":"195","endLine":5,"endColumn":13},{"ruleId":"192","severity":1,"message":"238","line":25,"column":9,"nodeType":"194","messageId":"195","endLine":25,"endColumn":14},{"ruleId":"192","severity":1,"message":"236","line":2,"column":8,"nodeType":"194","messageId":"195","endLine":2,"endColumn":17},{"ruleId":"192","severity":1,"message":"237","line":9,"column":3,"nodeType":"194","messageId":"195","endLine":9,"endColumn":13},{"ruleId":"192","severity":1,"message":"239","line":13,"column":3,"nodeType":"194","messageId":"195","endLine":13,"endColumn":17},{"ruleId":"192","severity":1,"message":"207","line":6,"column":10,"nodeType":"194","messageId":"195","endLine":6,"endColumn":14},{"ruleId":"192","severity":1,"message":"240","line":55,"column":10,"nodeType":"194","messageId":"195","endLine":55,"endColumn":15},{"ruleId":"192","severity":1,"message":"241","line":56,"column":10,"nodeType":"194","messageId":"195","endLine":56,"endColumn":18},{"ruleId":"242","severity":1,"message":"243","line":58,"column":12,"nodeType":"244","messageId":"245","endLine":58,"endColumn":14},{"ruleId":"192","severity":1,"message":"246","line":11,"column":10,"nodeType":"194","messageId":"195","endLine":11,"endColumn":17},{"ruleId":"192","severity":1,"message":"240","line":76,"column":10,"nodeType":"194","messageId":"195","endLine":76,"endColumn":15},{"ruleId":"192","severity":1,"message":"247","line":76,"column":17,"nodeType":"194","messageId":"195","endLine":76,"endColumn":25},{"ruleId":"192","severity":1,"message":"248","line":88,"column":28,"nodeType":"194","messageId":"195","endLine":88,"endColumn":35},{"ruleId":"192","severity":1,"message":"249","line":88,"column":37,"nodeType":"194","messageId":"195","endLine":88,"endColumn":41},{"ruleId":"192","severity":1,"message":"250","line":88,"column":43,"nodeType":"194","messageId":"195","endLine":88,"endColumn":48},{"ruleId":"192","severity":1,"message":"251","line":98,"column":12,"nodeType":"194","messageId":"195","endLine":98,"endColumn":34},{"ruleId":"252","severity":1,"message":"253","line":159,"column":6,"nodeType":"254","endLine":159,"endColumn":19,"suggestions":"255"},{"ruleId":"192","severity":1,"message":"256","line":2,"column":8,"nodeType":"194","messageId":"195","endLine":2,"endColumn":14},{"ruleId":"192","severity":1,"message":"257","line":2,"column":8,"nodeType":"194","messageId":"195","endLine":2,"endColumn":14},{"ruleId":"192","severity":1,"message":"258","line":3,"column":8,"nodeType":"194","messageId":"195","endLine":3,"endColumn":13},{"ruleId":"192","severity":1,"message":"259","line":1,"column":39,"nodeType":"194","messageId":"195","endLine":1,"endColumn":48},{"ruleId":"192","severity":1,"message":"260","line":2,"column":10,"nodeType":"194","messageId":"195","endLine":2,"endColumn":19},{"ruleId":"192","severity":1,"message":"261","line":2,"column":29,"nodeType":"194","messageId":"195","endLine":2,"endColumn":39},{"ruleId":"192","severity":1,"message":"262","line":5,"column":3,"nodeType":"194","messageId":"195","endLine":5,"endColumn":7},{"ruleId":"192","severity":1,"message":"263","line":6,"column":3,"nodeType":"194","messageId":"195","endLine":6,"endColumn":8},{"ruleId":"192","severity":1,"message":"264","line":9,"column":3,"nodeType":"194","messageId":"195","endLine":9,"endColumn":10},{"ruleId":"192","severity":1,"message":"237","line":10,"column":3,"nodeType":"194","messageId":"195","endLine":10,"endColumn":13},{"ruleId":"192","severity":1,"message":"265","line":12,"column":3,"nodeType":"194","messageId":"195","endLine":12,"endColumn":9},{"ruleId":"192","severity":1,"message":"266","line":13,"column":3,"nodeType":"194","messageId":"195","endLine":13,"endColumn":12},{"ruleId":"192","severity":1,"message":"239","line":14,"column":3,"nodeType":"194","messageId":"195","endLine":14,"endColumn":17},{"ruleId":"192","severity":1,"message":"207","line":21,"column":10,"nodeType":"194","messageId":"195","endLine":21,"endColumn":14},{"ruleId":"192","severity":1,"message":"267","line":42,"column":9,"nodeType":"194","messageId":"195","endLine":42,"endColumn":16},{"ruleId":"192","severity":1,"message":"249","line":48,"column":20,"nodeType":"194","messageId":"195","endLine":48,"endColumn":24},{"ruleId":"192","severity":1,"message":"250","line":48,"column":26,"nodeType":"194","messageId":"195","endLine":48,"endColumn":31},{"ruleId":"192","severity":1,"message":"236","line":2,"column":8,"nodeType":"194","messageId":"195","endLine":2,"endColumn":17},{"ruleId":"192","severity":1,"message":"237","line":5,"column":3,"nodeType":"194","messageId":"195","endLine":5,"endColumn":13},{"ruleId":"192","severity":1,"message":"268","line":10,"column":3,"nodeType":"194","messageId":"195","endLine":10,"endColumn":7},{"ruleId":"252","severity":1,"message":"269","line":35,"column":3,"nodeType":"194","endLine":35,"endColumn":12,"suggestions":"270"},"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'Provider' is defined but never used.","no-native-reassign",["271"],"no-negated-in-lhs",["272"],"'HashRouter' is defined but never used.","'Switch' is defined but never used.","'Container' is defined but never used.","'setSuccess' is assigned a value but never used.","'GoogleIcon' is defined but never used.","'TwitterIcon' is defined but never used.","'fade' is defined but never used.","'Box' is defined but never used.","'sizing' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'IconButton' is defined but never used.","'InputBase' is defined but never used.","'Badge' is defined but never used.","'MenuItem' is defined but never used.","'Menu' is defined but never used.","'MenuIcon' is defined but never used.","'SearchIcon' is defined but never used.","'AccountCircle' is defined but never used.","'MailIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'MoreIcon' is defined but never used.","'red' is defined but never used.","'white' is defined but never used.","'ButtonGroup' is defined but never used.","'EmailIcon' is defined but never used.","'Link' is defined but never used.","'Height' is defined but never used.","'borders' is defined but never used.","'useTheme' is defined but never used.","'rightMenu' is assigned a value but never used.",["271"],["272"],"'useMutation' is defined but never used.","'s3SignMutation' is assigned a value but never used.","'PropTypes' is defined but never used.","'ButtonBase' is defined but never used.","'state' is assigned a value but never used.","'FormHelperText' is defined but never used.","'files' is assigned a value but never used.","'newDraft' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useForm' is defined but never used.","'setFiles' is assigned a value but never used.","'loading' is assigned a value but never used.","'data' is assigned a value but never used.","'error' is assigned a value but never used.","'getS3SignedUrlCallBack' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'handleChange' and 'selectLocalImage'. Either include them or remove the dependency array.","ArrayExpression",["273"],"'Button' is defined but never used.","'purple' is defined but never used.","'green' is defined but never used.","'useEffect' is defined but never used.","'useParams' is defined but never used.","'RouterLink' is defined but never used.","'Grid' is defined but never used.","'Paper' is defined but never used.","'Divider' is defined but never used.","'Avatar' is defined but never used.","'TextField' is defined but never used.","'context' is assigned a value but never used.","'Card' is defined but never used.","React Hook useEffect contains a call to 'setState'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.withAuther, props.crudOtion] as a second argument to the useEffect Hook.",["274"],"no-global-assign","no-unsafe-negation",{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},"Update the dependencies array to be: [quill, body, selectLocalImage, handleChange]",{"range":"279","text":"280"},"Add dependencies array: [props.withAuther, props.crudOtion]",{"range":"281","text":"282"},[4623,4636],"[quill, body, selectLocalImage, handleChange]",[959,959],", [props.withAuther, props.crudOtion]"]