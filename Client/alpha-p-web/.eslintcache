
[{"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\index.js":"1","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\ApolloProvider.js":"2","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\serviceWorker.js":"3","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\App.js":"4","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\context\\auth.js":"5","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Sign-up.js":"6","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Login.js":"7","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\AuthRoute.js":"8","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Home.js":"9","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Navbar.js":"10","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Buttons.js":"11","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\FormInput.js":"12","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\util\\hooks.js":"13","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\AnalystInfo.js":"14","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Content\\Article.js":"15","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Content\\Draft.js":"16","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Editor.js":"17","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Content\\draftsGql.js":"18","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\UI\\messages.js":"19"},{"size":520,"mtime":1613630748221,"results":"20","hashOfConfig":"21"},{"size":746,"mtime":1614966998460,"results":"22","hashOfConfig":"21"},{"size":4686,"mtime":1612258551962,"results":"23","hashOfConfig":"21"},{"size":1009,"mtime":1614967118348,"results":"24","hashOfConfig":"21"},{"size":1341,"mtime":1613483158778,"results":"25","hashOfConfig":"21"},{"size":4402,"mtime":1614761132381,"results":"26","hashOfConfig":"21"},{"size":3756,"mtime":1614950851868,"results":"27","hashOfConfig":"21"},{"size":436,"mtime":1613483158737,"results":"28","hashOfConfig":"21"},{"size":170,"mtime":1614761132361,"results":"29","hashOfConfig":"21"},{"size":8422,"mtime":1614436693755,"results":"30","hashOfConfig":"21"},{"size":1459,"mtime":1613483158754,"results":"31","hashOfConfig":"21"},{"size":500,"mtime":1613483158766,"results":"32","hashOfConfig":"21"},{"size":417,"mtime":1613483158823,"results":"33","hashOfConfig":"21"},{"size":3177,"mtime":1614761132331,"results":"34","hashOfConfig":"21"},{"size":8962,"mtime":1614938456672,"results":"35","hashOfConfig":"21"},{"size":3776,"mtime":1614971409543,"results":"36","hashOfConfig":"21"},{"size":14755,"mtime":1614950120465,"results":"37","hashOfConfig":"21"},{"size":315,"mtime":1614963800669,"results":"38","hashOfConfig":"21"},{"size":1089,"mtime":1614970062393,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"197fvus",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"55","usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"43"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"43"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\index.js",["86","87"],"\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\n\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport ApolloProvider from \"./ApolloProvider\";\r\n\r\n\r\nReactDOM.render(ApolloProvider, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n",["88","89"],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\ApolloProvider.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\serviceWorker.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\App.js",["90","91","92"],"import React, { Component } from \"react\";\r\nimport {\r\n  HashRouter,\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport { AuthProvider } from \"./context/auth\";\r\nimport \"./scss/style.scss\";\r\nimport Login from \"./views/Login\";\r\nimport SignUp from \"./views/Sign-up\";\r\nimport AuthRoute from \"./components/AuthRoute\";\r\nimport Home from \"./views/Home\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Article from \"./views/Content/Article\";\r\nimport Draft from \"./views/Content/Draft\";\r\n\r\nexport class App extends Component {\r\n  render() {\r\n    return (\r\n      <AuthProvider>\r\n        <Router>\r\n          <Navbar />\r\n          <div>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/article\" component={Article} />\r\n            <Route exact path=\"/draft\" component={Draft} />\r\n\r\n            <AuthRoute exact path=\"/Login\" component={Login} />\r\n          </div>\r\n        </Router>\r\n      </AuthProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\context\\auth.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Sign-up.js",["93","94","95"],"import React, { Component } from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport * as Yup from \"yup\";\r\nimport { FormInput, FormDevider } from \"../components/FormInput\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Button, OutlineButton } from \"../components/Buttons\";\r\nimport GoogleIcon from \"../assets/icons/1004px-Google__G__Logo.svg.png\";\r\nimport TwitterIcon from \"../assets/icons/580b57fcd9996e24bc43c53e.png\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport class SignUp extends Component {\r\n    static propTypes = {};\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"background\">\r\n          <Navbar />\r\n          <SignUpBlock />\r\n        </div>\r\n      );\r\n    }\r\n}\r\n    export default SignUp;\r\n\r\n    function SignUpBlock() {\r\n        return (\r\n          <div className=\"signUpBlock\">\r\n            <h2> Create Free Account </h2>\r\n            \r\n            {/* <p> Already have an account?\r\n            <a href=\"#\"> sign in </a> </p> */}\r\n            \r\n            \r\n            <div className=\"haveAccount\">\r\n                <p> Already have an account? \r\n              <a href=\"#\"> sign in </a> </p>\r\n\r\n              <SignUpForm />\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      export const SignUpForm = () => {\r\n        //form validation\r\n        const { register, handleSubmit, errors } = useForm({\r\n          mode: \"onSubmit\",\r\n          validationSchema: Yup.object({\r\n            FirstName: Yup.string().min(6,\"Please Enter A valid first name\") .required(\"Required\"),\r\n            LastName: Yup.string().min(4,\"Please Enter A valid last name\").required(\"Required\"),\r\n            email: Yup.string().email(\"Please Enter A Valid Email\").required(\"Required\"),\r\n            password: Yup.string().min(6, \"Password should be longer than 6 characters\").required(\"Required\"),\r\n            verifypassword: Yup.string().min(6, \"Password should be longer than 6 characters\").oneOf([Yup.ref('password'), null], 'Passwords must match').required(\"Required\"),\r\n            \r\n          }),\r\n        });\r\n      \r\n        //here we do the request once the validation is success 👍🏾\r\n        const onSubmit = ({ FirstName,LastName,email, password, verifypassword }) => {\r\n          alert(`FirstName: ${FirstName},LastName:${LastName}, Email: ${email}, password: ${password}, verifypassword: ${verifypassword}`);\r\n        };\r\n        return (\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <FormInput\r\n              id=\"FirstName\"\r\n              name=\"FirstName\"\r\n              type=\"FirstName\"\r\n              placeHolder=\"First Name\"\r\n              register={register}\r\n              errors={errors.FirstName}\r\n            />\r\n            <FormInput\r\n              id=\"LastName\"\r\n              name=\"LastName\"\r\n              type=\"LastName\"\r\n              placeHolder=\"Last Name\"\r\n              register={register}\r\n              errors={errors.LastName}\r\n            />\r\n            <FormInput\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeHolder=\"Email\"\r\n              register={register}\r\n              errors={errors.email}\r\n            />\r\n            <FormInput\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeHolder=\"Password\"\r\n              register={register}\r\n              errors={errors.password}\r\n            />\r\n            <FormInput\r\n              id=\"Verifypassword\"\r\n              name=\"Verifypassword\"\r\n              type=\"password\"\r\n              placeHolder=\"Verify password\"\r\n              register={register}\r\n              errors={errors.verifypassword}\r\n            />\r\n            <Button\r\n              \r\n              type=\"submit\"\r\n              title=\"Create Account\"\r\n              onClick={() => console.log(\"Pressed\")}\r\n            />\r\n            \r\n            <FormDevider />\r\n\r\n            <OutlineButton\r\n              color={\"#4285f4\"}\r\n              image={GoogleIcon}\r\n              onClick={() => console.log(\"Google SignIn\")}\r\n              title=\"Continue With Google\"\r\n            />\r\n            <OutlineButton\r\n              color={\"#00A2F5\"}\r\n              image={TwitterIcon}\r\n              onClick={() => console.log(\"Twitter SignIn\")}\r\n              title=\"Continue With Twitter\"\r\n            />\r\n          </form>\r\n        );\r\n      };\r\n      \r\n      ","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Login.js",["96","97","98","99","100"],"import React, { Component, useContext, useState } from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport * as Yup from \"yup\";\r\nimport { FormInput, FormDevider } from \"../components/FormInput\";\r\n// import { useForm } from \"react-hook-form\";\r\nimport { Button, OutlineButton } from \"../components/Buttons\";\r\n//imagers\r\nimport GoogleIcon from \"../assets/icons/1004px-Google__G__Logo.svg.png\";\r\nimport TwitterIcon from \"../assets/icons/580b57fcd9996e24bc43c53e.png\";\r\n//graphql\r\nimport { useMutation } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\n\r\n//auth\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { useForm } from \"../util/hooks\";\r\n\r\nconst LOGIN_USER = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      id\r\n      email\r\n      username\r\n      createdAt\r\n      token\r\n    }\r\n  }\r\n`;\r\nexport class Login extends Component {\r\n  static propTypes = {};\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"background\">\r\n        {/* <Navbar /> */}\r\n        <SignInBlock />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n\r\nfunction SignInBlock() {\r\n  return (\r\n    <div className=\"signInBlock\">\r\n      <h2>Member Sign In</h2>\r\n      <LoginForm />\r\n      <div className=\"createAccount\">\r\n        <p>Don't have account?</p>\r\n        <a href=\"#\">\r\n          <p>create account</p>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const LoginForm = (props) => {\r\n  const context = useContext(AuthContext);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { onChange, onSubmit, values } = useForm(loginUserCallback, {\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\r\n    update(_, { data: { login: userData } }) {\r\n      context.login(userData);\r\n      props.history.push(\"/\");\r\n    },\r\n    onError(err) {\r\n      setErrors(\r\n        err && err.graphQLErrors[0]\r\n          ? err.graphQLErrors[0].extensions.exception.errors\r\n          : {}\r\n      );\r\n    },\r\n    variables: values,\r\n  });\r\n\r\n  function loginUserCallback() {\r\n    loginUser();\r\n  }\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <FormInput\r\n          id=\"email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeHolder=\"email\"\r\n          value={values.email}\r\n          errors={errors.email}\r\n          onChange={onChange}\r\n        />\r\n        <FormInput\r\n          id=\"password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeHolder=\"password\"\r\n          value={values.password}\r\n          errors={errors.password}\r\n          onChange={onChange}\r\n        />\r\n        <span className=\"remember-forgetpass\">\r\n          <span className=\"rememberMe\">\r\n            <input type=\"checkbox\" />\r\n            <span>remember me?</span>\r\n          </span>\r\n          <a href=\"#\">Forget Password</a>\r\n        </span>\r\n        <Button\r\n          type=\"submit\"\r\n          title=\"Login\"\r\n          onClick={() => console.log(\"Pressed\")}\r\n        />\r\n        <FormDevider />\r\n\r\n        <OutlineButton\r\n          color={\"#4285f4\"}\r\n          image={GoogleIcon}\r\n          onClick={() => console.log(\"Google SignIn\")}\r\n          title=\"Continue With Google\"\r\n        />\r\n        <OutlineButton\r\n          color={\"#00A2F5\"}\r\n          image={TwitterIcon}\r\n          onClick={() => console.log(\"Twitter SignIn\")}\r\n          title=\"Continue With Twitter\"\r\n        />\r\n      </form>\r\n      {Object.keys(errors).length > 0 && (\r\n        <div className=\"ui error message\">\r\n          <ul className=\"list\">\r\n            {Object.values(errors).map((value) => (\r\n              <li key={value}>{value}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\AuthRoute.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Home.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Navbar.js",["101","102","103","104","105","106","107","108","109"],"import React from \"react\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport { red, white } from \"@material-ui/core/colors\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport { Link } from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    order:4,\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    fontFamily: 'sans-serif',\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"36px\",\r\n    lineHeight: \"150%\",\r\n    /* or 54px */\r\n\r\n    letterSpacing: \"2px\",\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    order: 1,\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(12),\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n  loginBtn: {\r\n    position: \"relative\",\r\n    order: 2,\r\n    borderRadius: theme.shape.borderRadius,\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.9),\r\n      color: theme.palette.getContrastText(theme.palette.common.white),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    color: theme.palette.primary,\r\n  },\r\n  subscribeBtn: {\r\n    position: \"relative\",\r\n    order: 3,\r\n    borderRadius: theme.shape.borderRadius,\r\n    color: theme.palette.secondary.dark,\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.6),\r\n    },\r\n    marginRight: theme.spacing(1),\r\n    marginLeft: 0,\r\n  },\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function PrimarySearchAppBar(props) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>\r\n        <IconButton color=\"inherit\">\r\n          <Badge color=\"secondary\">\r\n            <TwitterIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Twitter</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton color=\"inherit\">\r\n          <Badge color=\"secondary\">\r\n            <EmailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Conact with us</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>\r\n        <IconButton color=\"inherit\">\r\n          <Badge color=\"secondary\">\r\n            <TwitterIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Twitter</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton color=\"inherit\">\r\n          <Badge color=\"secondary\">\r\n            <EmailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Conact with us</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n        \r\n          <Typography className={classes.title} variant=\"h6\" noWrap >\r\n            Alpha+\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n          </div>\r\n          {/* 👇👇👇👇👇👇👇 Here a Spacer */}\r\n          <div className={classes.grow} />\r\n          <div className={classes.loginBtn}>\r\n            <Button variant=\"outlined\" color=\"inherit\" component={Link} to=\"/Login\">\r\n              Login\r\n            </Button>\r\n          </div>\r\n          <div className={classes.subscribeBtn}>\r\n            <Button variant=\"contained\" color=\"secondary\">\r\n              Subscribe\r\n            </Button>\r\n          </div>\r\n\r\n          <div className={classes.sectionDesktop}></div>\r\n          <div className={classes.sectionMobile}>\r\n              {/* <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n            {/* <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton> */}\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Buttons.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\FormInput.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\util\\hooks.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\AnalystInfo.js",["110","111","112"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Avatar,\r\n  ButtonBase,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginLeft: 0,\r\n  },\r\n  wideFollowBtn: {\r\n    [theme.breakpoints.up('md')]: {\r\n      width: theme.spacing(20),\r\n    },\r\n  },\r\n}));\r\n\r\nexport function ArticleAutherInfo(props) {\r\n  const state = useState();\r\n  const classes = useStyles();\r\n  return (\r\n    <Container className={classes.root} maxWidth=\"xs\">\r\n      <Grid\r\n        spacing={4}\r\n        container\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        <Grid item xs={2}>\r\n          <Avatar alt={props.name} src={props.img} />\r\n        </Grid>\r\n        {/* // Analyst info  */}\r\n        <Grid item xs={4} sm spacing={0}>\r\n          <Grid item xs container direction=\"column\" spacing={0}>\r\n            <Grid item xs>\r\n              <Typography gutterBottom variant=\"subtitle1\">\r\n                {props.name}\r\n              </Typography>\r\n              <Typography variant=\"subtitle2\" gutterBottom noWrap>\r\n                {props.bio}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {/* //Analyst Follow Button */}\r\n        <Grid item xs={2} sm>\r\n          <Button variant=\"outlined\" color=\"primary\">\r\n            Follow\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nArticleAutherInfo.propTypes = {};\r\n\r\nexport function ArticleAutherInfoExpanded(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Grid\r\n        spacing={4}\r\n        container\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        <Grid item xs={2}>\r\n          <Avatar alt={props.name} src={props.img} />\r\n        </Grid>\r\n        {/* // Analyst info  */}\r\n        <Grid item xs={4} sm spacing={0}>\r\n          <Grid item xs container direction=\"column\" spacing={0}>\r\n            <Grid item xs>\r\n              <Typography gutterBottom variant=\"subtitle1\">\r\n                {props.name}\r\n              </Typography>\r\n              <Typography variant=\"subtitle2\" gutterBottom noWrap>\r\n                {props.bio}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {/* //Analyst Follow Button */}\r\n        <Grid\r\n          item\r\n          xs={2}\r\n          sm\r\n          direction=\"column\"\r\n          justify=\"flex-end\"\r\n          alignItems=\"flex-end\"\r\n          container\r\n        >\r\n          <Grid item>\r\n            <Button\r\n              className={classes.wideFollowBtn}\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n            >\r\n              Follow\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item spacing={2} alignItems=\"center\" alignContent=\"center\">\r\n            <Typography gutterBottom variant=\"caption\">100 Followers</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Content\\Article.js",["113","114","115"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Divider,\r\n  ButtonBase,\r\n  Button,\r\n  Avatar,\r\n  TextField,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport ReplyIcon from \"@material-ui/icons/Reply\";\r\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport AddCommentIcon from \"@material-ui/icons/AddComment\";\r\nimport {\r\n  ArticleAutherInfo,\r\n  ArticleAutherInfoExpanded,\r\n} from \"../../components/AnalystInfo\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginLeft: 0,\r\n  },\r\n  articleLayout: {\r\n    paddingTop: theme.spacing(5),\r\n    marginRight: theme.spacing(0),\r\n    marginLeft: theme.spacing(0),\r\n    padding: theme.spacing(1),\r\n    paddingBottom: theme.spacing(4),\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      marginLeft: theme.spacing(40),\r\n      marginRight: theme.spacing(40),\r\n    },\r\n  },\r\n  analystInfoSection: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  title: {\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  body: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  likeBtn: {\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.9),\r\n    },\r\n  },\r\n  commentsLayout: {\r\n    marginTop: theme.spacing(5),\r\n  },\r\n  commentsHeader: {\r\n    padding: theme.spacing(4),\r\n    color: theme.palette.grey[400],\r\n  },\r\n  addComment: {\r\n    paddingBottom: theme.spacing(2),\r\n    paddingRight: theme.spacing(4),\r\n    \"& .MuiTextField-root\": {\r\n      width: \"60ch\",\r\n      padding: theme.spacing(4),\r\n      paddingTop: theme.spacing(1),\r\n      borderTopLeftRadius: 0,\r\n    },\r\n  },\r\n  comment: {\r\n    padding:theme.spacing(2),\r\n    \"& .MuiAvatar-root\": {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    \"& .MuiDivider-root\": {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    \"& .MuiGrid-root\":{\r\n      marginBottom: theme.spacing(2),\r\n\r\n    },\r\n    '& .commentBody':{\r\n      paddingBottom: theme.spacing(2),\r\n\r\n    }\r\n  },\r\n  commentBtn:{\r\n    paddingTop:theme.spacing(4),\r\n  }\r\n\r\n}));\r\n\r\nconst img = \"avatars/7.jpg\";\r\nconst analystInfo = {\r\n  name: \"jhon doe\",\r\n  img: img,\r\n  bio: \"Analyst\",\r\n};\r\nconst commentsDocs = [\r\n  {\r\n    name: \"Alex\",\r\n    Avatar: \"AL\",\r\n    date: \"2021-2-21\",\r\n    body: \"Great Article\",\r\n  },\r\n  {\r\n    name: \"Ziad\",\r\n    Avatar: \"ZI\",\r\n    date: \"2021-2-22\",\r\n    body: \"I dissagree , there should not be any downsides\",\r\n  },\r\n  {\r\n    name: \"Mohammed\",\r\n    Avatar: \"MO\",\r\n    date: \"2021-2-24\",\r\n    body: \"Please keep up the good work\",\r\n  },\r\n];\r\n\r\nconst Article = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"background\">\r\n      <div className={classes.articleLayout}>\r\n        <ArticleSection />\r\n        {/* Comments Section */}\r\n        <CommentsSection />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nArticle.propTypes = {};\r\n\r\nexport default Article;\r\n\r\nconst ArticleSection = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container>\r\n      <Paper elevation={2}>\r\n        <ArticleAutherInfo\r\n          img={analystInfo.img}\r\n          name={analystInfo.name}\r\n          bio={analystInfo.bio}\r\n        />\r\n        {/* Title + Body Container */}\r\n        <Container>\r\n          {/* Title  */}\r\n          <Container className={classes.title}>\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              direction=\"column\"\r\n              justify=\"space-between\"\r\n              alignItems=\"baseline\"\r\n            >\r\n              <Grid item>\r\n                <h1>First Article on alpha+</h1>\r\n              </Grid>\r\n              <Grid item container direction=\"row\" spacing={1}>\r\n                <Grid item xs>\r\n                  <Typography variant=\"caption\">\r\n                    Published 17 Feb, 2021\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <Typography variant=\"caption\">\r\n                    last updated feb 19 2021\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n          {/* Body */}\r\n          <Container className={classes.body}>\r\n            <Typography variant=\"body1\">{body}</Typography>\r\n          </Container>\r\n          <Divider variant=\"middle\" />\r\n          {/* Article Buttons */}\r\n          <Container>\r\n            <Grid container justify=\"space-evenly\" spacing={2} xs sm>\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"text\"\r\n                  color=\"primary\"\r\n                  startIcon={<ThumbUpAltOutlinedIcon />}\r\n                >\r\n                  Like the article?\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"text\"\r\n                  color=\"primary\"\r\n                  startIcon={<ShareIcon />}\r\n                >\r\n                  Share the article\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"text\"\r\n                  color=\"primary\"\r\n                  startIcon={<AddCommentIcon />}\r\n                >\r\n                  Add Comment\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        </Container>\r\n      </Paper>\r\n      <Paper elevation={2} className={classes.analystInfoSection}>\r\n        <ArticleAutherInfoExpanded\r\n          img={analystInfo.img}\r\n          name={analystInfo.name}\r\n          bio={analystInfo.bio}\r\n        />\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nArticleSection.propTypes = {};\r\n\r\nfunction CommentsSection(props) {\r\n  const classes = useStyles();\r\n  const comments = (commentsDocs) =>\r\n    commentsDocs.map((v) => (\r\n      <CreateComment\r\n        name={v.name}\r\n        body={v.body}\r\n        date={v.date}\r\n        avatar={v.Avatar}\r\n      />\r\n    ));\r\n\r\n  return (\r\n    <Container className={classes.commentsLayout}>\r\n      <Paper elevation={2}>\r\n        <Container>\r\n          <Container className={classes.commentsHeader}>\r\n            <Typography variant=\"h4\">Comments(2)</Typography>\r\n          </Container>\r\n          <Container className={classes.addComment}>\r\n            <form>\r\n              <Avatar>OP</Avatar>\r\n              <TextField\r\n                id=\"outlined-multiline-static\"\r\n                multiline\r\n                rows={4}\r\n                placeholder=\"add your comment..\"\r\n                variant=\"outlined\"\r\n              />\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                Publish\r\n              </Button>\r\n            </form>\r\n          </Container>\r\n          <Container>{comments(commentsDocs)}</Container>\r\n        </Container>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst CreateComment = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container className={classes.comment}>\r\n      <Divider />\r\n      <Grid container direction=\"row\" justify=\"space-between\">\r\n        <Grid item container xs={4} sm>\r\n          <Avatar>{props.avatar}</Avatar>\r\n          <Typography variant=\"subtitle1\">{props.name}</Typography>\r\n        </Grid>\r\n        <Typography variant=\"caption\">{props.date}</Typography>\r\n      </Grid>\r\n      <Container className='commentBody'>\r\n        <Typography variant=\"body2\">{props.body}</Typography>\r\n      </Container>\r\n      <Container className={classes.commentBtn}>\r\n        <Button startIcon={<ReplyIcon />}>Reply</Button>\r\n        <Button startIcon={<ThumbUpAltOutlinedIcon />}>Like</Button>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nCreateComment.propTypes = {};\r\n\r\nconst body =\r\n  \"Summary\\n\\nBoth Tilray and Aphria have seen 200% stock surges in just days from Reddit-style buying.\\n\\nThe 'blue wave' will help cannabis companies as federal legalization will open up new markets internally in the United States.\\n\\nRevenues and earnings for both companies are muted compared to the growth of other companies in the same sector.\\n\\nStock prices do not reflect potential growth of revenue and earnings for either of these companies.\\n\\nA couple of weeks ago, I reviewed the Tilray (TLRY) and Aphria (APHA) merger. I was neutral on the deal simply because although there would be potential cost savings, the stock price had already achieved a rational valuation based upon what could be earned. Since then, the stock has caught fire and shot up sharply. I received many messages from readers asking what I thought and if I still maintained my neutral position.\\n\\n\\n\\nYes, I will always be a ‘neutral’ on a stock that is overvalued.\\n\\n\\n\\nI felt the valuations were too rich before and now both stocks are up significantly.\\n\\n\\n\\nBut, there have been fundamental changes since that last review I did so I wanted to take another look at what has transpired.\";\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Content\\Draft.js",["116","117","118","119"],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Editor.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Content\\draftsGql.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\UI\\messages.js",["120"],{"ruleId":"121","severity":1,"message":"122","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":13},{"ruleId":"121","severity":1,"message":"125","line":7,"column":10,"nodeType":"123","messageId":"124","endLine":7,"endColumn":18},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"121","severity":1,"message":"130","line":3,"column":3,"nodeType":"123","messageId":"124","endLine":3,"endColumn":13},{"ruleId":"121","severity":1,"message":"131","line":5,"column":3,"nodeType":"123","messageId":"124","endLine":5,"endColumn":9},{"ruleId":"121","severity":1,"message":"132","line":11,"column":8,"nodeType":"123","messageId":"124","endLine":11,"endColumn":14},{"ruleId":"121","severity":1,"message":"133","line":9,"column":10,"nodeType":"123","messageId":"124","endLine":9,"endColumn":19},{"ruleId":"134","severity":1,"message":"135","line":36,"column":15,"nodeType":"136","endLine":36,"endColumn":27},{"ruleId":"137","severity":1,"message":"138","line":49,"column":24,"nodeType":"139","messageId":"140","endLine":49,"endColumn":87,"fix":"141"},{"ruleId":"121","severity":1,"message":"142","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":14},{"ruleId":"121","severity":1,"message":"143","line":3,"column":13,"nodeType":"123","messageId":"124","endLine":3,"endColumn":16},{"ruleId":"134","severity":1,"message":"135","line":51,"column":9,"nodeType":"136","endLine":51,"endColumn":21},{"ruleId":"121","severity":1,"message":"144","line":68,"column":23,"nodeType":"123","messageId":"124","endLine":68,"endColumn":30},{"ruleId":"134","severity":1,"message":"135","line":112,"column":11,"nodeType":"136","endLine":112,"endColumn":23},{"ruleId":"121","severity":1,"message":"145","line":11,"column":8,"nodeType":"123","messageId":"124","endLine":11,"endColumn":16},{"ruleId":"121","severity":1,"message":"146","line":14,"column":8,"nodeType":"123","messageId":"124","endLine":14,"endColumn":16},{"ruleId":"121","severity":1,"message":"147","line":15,"column":8,"nodeType":"123","messageId":"124","endLine":15,"endColumn":25},{"ruleId":"121","severity":1,"message":"148","line":16,"column":8,"nodeType":"123","messageId":"124","endLine":16,"endColumn":16},{"ruleId":"121","severity":1,"message":"149","line":17,"column":10,"nodeType":"123","messageId":"124","endLine":17,"endColumn":13},{"ruleId":"121","severity":1,"message":"150","line":17,"column":15,"nodeType":"123","messageId":"124","endLine":17,"endColumn":20},{"ruleId":"121","severity":1,"message":"151","line":19,"column":8,"nodeType":"123","messageId":"124","endLine":19,"endColumn":19},{"ruleId":"121","severity":1,"message":"152","line":131,"column":9,"nodeType":"123","messageId":"124","endLine":131,"endColumn":30},{"ruleId":"121","severity":1,"message":"153","line":144,"column":9,"nodeType":"123","messageId":"124","endLine":144,"endColumn":29},{"ruleId":"121","severity":1,"message":"154","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":17},{"ruleId":"121","severity":1,"message":"155","line":5,"column":3,"nodeType":"123","messageId":"124","endLine":5,"endColumn":13},{"ruleId":"121","severity":1,"message":"156","line":25,"column":9,"nodeType":"123","messageId":"124","endLine":25,"endColumn":14},{"ruleId":"121","severity":1,"message":"154","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":17},{"ruleId":"121","severity":1,"message":"155","line":9,"column":3,"nodeType":"123","messageId":"124","endLine":9,"endColumn":13},{"ruleId":"121","severity":1,"message":"157","line":13,"column":3,"nodeType":"123","messageId":"124","endLine":13,"endColumn":17},{"ruleId":"121","severity":1,"message":"158","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":26},{"ruleId":"121","severity":1,"message":"159","line":6,"column":10,"nodeType":"123","messageId":"124","endLine":6,"endColumn":14},{"ruleId":"121","severity":1,"message":"160","line":30,"column":9,"nodeType":"123","messageId":"124","endLine":30,"endColumn":16},{"ruleId":"121","severity":1,"message":"161","line":40,"column":10,"nodeType":"123","messageId":"124","endLine":40,"endColumn":15},{"ruleId":"121","severity":1,"message":"162","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":14},"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'Provider' is defined but never used.","no-native-reassign",["163"],"no-negated-in-lhs",["164"],"'HashRouter' is defined but never used.","'Switch' is defined but never used.","'SignUp' is defined but never used.","'useParams' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-whitespace-before-property","Unexpected whitespace before property required.","MemberExpression","unexpectedWhitespace",{"range":"165","text":"166"},"'Navbar' is defined but never used.","'Yup' is defined but never used.","'loading' is assigned a value but never used.","'MenuIcon' is defined but never used.","'MailIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'MoreIcon' is defined but never used.","'red' is defined but never used.","'white' is defined but never used.","'ButtonGroup' is defined but never used.","'handleProfileMenuOpen' is assigned a value but never used.","'handleMobileMenuOpen' is assigned a value but never used.","'PropTypes' is defined but never used.","'ButtonBase' is defined but never used.","'state' is assigned a value but never used.","'FormHelperText' is defined but never used.","'useEffect' is defined but never used.","'fade' is defined but never used.","'classes' is assigned a value but never used.","'files' is assigned a value but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",[1520,1522],"."]

