[{"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\index.js":"1","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\serviceWorker.js":"2","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\ApolloProvider.js":"3","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\App.js":"4","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\Theme.js":"5","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\components\\AuthRoute.js":"6","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\views\\Sign-up.js":"7","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\views\\Portfolio.js":"8","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\context\\auth.js":"9","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\views\\EndUserProfile.js":"10","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\components\\Footer.js":"11","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\views\\Content\\Article.js":"12","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\views\\Content\\MyAuthors.js":"13","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\views\\Company\\Company.js":"14","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\components\\Navbar.js":"15","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\views\\profileSetting\\ProfileSetting.js":"16","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\views\\Login.js":"17","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\views\\profileSetting\\AccountSecurty.js":"18","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\views\\Home.js":"19","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\views\\Content\\Draft.js":"20","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\storage\\index.ts":"21","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\components\\AnalystInfo.js":"22","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\graphql\\homeGql.js":"23","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\components\\UserInfo.js":"24","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\graphql\\Content\\draftsGql.js":"25","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\util\\hooks.js":"26","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\components\\UI\\messages.js":"27","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\components\\Editor.js":"28","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\components\\Company\\inputformport.js":"29","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\components\\Company\\CompanyCard.js":"30","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\components\\Content\\ContentCards.js":"31","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\components\\Content\\CommentComponents.js":"32","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\components\\Company\\edfitformport.js":"33","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\graphql\\Auth\\authGql.js":"34","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\graphql\\Company\\portfolioGql.js":"35","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\graphql\\searchGql.js":"36","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\storage\\cache.ts":"37","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\storage\\userConfig\\index.ts":"38","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\storage\\userConfig\\userConfigVar.ts":"39","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\storage\\userConfig\\saveUserConfig.ts":"40","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\storage\\userConfig\\initialUserConfig.ts":"41","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\graphql\\Content\\articleGql.js":"42","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\graphql\\Content\\commentGql.js":"43","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\graphql\\Company\\companyGql.js":"44"},{"size":526,"mtime":1619790727246,"results":"45","hashOfConfig":"46"},{"size":4813,"mtime":1616876444795,"results":"47","hashOfConfig":"46"},{"size":804,"mtime":1619790727206,"results":"48","hashOfConfig":"46"},{"size":2827,"mtime":1619790727207,"results":"49","hashOfConfig":"46"},{"size":793,"mtime":1618960547022,"results":"50","hashOfConfig":"46"},{"size":883,"mtime":1617633652587,"results":"51","hashOfConfig":"46"},{"size":7266,"mtime":1619790727265,"results":"52","hashOfConfig":"46"},{"size":10040,"mtime":1619790727264,"results":"53","hashOfConfig":"46"},{"size":1988,"mtime":1619790727244,"results":"54","hashOfConfig":"46"},{"size":13301,"mtime":1619790727260,"results":"55","hashOfConfig":"46"},{"size":3995,"mtime":1619790727232,"results":"56","hashOfConfig":"46"},{"size":11819,"mtime":1619790727251,"results":"57","hashOfConfig":"46"},{"size":3977,"mtime":1619790727258,"results":"58","hashOfConfig":"46"},{"size":8092,"mtime":1619887381850,"results":"59","hashOfConfig":"46"},{"size":14092,"mtime":1619815606745,"results":"60","hashOfConfig":"46"},{"size":12219,"mtime":1619790727283,"results":"61","hashOfConfig":"46"},{"size":5839,"mtime":1619790727263,"results":"62","hashOfConfig":"46"},{"size":27017,"mtime":1619805191549,"results":"63","hashOfConfig":"46"},{"size":9425,"mtime":1619828563402,"results":"64","hashOfConfig":"46"},{"size":8400,"mtime":1619790727257,"results":"65","hashOfConfig":"46"},{"size":45,"mtime":1619790669606,"results":"66","hashOfConfig":"46"},{"size":4388,"mtime":1619790727209,"results":"67","hashOfConfig":"46"},{"size":667,"mtime":1618444679928,"results":"68","hashOfConfig":"46"},{"size":5994,"mtime":1619790727243,"results":"69","hashOfConfig":"46"},{"size":1451,"mtime":1617633652603,"results":"70","hashOfConfig":"46"},{"size":3658,"mtime":1619790727249,"results":"71","hashOfConfig":"46"},{"size":1092,"mtime":1619790727234,"results":"72","hashOfConfig":"46"},{"size":4989,"mtime":1619790727231,"results":"73","hashOfConfig":"46"},{"size":3680,"mtime":1619790727214,"results":"74","hashOfConfig":"46"},{"size":19900,"mtime":1619790727210,"results":"75","hashOfConfig":"46"},{"size":4135,"mtime":1619790727230,"results":"76","hashOfConfig":"46"},{"size":626,"mtime":1619790727229,"results":"77","hashOfConfig":"46"},{"size":4089,"mtime":1619790727212,"results":"78","hashOfConfig":"46"},{"size":1360,"mtime":1619790668529,"results":"79","hashOfConfig":"46"},{"size":2035,"mtime":1619790669146,"results":"80","hashOfConfig":"46"},{"size":406,"mtime":1619790727245,"results":"81","hashOfConfig":"46"},{"size":1667,"mtime":1619790727247,"results":"82","hashOfConfig":"46"},{"size":253,"mtime":1619790669672,"results":"83","hashOfConfig":"46"},{"size":233,"mtime":1619790669881,"results":"84","hashOfConfig":"46"},{"size":194,"mtime":1619790669838,"results":"85","hashOfConfig":"46"},{"size":325,"mtime":1619790669751,"results":"86","hashOfConfig":"46"},{"size":2074,"mtime":1619790669320,"results":"87","hashOfConfig":"46"},{"size":436,"mtime":1617633652603,"results":"88","hashOfConfig":"46"},{"size":796,"mtime":1619790669037,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"7e1zph",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"92"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"92"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\index.js",[],["183","184"],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\serviceWorker.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\ApolloProvider.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\App.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\Theme.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\components\\AuthRoute.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\views\\Sign-up.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\views\\Portfolio.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\context\\auth.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\views\\EndUserProfile.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\components\\Footer.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\views\\Content\\Article.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\views\\Content\\MyAuthors.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\views\\Company\\Company.js",["185"],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\components\\Navbar.js",["186","187"],"import {\r\n  AppBar,\r\n  Toolbar,\r\n  makeStyles,\r\n  Button,\r\n  IconButton,\r\n  Drawer,\r\n  Link,\r\n  MenuItem,\r\n  fade,\r\n  InputBase,\r\n  Menu,\r\n  Divider,\r\n  List,\r\n  Grid,\r\n  Avatar,\r\n  ButtonBase,\r\n  Popper,\r\n  Card,\r\n  Typography,\r\n  Container,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { AccountCircle, Search, ExitToApp } from \"@material-ui/icons\";\r\nimport { useLazyQuery, useQuery } from \"@apollo/client\";\r\nimport { SEARCH_GQL } from \"../graphql/searchGql\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    backgroundColor: theme.palette.primary,\r\n\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      paddingRight: \"79px\",\r\n      paddingLeft: \"30px\",\r\n    },\r\n    flexGrow: 1,\r\n    paddingLeft: 0,\r\n  },\r\n  logo: {\r\n    width: \"180px\",\r\n    height: \"41.5px\",\r\n    marginRight: theme.spacing(5),\r\n\r\n    [theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n      width: \"135px\",\r\n      height: \"32px\",\r\n    },\r\n  },\r\n  leftMenu: {\r\n    paddingTop: theme.spacing(4),\r\n  },\r\n  menuButton: {\r\n    display: \"inline-block\",\r\n\r\n    fontFamily: \"Open Sans, sans-serif\",\r\n    fontWeight: 400,\r\n    size: theme.typography.fontSize,\r\n    marginLeft: theme.spacing(4),\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  drawerContainer: {\r\n    padding: theme.spacing(1, 6),\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"80%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginRight: theme.spacing(2),\r\n\r\n      marginLeft: theme.spacing(12),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"80%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n  rightMenu: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n\r\n    // marginRight: theme.spacing(2),\r\n    marginLeft: theme.spacing(20),\r\n    color: theme.palette.primary,\r\n  },\r\n  loginBtn: {\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.9),\r\n      color: theme.palette.getContrastText(theme.palette.common.white),\r\n    },\r\n  },\r\n  SignInTypog: {\r\n    fontSize: \"24px\",\r\n  },\r\n\r\n  avatar: {\r\n    width: \"36px\",\r\n    height: \"36px\",\r\n    marginLeft: theme.spacing(-4),\r\n  },\r\n\r\n  divider: {\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n  drawerPaperColor: {\r\n    \"& .MuiDrawer-paper\": {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: theme.palette.primary.contrastText,\r\n    },\r\n  },\r\n  reslutPop: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.primary.contrastText,\r\n    padding: theme.spacing(2),\r\n    width: \"80%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"30ch\",\r\n    },\r\n    \"& .MuiTypography-root\": {\r\n      color: theme.palette.primary.contrastText,\r\n      textDecoration: \"none\",\r\n      marginTop: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Header(props) {\r\n  const context = useContext(AuthContext);\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [anchorSe, setAnchorSe] = React.useState(null);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const isSearching = Boolean(anchorSe);\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const [fetchSearchResults, { data, loading }] = useLazyQuery(SEARCH_GQL, {\r\n    variables:\r\n      searchTerm === \"\"\r\n        ? null\r\n        : {\r\n            companyFilter: {\r\n              Comname: searchTerm,\r\n            },\r\n            filter: {\r\n              articleTitle: searchTerm,\r\n            },\r\n          },\r\n  });\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const loggingOut = () => {\r\n    handleMenuClose();\r\n    context.logout();\r\n  };\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const handleSearchTerm = (event) => {\r\n    const term = event.target.value;\r\n    setSearchTerm(term);\r\n    if (term === \"\") setAnchorSe(null);\r\n    else {\r\n      setAnchorSe(event.currentTarget);\r\n      fetchSearchResults();\r\n    }\r\n  };\r\n  const handleSearchBlur = () => {\r\n    setAnchorSe(null);\r\n  };\r\n  const handleResultClick = (event) => {\r\n    setAnchorSe(event?.currentTarget);\r\n  };\r\n  const searchResults = () => {\r\n    const companyResult = ({ name, comId, link }) => {\r\n      return (\r\n        <>\r\n          <Typography\r\n            component={RouterLink}\r\n            to={`/${link}/${comId}`}\r\n            variant=\"subtitle2\"\r\n          >\r\n            {name}\r\n          </Typography>\r\n          <Divider style={{ background: \"white\" }} />\r\n        </>\r\n      );\r\n    };\r\n    const results = () => {\r\n      return (\r\n        <Card className={classes.reslutPop}>\r\n          {loading ? (\r\n            <CircularProgress color={\"inherit\"} />\r\n          ) : (\r\n            <Container>\r\n              <Typography variant=\"h6\">Companies</Typography>\r\n              <Divider style={{ background: \"white\", marginTop: \"8px\" }} />\r\n              {data?.getCompanies.slice(0, 3).map((e) =>\r\n                companyResult({\r\n                  name: e.comname,\r\n                  comId: e.id,\r\n                  link: \"company\",\r\n                })\r\n              )}\r\n              <Typography variant=\"h6\">Articles</Typography>\r\n              <Divider style={{ background: \"white\" }} />\r\n              {data?.getArticles.slice(0, 3).map((e) =>\r\n                companyResult({\r\n                  name: e.articleTitle,\r\n                  comId: e.id,\r\n                  link: \"article\",\r\n                })\r\n              )}\r\n            </Container>\r\n          )}\r\n        </Card>\r\n      );\r\n    };\r\n    return (\r\n      <Popper\r\n        open={isSearching}\r\n        placement={\"bottom\"}\r\n        onMouseLeave={handleSearchBlur}\r\n        onClickCapture={handleSearchBlur}\r\n        anchorEl={anchorSe}\r\n      >\r\n        {results}\r\n      </Popper>\r\n    );\r\n  };\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem\r\n        onClick={handleMenuClose}\r\n        component={RouterLink}\r\n        to=\"/ProfileSetting\"\r\n      >\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          component={RouterLink}\r\n          to=\"/ProfileSetting\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>{\" \"}\r\n      <MenuItem onClick={loggingOut}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          onClick={loggingOut}\r\n        >\r\n          <ExitToApp />\r\n        </IconButton>\r\n        <p>Logout</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const leftMenu = [\r\n    {\r\n      title: \"My Authers\",\r\n      link: context.user ? `/MyAuthers/${context.user.id}/` : `/Login`,\r\n    },\r\n    {\r\n      title: \"My Portfolio\",\r\n      link: \"/Portfolio\",\r\n    },\r\n    // {\r\n    //   title: \"Sectors\",\r\n    //   dropdown: true,\r\n    //   menu: [\r\n    //     {\r\n    //       title: \"My Portfolio\",\r\n    //       link: \"/Portfolio\",\r\n    //     },\r\n    //   ],\r\n    // },\r\n  ];\r\n\r\n  // const rightMenu = [\r\n  //   {\r\n  //     title: \"Login\",\r\n  //     link: \"/Login\",\r\n  //     isLoggedIn: false,\r\n  //   },\r\n  //   {\r\n  //     title: \"logut\",\r\n  //     link: \"/\",\r\n  //     function: () => context.logout(),\r\n  //     isLoggedIn: true,\r\n  //   },\r\n  // ];\r\n\r\n  const { header, logo, menuButton, toolbar, drawerContainer } = useStyles();\r\n\r\n  const [state, setState] = useState({\r\n    mobileView: false,\r\n    drawerOpen: false,\r\n  });\r\n\r\n  const { mobileView, drawerOpen } = state;\r\n\r\n  useEffect(() => {\r\n    const setResponsiveness = () => {\r\n      return window.innerWidth < 1025\r\n        ? setState((prevState) => ({ ...prevState, mobileView: true }))\r\n        : setState((prevState) => ({ ...prevState, mobileView: false }));\r\n    };\r\n\r\n    setResponsiveness();\r\n\r\n    window.addEventListener(\"resize\", () => setResponsiveness());\r\n  }, []);\r\n  const searchBar = () => {\r\n    return (\r\n      <div className={classes.search}>\r\n        <div className={classes.searchIcon}>\r\n          <Search />\r\n        </div>\r\n        <InputBase\r\n          placeholder=\"Search…\"\r\n          classes={{\r\n            root: classes.inputRoot,\r\n            input: classes.inputInput,\r\n          }}\r\n          inputProps={{ \"aria-label\": \"search\" }}\r\n          value={searchTerm}\r\n          // onBlur={handleSearchBlur}\r\n          onChange={handleSearchTerm}\r\n        />\r\n        {searchResults()}\r\n      </div>\r\n    );\r\n  };\r\n  const displayDesktop = () => {\r\n    return (\r\n      <Toolbar className={toolbar}>\r\n        {Logo}\r\n        <div className={classes.leftMenu}>{getLeftMenu()}</div>\r\n        {/* Search Bar */}\r\n        <div>{searchBar()}</div>\r\n        {/* Righ Menu */}\r\n        <div> {getRightMenu()}</div>\r\n        {renderMenu}\r\n      </Toolbar>\r\n    );\r\n  };\r\n  const getRightMenu = () => {\r\n    return (\r\n      <div className={classes.rightMenu}>\r\n        {context.user ? (\r\n          <IconButton\r\n            edge=\"end\"\r\n            aria-label=\"account of current user\"\r\n            aria-controls={menuId}\r\n            aria-haspopup=\"true\"\r\n            onClick={handleProfileMenuOpen}\r\n            color=\"inherit\"\r\n          >\r\n            <AccountCircle />\r\n          </IconButton>\r\n        ) : (\r\n          <Button\r\n            className={classes.loginBtn}\r\n            variant=\"outlined\"\r\n            color=\"inherit\"\r\n            component={RouterLink}\r\n            to=\"/Login\"\r\n          >\r\n            Login\r\n          </Button>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n  const displayMobile = () => {\r\n    const handleDrawerOpen = () =>\r\n      setState((prevState) => ({ ...prevState, drawerOpen: true }));\r\n    const handleDrawerClose = () =>\r\n      setState((prevState) => ({ ...prevState, drawerOpen: false }));\r\n\r\n    return (\r\n      <Toolbar>\r\n        <IconButton\r\n          {...{\r\n            edge: \"start\",\r\n            color: \"inherit\",\r\n            \"aria-label\": \"menu\",\r\n            \"aria-haspopup\": \"true\",\r\n            onClick: handleDrawerOpen,\r\n          }}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n\r\n        <Drawer\r\n          className={classes.drawerPaperColor}\r\n          {...{\r\n            anchor: \"left\",\r\n            open: drawerOpen,\r\n            onClose: handleDrawerClose,\r\n          }}\r\n        >\r\n          <div className={drawerContainer}>{getDrawerChoices()}</div>\r\n        </Drawer>\r\n\r\n        {Logo}\r\n\r\n        <div>{searchBar()}</div>\r\n      </Toolbar>\r\n    );\r\n  };\r\n\r\n  const getDrawerChoices = () => {\r\n    return (\r\n      <div>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"flex-start\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item>\r\n            <Avatar className={classes.avatar} src={\"\"} />\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <IconButton\r\n              className={classes.SignInTypog}\r\n              color=\"inherit\"\r\n              component={RouterLink}\r\n              to=\"/Login\"\r\n            >\r\n              Sign in\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Divider className={classes.divider} />\r\n        {leftMenu.map((e) => {\r\n          return (\r\n            <Link\r\n              {...{\r\n                component: RouterLink,\r\n                to: e.link,\r\n                color: \"inherit\",\r\n                style: { textDecoration: \"none\" },\r\n                key: e.title,\r\n              }}\r\n            >\r\n              <MenuItem>{e.title}</MenuItem>\r\n            </Link>\r\n          );\r\n        })}\r\n        <Divider />\r\n        {context.user ? (\r\n          <List>\r\n            <MenuItem>Profile</MenuItem>\r\n\r\n            <MenuItem onClick={() => context.logout()}>Logout</MenuItem>\r\n          </List>\r\n        ) : (\r\n          <Link\r\n            {...{\r\n              component: RouterLink,\r\n              to: \"/Login\",\r\n              color: \"inherit\",\r\n              style: { textDecoration: \"none\" },\r\n              key: \"Login\",\r\n            }}\r\n          ></Link>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const Logo = (\r\n    <ButtonBase component={RouterLink} to=\"/\" disableRipple=\"true\">\r\n      <img src=\"/logo.png\" alt=\"logo\" className={logo} />\r\n    </ButtonBase>\r\n  );\r\n\r\n  const getLeftMenu = () => {\r\n    return leftMenu.map((e) => {\r\n      return (\r\n        <Button\r\n          {...{\r\n            key: e.title,\r\n            color: \"inherit\",\r\n            to: e.link,\r\n            component: RouterLink,\r\n            className: menuButton,\r\n          }}\r\n        >\r\n          {e.title}\r\n        </Button>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar className={header} position=\"static\">\r\n        {mobileView ? displayMobile() : displayDesktop()}\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\views\\profileSetting\\ProfileSetting.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\views\\Login.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\views\\profileSetting\\AccountSecurty.js",["188","189"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {\r\n    Divider,\r\n    CircularProgress,\r\n    Button,\r\n    Paper,\r\n    Grid,\r\n    // Avatar,\r\n    TextField,\r\n    Input,\r\n    InputLabel,\r\n    FormControl,\r\n    Container\r\n\r\n} from '@material-ui/core';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PictureInPictureIcon from '@material-ui/icons/PictureInPicture';\r\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { Redirect, useParams } from \"react-router\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { PROFILE_GQL } from \"../../graphql/Auth/authGql\";\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\n// const img = \"avatars/7.jpg\";\r\n// const userInfo = {\r\n//     name: \"Jhon Doe\",\r\n//     img: img,\r\n//     bio: \"Analyst\",\r\n// };\r\n\r\nconst drawerWidth = 210;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        [theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n            // marginLeft: theme.spacing(5.13),\r\n\r\n            width: '100%',\r\n        },\r\n        position: 'absolute',\r\n        width: '448px',\r\n        // height: '471px',\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        [theme.breakpoints.between(\"sm\", \"md\")]: {\r\n            width: '448px',\r\n        },\r\n    },\r\n\r\n    root: {\r\n\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    appBar: {\r\n        marginTop: theme.spacing(8),\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            marginTop: theme.spacing(8.5),\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            marginLeft: drawerWidth,\r\n        },\r\n    },\r\n\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    // necessary for content to be below app bar\r\n    //   toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        position: 'absolute',\r\n        width: drawerWidth,\r\n        marginTop: theme.spacing(8.5),\r\n        height: theme.spacing(45.2),\r\n    },\r\n\r\n\r\n    content: {\r\n        flexGrow: 1,\r\n        // padding: theme.spacing(3),\r\n        paddingTop: theme.spacing(7),\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            paddingTop: theme.spacing(8),\r\n        },\r\n    },\r\n\r\n    helpButton: {\r\n        marginLeft: drawerWidth / 6,\r\n        width: theme.spacing(14),\r\n        marginTop: theme.spacing(3.5),\r\n\r\n    },\r\n    profilePaper: {\r\n        width: '100%',\r\n        padding: theme.spacing(5),\r\n        paddingTop: theme.spacing(7),\r\n\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            paddingTop: theme.spacing(13),\r\n\r\n        },\r\n    },\r\n\r\n    avatar: {\r\n        width: theme.spacing(12),\r\n        height: theme.spacing(12),\r\n    },\r\n\r\n    NameTypog: {\r\n        fontWeight: \"bold\",\r\n        fontSize: \"20px\"\r\n    },\r\n\r\n    inputValue: {\r\n        fontSize: \"20px\",\r\n        color: \"grey\"\r\n    },\r\n\r\n    textField: {\r\n        marginRight: theme.spacing(1),\r\n        width: '35ch',\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            marginLeft: theme.spacing(15),\r\n        },\r\n    },\r\n\r\n    textFieldBio: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '35ch',\r\n\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            width: '74ch',\r\n        },\r\n    },\r\n\r\n    ReqEditBtn: {\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            marginTop: theme.spacing(5),\r\n        },\r\n    },\r\n\r\n    ChaRestBtn: {\r\n        width: theme.spacing(12),\r\n        marginLeft: theme.spacing(7),\r\n    },\r\n\r\n\r\n\r\n    CancelBtn: {\r\n        fontSize: '20px',\r\n        fontWeight: '700',\r\n        [theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n            fontSize: '14px',\r\n        },\r\n    },\r\n\r\n    ChPasswordBtn: {\r\n        fontSize: '24px',\r\n        color: 'grey',\r\n        [theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n            fontSize: '16px',\r\n        },\r\n    },\r\n\r\n    ChPasstextField: {\r\n        [theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n            width: '300px'\r\n        },\r\n\r\n        marginTop: theme.spacing(5),\r\n        width: '366px'\r\n    },\r\n\r\n    DoneBtn: {\r\n        width: '320px',\r\n        marginTop: theme.spacing(2.5),\r\n        marginBottom: theme.spacing(2.5),\r\n    },\r\n\r\n    ForgetTypog: {\r\n        color: \"grey\",\r\n        fontWeight: '500',\r\n        fontSize: '14px'\r\n    },\r\n\r\n    ResetHereBtn: {\r\n        color: \"blue\",\r\n        fontWeight: '500',\r\n        fontSize: '14px'\r\n    },\r\n\r\n    PopperPassword: {\r\n        [theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n            width: '100%',\r\n            marginLeft: \"-6px\"\r\n        },\r\n    },\r\n\r\n    textFieldChEmail: {\r\n        width: '42ch',\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            width: '48ch',\r\n        }\r\n    },\r\n\r\n    ChEmailBtn: {\r\n        width: '320px',\r\n        marginTop: theme.spacing(3.5),\r\n        // marginBottom: theme.spacing(2.5),\r\n    }\r\n}));\r\n\r\nfunction AccountSecurty(props) {\r\n    const { window } = props;\r\n    const classes = useStyles();\r\n\r\n    \r\n\r\n\r\n    const theme = useTheme();\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n    const [values, setValues] = React.useState({\r\n        NewPassword: '',\r\n        CurrentPassword: '',\r\n        VerifyPassword: '',\r\n        password: '',\r\n        showPassword: false,\r\n    });\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n    const itemsList = [\r\n        {\r\n            text: \"Profile\",\r\n            icon: <PictureInPictureIcon />,\r\n            onClick: () => history.push(\"/ProfileSetting\")\r\n        },\r\n        {\r\n            text: \"Account Securty\",\r\n            icon: <VerifiedUserIcon />,\r\n            onClick: () => history.push(\"/AccountSecurty\")\r\n        },\r\n    ];\r\n    const { history } = props;\r\n    const drawer = (\r\n        <div>\r\n            <div className={classes.toolbar} />\r\n            <Divider />\r\n            <List>\r\n                {itemsList.map((item, index) => {\r\n\r\n                    const { text, icon, onClick } = item;\r\n                    return (\r\n                        <ListItem button key={text} onClick={onClick}>\r\n                            {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    )\r\n                })}\r\n            </List>\r\n\r\n            <List>\r\n                <ListItem>\r\n                    <Button className={classes.helpButton} variant=\"outlined\">Help</Button></ListItem></List>\r\n        </div>\r\n    );\r\n\r\n    const container = window !== undefined ? () => window().document.body : undefined;\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [openChange, setOpenChange] = React.useState(false);\r\n    const handleOpenChange = () => {\r\n        setOpenChange(true);\r\n    };\r\n    const handleCloseChange = () => {\r\n        setOpenChange(false);\r\n    };\r\n    const [openReset, setOpenReset] = React.useState(false);\r\n    const handleOpenReset = () => {\r\n        setOpenReset(true);\r\n    };\r\n    const handleCloseReset = () => {\r\n        setOpenReset(false);\r\n    };\r\n\r\n\r\n    let { userId } = useParams();\r\n    console.log(userId);\r\n    const { data, error, loading } = useQuery(PROFILE_GQL, {\r\n      variables: {\r\n        id: userId,\r\n      },\r\n    //   onCompleted(data) {\r\n    //     console.log(data.getCompanies);\r\n    //   },\r\n    });\r\n    // if (error) {\r\n    //   console.log(error);\r\n    //   return <Redirect to=\"/404\" />;\r\n    // }\r\n    if (loading) return <CircularProgress />;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"absolute\" color=\"white\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        edge=\"start\"\r\n                        onClick={handleDrawerToggle}\r\n                        className={classes.menuButton}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h5\" noWrap>\r\n                        Account Securty\r\n          </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Drawer\r\n                        container={container}\r\n                        variant=\"temporary\"\r\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                        open={mobileOpen}\r\n                        onClose={handleDrawerToggle}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true, // Better open performance on mobile.\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        variant=\"permanent\"\r\n                        open\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n            <main className={classes.content}>\r\n                <div />\r\n                <Paper className={classes.profilePaper} elevation={0}>\r\n                    <Grid item xs\r\n                        container\r\n                        direction=\"column\"\r\n                        justify='flex-start'\r\n                        alignItems='center'\r\n                        spacing={7}\r\n                    >\r\n                        <Grid item\r\n                            container\r\n                            direction=\"row\"\r\n                            justify='flex-start'\r\n                            alignItems='flex-end'\r\n                            spacing={2}\r\n                        >\r\n\r\n                            <Grid item>\r\n                                <TextField\r\n                                    label=\"Email\"\r\n                                   id={userId}\r\n                                    InputProps={{\r\n                                        readOnly: true,\r\n                                    }}\r\n                                    defaultValue={data.findUser.name}\r\n                                    // defaultValue=\"\"\r\n                                    className={classes.textField}\r\n                                // helperText=\"Some important text\"\r\n\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n\r\n                                <Button\r\n                                    onClick={handleOpenChange}\r\n\r\n                                    // aria-describedby={idChange}\r\n                                    variant=\"contained\"\r\n                                    size=\"medium\"\r\n                                    color=\"primary\"\r\n                                    className={classes.ChaRestBtn} >\r\n                                    Change\r\n                                 </Button>\r\n\r\n                                <Modal\r\n                                    disablePortal\r\n                                    disableEnforceFocus\r\n                                    disableAutoFocus\r\n\r\n\r\n                                    open={openChange}\r\n                                    onClose={handleCloseChange}\r\n                                    aria-labelledby=\"simple-modal-title\"\r\n                                    aria-describedby=\"simple-modal-description\"\r\n                                >\r\n\r\n\r\n                                    <div style={modalStyle} className={classes.paper}>\r\n\r\n                                        <Grid item\r\n                                            container\r\n                                            direction=\"column\"\r\n                                            justify='flex-start'\r\n                                            alignItems='center'\r\n                                            spacing={6}\r\n                                        >\r\n\r\n                                            <Grid item\r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justify='flex-start'\r\n                                                alignItems='flex-start'\r\n                                                spacing={10}\r\n                                            >\r\n                                                <Grid item><Typography className={classes.ChPasswordBtn}>Change password</Typography></Grid>\r\n                                                <Grid item> <Button onClick={handleCloseChange}><Typography className={classes.CancelBtn}>Cancel</Typography></Button></Grid>\r\n\r\n                                            </Grid>\r\n\r\n                                            <Grid item>\r\n                                                <TextField\r\n                                                    label=\"New Email\"\r\n                                                    id=\"margin-none\"\r\n                                                    // defaultValue=\"\"\r\n                                                    className={classes.textFieldChEmail}\r\n                                                />\r\n                                            </Grid>\r\n\r\n                                            <Grid item>\r\n                                                <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={classes.ChEmailBtn} >\r\n                                                    Change\r\n                                                  </Button>\r\n                                            </Grid>\r\n\r\n                                        </Grid>\r\n                                    </div>\r\n                                </Modal>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item\r\n                            container\r\n                            direction=\"row\"\r\n                            justify='flex-start'\r\n                            alignItems='flex-end'\r\n                            spacing={2}\r\n                        >\r\n\r\n                            <Grid item>\r\n                                <TextField\r\n                                    label=\"Password\"\r\n                                    id=\"margin-none\"\r\n                                    type=\"password\"\r\n                                    defaultValue=\"11111111\"\r\n                                    InputProps={{\r\n                                        readOnly: true,\r\n                                    }}\r\n                                    className={classes.textField}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item>\r\n                                <Button\r\n\r\n                                    onClick={handleOpenReset}\r\n                                    variant=\"contained\"\r\n                                    size=\"medium\"\r\n                                    color=\"primary\"\r\n                                    className={classes.ChaRestBtn} >\r\n                                    Reset\r\n                                </Button>\r\n\r\n\r\n\r\n                                <Modal\r\n                                    disablePortal\r\n                                    disableEnforceFocus\r\n                                    disableAutoFocus\r\n\r\n\r\n                                    open={openReset}\r\n                                    onClose={handleCloseReset}\r\n                                    aria-labelledby=\"simple-modal-title\"\r\n                                    aria-describedby=\"simple-modal-description\"\r\n                                >\r\n\r\n\r\n                                    <div style={modalStyle} className={classes.paper}>\r\n\r\n                                        <Grid item\r\n                                            container\r\n                                            direction=\"column\"\r\n                                            justify='flex-start'\r\n                                            alignItems='center'\r\n                                            spacing={2}\r\n                                        >\r\n\r\n                                            <Grid item\r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justify='flex-start'\r\n                                                alignItems='flex-start'\r\n                                                spacing={10}\r\n                                            >\r\n                                                <Grid item><Typography className={classes.ChPasswordBtn}>Change password</Typography></Grid>\r\n                                                <Grid item> <Button onClick={handleCloseReset}><Typography className={classes.CancelBtn}>Cancel</Typography></Button></Grid>\r\n\r\n                                            </Grid>\r\n\r\n                                            <Grid item>\r\n                                                <FormControl >\r\n                                                    <InputLabel htmlFor=\"standard-adornment-password\">Enter current password</InputLabel>\r\n                                                    <Input\r\n                                                        className={classes.ChPasstextField}\r\n                                                        id=\"standard-adornment-password\"\r\n                                                        type={values.showPassword ? 'text' : 'password'}\r\n                                                        value={values.CurrentPassword}\r\n                                                        onChange={handleChange('CurrentPassword')}\r\n                                                        endAdornment={\r\n                                                            <InputAdornment>\r\n                                                                <IconButton\r\n                                                                    aria-label=\"toggle password visibility\"\r\n                                                                    onClick={handleClickShowPassword}\r\n                                                                    onMouseDown={handleMouseDownPassword}\r\n                                                                    edge=\"end\"\r\n                                                                >\r\n                                                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                                </IconButton>\r\n                                                            </InputAdornment>\r\n                                                        }\r\n                                                    />\r\n                                                </FormControl>\r\n                                            </Grid>\r\n\r\n                                            <Grid item>\r\n\r\n                                                <FormControl >\r\n                                                    <InputLabel htmlFor=\"standard-adornment-password\">Enter new password</InputLabel>\r\n                                                    <Input\r\n                                                        className={classes.ChPasstextField}\r\n                                                        id=\"standard-adornment-password\"\r\n                                                        type={values.showPassword ? 'text' : 'password'}\r\n                                                        value={values.NewPassword}\r\n                                                        onChange={handleChange('NewPassword')}\r\n                                                        endAdornment={\r\n                                                            <InputAdornment>\r\n                                                                <IconButton\r\n                                                                    aria-label=\"toggle password visibility\"\r\n                                                                    onClick={handleClickShowPassword}\r\n                                                                    onMouseDown={handleMouseDownPassword}\r\n                                                                    edge=\"end\"\r\n                                                                >\r\n                                                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                                </IconButton>\r\n                                                            </InputAdornment>\r\n                                                        }\r\n                                                    />\r\n                                                </FormControl>\r\n                                            </Grid>\r\n\r\n                                            <Grid item>\r\n\r\n                                                <FormControl >\r\n                                                    <InputLabel htmlFor=\"standard-adornment-password\"> Verify password</InputLabel>\r\n                                                    <Input\r\n                                                        className={classes.ChPasstextField}\r\n                                                        id=\"standard-adornment-password\"\r\n                                                        type={values.showPassword ? 'text' : 'password'}\r\n                                                        value={values.VerifyPassword}\r\n                                                        onChange={handleChange('VerifyPassword')}\r\n                                                        endAdornment={\r\n                                                            <InputAdornment>\r\n                                                                <IconButton\r\n                                                                    aria-label=\"toggle password visibility\"\r\n                                                                    onClick={handleClickShowPassword}\r\n                                                                    onMouseDown={handleMouseDownPassword}\r\n                                                                    edge=\"end\"\r\n                                                                >\r\n                                                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                                </IconButton>\r\n                                                            </InputAdornment>\r\n                                                        }\r\n                                                    />\r\n                                                </FormControl>\r\n\r\n                                            </Grid>\r\n\r\n                                            <Grid item>\r\n                                                <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={classes.DoneBtn} >\r\n                                                    Done\r\n                                                  </Button>\r\n\r\n                                            </Grid>\r\n\r\n                                            <Container>  <Divider variant=\"middle\" /> </Container>\r\n\r\n                                            <Grid item\r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justify='center'\r\n                                                alignItems='center'\r\n                                                spacing={0}\r\n                                            >\r\n                                                <Grid item>    <Typography className={classes.ForgetTypog}>Forget Password?</Typography></Grid>\r\n                                                <Grid item> <Button className={classes.ResetHereBtn}>Reset here</Button></Grid>\r\n\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </div>\r\n                                </Modal>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nAccountSecurty.propTypes = {\r\n\r\n    window: PropTypes.func,\r\n};\r\nexport default AccountSecurty","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\views\\Home.js",["190"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Link as RouterLink, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  CompanyCardLine,\r\n  MiniCompanyCardTable,\r\n} from \"../components/Company/CompanyCard\";\r\nimport {\r\n  // ContentCard,\r\n  ContentCardPaper,\r\n} from \"../components/Content/ContentCards\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { HOMEPAGE_GQL } from \"../graphql/homeGql\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  rootCom: {\r\n    // width: \"100%\",\r\n    paddingTop: theme.spacing(2),\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1),\r\n      marginRight: theme.spacing(3),\r\n      marginLeft: theme.spacing(3),\r\n    },\r\n  },\r\n  cardStyle: {\r\n    width: \"100%\",\r\n    paddingBottom: theme.spacing(2),\r\n\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      // width: \"660px\",\r\n      paddingRight: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2),\r\n    },\r\n  },\r\n  cardBtn: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(0.5),\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      // marginRight: theme.spacing(1),\r\n      marginLeft: theme.spacing(4),\r\n      display: \"inline-flex\",\r\n    },\r\n  },\r\n  companyLine: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    flexWrap: \"no-wrap\",\r\n    overflowX: \"scroll\",\r\n    overflowY: \"hidden\",\r\n    // whiteSpace: 'nowrap',\r\n    padding: theme.spacing(0),\r\n    \"-webkit-overflow-scrolling\": \"touch\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  porto: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n\r\n    marginBottom: theme.spacing(8),\r\n    \"& .MuiGrid-container\": {\r\n      alignItems: \"center\",\r\n    },\r\n  },\r\n\r\n  CardPaper: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nfunction Home() {\r\n  const classes = useStyles();\r\n  const [mobileView, setMobileView] = useState(false);\r\n  useEffect(() => {\r\n    const setResponsiveness = () => {\r\n      return window.innerWidth < 1025\r\n        ? setMobileView(true)\r\n        : setMobileView(false);\r\n    };\r\n    setResponsiveness();\r\n\r\n    window.addEventListener(\"resize\", () => setResponsiveness());\r\n  }, []);\r\n  const { data, error, loading } = useQuery(HOMEPAGE_GQL);\r\n  if (loading) return (\r\n    <Grid container direction='column' spacing='2' className={classes.rootCom} >\r\n      <Grid item>\r\n        <Skeleton\r\n          variant=\"rect\"\r\n          animation='wave'\r\n          width=\"100%\"\r\n          height={516}\r\n        /></Grid>\r\n\r\n      <Grid item\r\n        container\r\n        direction='row'\r\n        justify=\"space-between\"\r\n        spacing={mobileView ? 0 : 1}>\r\n        <Grid item xs={12} md={6}>\r\n          <Skeleton\r\n            variant=\"rect\"\r\n            animation='wave'\r\n            width=\"100%\"\r\n            height={340}\r\n          /></Grid>\r\n\r\n        <Grid item xs={12} md={6}>\r\n          <Skeleton\r\n            variant=\"rect\"\r\n            animation='wave'\r\n            width=\"100%\"\r\n            height={340}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n      <Skeleton\r\n            variant=\"rect\"\r\n            animation='wave'\r\n            width=\"100%\"\r\n            height={340}\r\n          />\r\n\r\n      </Grid>\r\n\r\n\r\n    </Grid>);\r\n  if (error) return <Redirect to=\"/404\" />;\r\n\r\n  return (\r\n    <div className={classes.rootCom}>\r\n      {/* Compnany line + 2 Content cards  */}\r\n\r\n      <Paper>\r\n        <Grid container direction=\"column\">\r\n          {/* Company Line */}\r\n\r\n          <CompanyCardLine data={data.getCompanies} />\r\n          <Grid container direction=\"row\" xs justify=\"space-between\">\r\n            <Grid item sm xs md={5}>\r\n              {/* Trending Card */}\r\n              <HomeCard\r\n                cardTitle=\"Trending Analysis\"\r\n                dataLimit={5}\r\n                data={data.getArticles}\r\n                btnText=\"More\"\r\n                auther\r\n              />\r\n            </Grid>\r\n\r\n            {/* News */}\r\n            <Grid item md={5}>\r\n              {/* Trending Card */}\r\n              <HomeCard\r\n                cardTitle=\"News\"\r\n                dataLimit={4}\r\n                data={contentdummyData}\r\n                btnText=\"More\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n\r\n      {/* Editors Picks + Latest Articles */}\r\n\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        spacing={mobileView ? 0 : 1}\r\n      >\r\n        <Grid item xs={12} md={6}>\r\n          <Paper className={classes.CardPaper}>\r\n            <HomeCard\r\n              dataLimit={3}\r\n              cardTitle=\"Editors Picks\"\r\n              data={data.getArticles}\r\n              btnText=\"Explore More\"\r\n              auther\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Paper className={classes.CardPaper}>\r\n            <HomeCard\r\n              dataLimit={3}\r\n              cardTitle=\"Latest Articles\"\r\n              data={data.getArticles}\r\n              btnText=\"Explore More\"\r\n              auther\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n      {/* Portfolio : (Compnay + Articles) */}\r\n      <Paper className={classes.porto}>\r\n        <div>\r\n          <Typography variant=\"h4\" align=\"center\">\r\n            My Portfolio\r\n          </Typography>\r\n        </div>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-around\"\r\n          alignContent=\"center\"\r\n        >\r\n          {/* Company */}\r\n          <Grid item xs lg={5}>\r\n            <MiniCompanyCardTable data={data.getCompanies} limit={4} />\r\n          </Grid>\r\n          {/* Articles */}\r\n          <Grid item xs lg={5}>\r\n            <ContentCardPaper data={data.getArticles} limit={3} auther />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      {/* About Alpha+ ? */}\r\n      <Container></Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function HomeCard(props) {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = useState({\r\n    mobileView: false,\r\n  });\r\n\r\n  const { mobileView } = state;\r\n\r\n  useEffect(() => {\r\n    const setResponsiveness = () => {\r\n      return window.innerWidth < 900\r\n        ? setState((prevState) => ({ ...prevState, mobileView: true }))\r\n        : setState((prevState) => ({ ...prevState, mobileView: false }));\r\n    };\r\n\r\n    setResponsiveness();\r\n\r\n    window.addEventListener(\"resize\", () => setResponsiveness());\r\n  }, []);\r\n  const cardButton = () =>\r\n    mobileView ? (\r\n      <Button\r\n        className={classes.cardBtn}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        component={RouterLink}\r\n        to=\"/\"\r\n      >\r\n        {props.btnText}\r\n      </Button>\r\n    ) : (\r\n      <Button\r\n        className={classes.cardBtn}\r\n        color=\"primary\"\r\n        size=\"medium\"\r\n        component={RouterLink}\r\n        to=\"/\"\r\n      >\r\n        {`${props.btnText} >>`}\r\n      </Button>\r\n    );\r\n\r\n  return (\r\n    <div className={classes.cardStyle}>\r\n      {/* Trending Card */}\r\n      <ContentCardPaper\r\n        limit={props.dataLimit}\r\n        title={props.cardTitle}\r\n        data={props.data}\r\n        auther={props.auther}\r\n      />\r\n      {cardButton()}\r\n    </div>\r\n  );\r\n}\r\nHome.defaultProps = {\r\n  auther: false,\r\n};\r\nHome.propTypes = {\r\n  cardTitle: PropTypes.string,\r\n  dataLimit: PropTypes.number,\r\n  data: PropTypes.array,\r\n  btnText: PropTypes.string,\r\n  btnRoute: PropTypes.string,\r\n  auther: PropTypes,\r\n};\r\n\r\n// const companydummyData = [\r\n//   {Symbol: \"AAPL\", price: 293, changePrice: \"4.2(-8%)\" },\r\n//   {Symbol: \"GOOG\", price: 351, changePrice: \"4.2(+8%)\" },\r\n//   {Symbol: \"AMZN\", price: 120, changePrice: \"4.2(-8%)\" },\r\n//   {Symbol: \"EBSY\", price: 963, changePrice: \"4.2(-8%)\" },\r\n//   {Symbol: \"MOZA\", price: 56, changePrice: \"4.2(+3%)\" },\r\n//   {Symbol: \"NANI\", price: 123, changePrice: \"4.2(-8%)\" },\r\n//   {Symbol: \"AAPL\", price: 293, changePrice: \"4.2(-8%)\" },\r\n//   {Symbol: \"GOOG\", price: 351, changePrice: \"4.2(+9%)\" },\r\n//   {Symbol: \"AMZN\", price: 120, changePrice: \"4.2(-8%)\" },\r\n//   {Symbol: \"EBSY\", price: 963, changePrice: \"4.2(-8%)\" },\r\n//   {Symbol: \"MOZA\", price: 56, changePrice: \"4.2(-8%)\" },\r\n//   {Symbol: \"NANI\", price: 123, changePrice: \"4.2(-8%)\" },\r\n// ];\r\nconst contentdummyData = [\r\n  {\r\n    name: \"jhon Doe\",\r\n    img: \"Jh\",\r\n    title: \"This a test dummy title\",\r\n    bio: \"simpleBio\",\r\n  },\r\n  {\r\n    name: \"Ziad Fnan\",\r\n    img: \"Zi\",\r\n    title: \"Don't Miss This intersting analyst\",\r\n    bio: \"simpleBio\",\r\n  },\r\n  {\r\n    name: \"Abo Motlaq\",\r\n    img: \"AH\",\r\n    title: \"I only love apple products\",\r\n    bio: \"simpleBio\",\r\n  },\r\n  {\r\n    name: \"Aziz Amir\",\r\n    img: \"AA\",\r\n    title: \"Play it cool with your stocks\",\r\n    bio: \"simpleBio\",\r\n  },\r\n  {\r\n    name: \"Saleh Mogren\",\r\n    img: \"SM\",\r\n    title: \"How to write dummy data like a pro\",\r\n    bio: \"simpleBio\",\r\n  },\r\n];\r\n\r\nexport default Home;\r\n","C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\views\\Content\\Draft.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\storage\\index.ts",[],["191","192"],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\components\\AnalystInfo.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\graphql\\homeGql.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\components\\UserInfo.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\graphql\\Content\\draftsGql.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\util\\hooks.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\components\\UI\\messages.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\components\\Editor.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\components\\Company\\inputformport.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\components\\Company\\CompanyCard.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\components\\Content\\ContentCards.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\components\\Content\\CommentComponents.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\components\\Company\\edfitformport.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\graphql\\Auth\\authGql.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\graphql\\Company\\portfolioGql.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\graphql\\searchGql.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\storage\\cache.ts",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\storage\\userConfig\\index.ts",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\storage\\userConfig\\userConfigVar.ts",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\storage\\userConfig\\saveUserConfig.ts",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\storage\\userConfig\\initialUserConfig.ts",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\graphql\\Content\\articleGql.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\graphql\\Content\\commentGql.js",[],"C:\\Users\\ziads\\Desktop\\alphaplus\\client\\alpha-p-web\\src\\graphql\\Company\\companyGql.js",[],{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","severity":1,"message":"198","line":3,"column":10,"nodeType":"199","messageId":"200","endLine":3,"endColumn":26},{"ruleId":"197","severity":1,"message":"201","line":29,"column":24,"nodeType":"199","messageId":"200","endLine":29,"endColumn":32},{"ruleId":"197","severity":1,"message":"202","line":204,"column":9,"nodeType":"199","messageId":"200","endLine":204,"endColumn":26},{"ruleId":"197","severity":1,"message":"203","line":36,"column":10,"nodeType":"199","messageId":"200","endLine":36,"endColumn":18},{"ruleId":"197","severity":1,"message":"204","line":340,"column":19,"nodeType":"199","messageId":"200","endLine":340,"endColumn":24},{"ruleId":"197","severity":1,"message":"198","line":9,"column":3,"nodeType":"199","messageId":"200","endLine":9,"endColumn":19},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],"no-unused-vars","'CircularProgress' is defined but never used.","Identifier","unusedVar","'useQuery' is defined but never used.","'handleResultClick' is assigned a value but never used.","'Redirect' is defined but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]