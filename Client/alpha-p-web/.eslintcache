[{"/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/index.js":"1","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/ApolloProvider.js":"2","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/serviceWorker.js":"3","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/App.js":"4","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/Theme.js":"5","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/context/auth.js":"6","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/views/Login.js":"7","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/views/Sign-up.js":"8","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/views/Home.js":"9","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/views/EndUserProfile.js":"10","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/views/Portfolio.js":"11","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/components/Navbar.js":"12","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/components/Footer.js":"13","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/views/Content/Article.js":"14","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/components/AuthRoute.js":"15","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/views/Content/Draft.js":"16","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/views/Content/MyAuthors.js":"17","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/views/Company/Company.js":"18","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/views/profileSetting/ProfileSetting.js":"19","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/views/profileSetting/AccountSecurty.js":"20","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/storage/index.ts":"21","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/components/UserInfo.js":"22","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/util/hooks.js":"23","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/components/UI/messages.js":"24","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/components/Content/CommentComponents.js":"25","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/components/Content/ContentCards.js":"26","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/components/Company/CompanyCard.js":"27","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/graphql/homeGql.js":"28","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/graphql/Auth/authGql.js":"29","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/storage/cache.ts":"30","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/graphql/Content/articleGql.js":"31","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/graphql/Company/companyGql.js":"32","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/storage/userConfig/index.ts":"33","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/storage/userConfig/userConfigVar.ts":"34","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/storage/userConfig/saveUserConfig.ts":"35","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/storage/userConfig/initialUserConfig.ts":"36","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/graphql/Company/portfolioGql.js":"37","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/graphql/Content/draftsGql.js":"38","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/graphql/Content/commentGql.js":"39","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/components/AnalystInfo.js":"40","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/components/Editor.js":"41","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/components/Company/edfitformport.js":"42","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/components/Company/inputformport.js":"43","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/views/404.js":"44"},{"size":509,"mtime":1619663078367,"results":"45","hashOfConfig":"46"},{"size":733,"mtime":1619663078357,"results":"47","hashOfConfig":"46"},{"size":4686,"mtime":1619663078368,"results":"48","hashOfConfig":"46"},{"size":2845,"mtime":1619666297057,"results":"49","hashOfConfig":"46"},{"size":797,"mtime":1619731297705,"results":"50","hashOfConfig":"46"},{"size":1712,"mtime":1619663078365,"results":"51","hashOfConfig":"46"},{"size":5639,"mtime":1619663078373,"results":"52","hashOfConfig":"46"},{"size":7002,"mtime":1619663078374,"results":"53","hashOfConfig":"46"},{"size":7684,"mtime":1619663078373,"results":"54","hashOfConfig":"46"},{"size":12542,"mtime":1619663078372,"results":"55","hashOfConfig":"46"},{"size":9358,"mtime":1619663078373,"results":"56","hashOfConfig":"46"},{"size":10395,"mtime":1619663078364,"results":"57","hashOfConfig":"46"},{"size":3847,"mtime":1619663078363,"results":"58","hashOfConfig":"46"},{"size":11412,"mtime":1619663078372,"results":"59","hashOfConfig":"46"},{"size":844,"mtime":1619663078361,"results":"60","hashOfConfig":"46"},{"size":8093,"mtime":1619663078372,"results":"61","hashOfConfig":"46"},{"size":3862,"mtime":1619663078372,"results":"62","hashOfConfig":"46"},{"size":7246,"mtime":1619663078371,"results":"63","hashOfConfig":"46"},{"size":11840,"mtime":1619663078374,"results":"64","hashOfConfig":"46"},{"size":25773,"mtime":1619663078374,"results":"65","hashOfConfig":"46"},{"size":44,"mtime":1619663078369,"results":"66","hashOfConfig":"46"},{"size":5720,"mtime":1619663078364,"results":"67","hashOfConfig":"46"},{"size":3479,"mtime":1619663078371,"results":"68","hashOfConfig":"46"},{"size":1047,"mtime":1619663078364,"results":"69","hashOfConfig":"46"},{"size":601,"mtime":1619663078362,"results":"70","hashOfConfig":"46"},{"size":4009,"mtime":1619663078363,"results":"71","hashOfConfig":"46"},{"size":18859,"mtime":1619663078362,"results":"72","hashOfConfig":"46"},{"size":631,"mtime":1619663078367,"results":"73","hashOfConfig":"46"},{"size":1285,"mtime":1619663078365,"results":"74","hashOfConfig":"46"},{"size":1611,"mtime":1619663078369,"results":"75","hashOfConfig":"46"},{"size":1960,"mtime":1619663078366,"results":"76","hashOfConfig":"46"},{"size":747,"mtime":1619663078365,"results":"77","hashOfConfig":"46"},{"size":249,"mtime":1619663078370,"results":"78","hashOfConfig":"46"},{"size":227,"mtime":1619663078370,"results":"79","hashOfConfig":"46"},{"size":186,"mtime":1619663078370,"results":"80","hashOfConfig":"46"},{"size":309,"mtime":1619663078370,"results":"81","hashOfConfig":"46"},{"size":1915,"mtime":1619663078366,"results":"82","hashOfConfig":"46"},{"size":1375,"mtime":1619663078366,"results":"83","hashOfConfig":"46"},{"size":412,"mtime":1619663078366,"results":"84","hashOfConfig":"46"},{"size":4239,"mtime":1619663078360,"results":"85","hashOfConfig":"46"},{"size":4806,"mtime":1619663078363,"results":"86","hashOfConfig":"46"},{"size":3928,"mtime":1619663078362,"results":"87","hashOfConfig":"46"},{"size":3136,"mtime":1619663078362,"results":"88","hashOfConfig":"46"},{"size":2316,"mtime":1619731130551,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"rp3szb",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"92"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"92"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"92"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"92"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"92"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"92"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"92"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/index.js",[],["195","196"],"/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/ApolloProvider.js",[],"/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/serviceWorker.js",[],"/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/App.js",[],"/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/Theme.js",[],"/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/context/auth.js",[],"/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/views/Login.js",["197","198","199"],"import React, { useContext, useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n// //imagers\nimport GoogleIcon from \"../assets/icons/1004px-Google__G__Logo.svg.png\";\nimport TwitterIcon from \"../assets/icons/580b57fcd9996e24bc43c53e.png\";\n//graphql\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../graphql/Auth/authGql\";\n//auth\nimport { AuthContext } from \"../context/auth\";\nimport { useForm } from \"../util/hooks\";\nimport { CustomizedSnackbars } from \"../components/UI/messages\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://google.com/\">\n        Alpha+ best website ever!\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  GTsubmit: {\n    margin: theme.spacing(3, 0, 0),\n  },\n}));\nexport default function SignIn(props) {\n  const classes = useStyles();\n  const [success, setSuccess] = useState(false);\n  const context = useContext(AuthContext);\n  const [errors, setErrors] = useState({});\n\n  const { onChange, onSubmit, values } = useForm(loginUserCallback, {\n    email: \"\",\n    password: \"\",\n  });\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\n    update(_, { data: { login: userData } }) {\n      context.login(userData);\n      // setSuccess(true);\n      props.history.push(\"/\");\n    },\n    onError(err) {\n      setErrors(\n        err && err.graphQLErrors[0]\n          ? err.graphQLErrors[0].extensions.exception.errors\n          : {}\n      );\n    },\n    variables: values,\n  });\n\n  function loginUserCallback() {\n    loginUser();\n  }\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} onSubmit={onSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            value={values.email}\n            onChange={onChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={values.password}\n            onChange={onChange}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          {loading ? (\n            <CircularProgress />\n          ) : (\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n          )}\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"/Signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n          <Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.GTsubmit}\n            >\n              Continue with google\n            </Button>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.GTsubmit}\n            >\n              Continue with twitter\n            </Button>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n      {success && (\n        <div>\n          <CustomizedSnackbars color=\"success\" message=\"Welcome Back\" />;\n        </div>\n      )}\n      {Object.keys(errors).length > 0 && (\n        <div>\n          <ul>\n            {Object.values(errors).map((value) => (\n              <CustomizedSnackbars color=\"error\" message={value} />\n            ))}\n          </ul>\n        </div>\n      )}\n    </Container>\n  );\n}\n","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/views/Sign-up.js",["200"],"import React, { useContext, useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { CustomizedSnackbars } from \"../components/UI/messages\";\n\n//graphql\nimport { useMutation } from \"@apollo/client\";\nimport { SIGNUP_USER } from \"../graphql/Auth/authGql\";\n//auth\nimport { AuthContext } from \"../context/auth\";\nimport { useForm } from \"../util/hooks\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://google.com/\">\n        Alpha+\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp(props) {\n  const classes = useStyles();\n  const [success, setSuccess] = useState(false);\n  const context = useContext(AuthContext);\n  const [errors, setErrors] = useState({});\n\n  const { onChange, onSubmit, values } = useForm(signUpUserCallback, {\n    firstName: \"\",\n    lasttName: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPasswrod: \"\",\n  });\n\n  const [signUpUser, { loading }] = useMutation(SIGNUP_USER, {\n    update(_, { data: { register: userData } }) {\n      context.login(userData);\n      props.history.push(\"/\");\n    },\n    onError(err) {\n      setErrors(\n        err && err.graphQLErrors[0]\n          ? err.graphQLErrors[0].extensions.exception.errors\n          : {}\n      );\n    },\n    variables: {\n      registerInput: {\n        name: values.firstName.concat(\" \", values.lasttName),\n        username: values.username,\n        email: values.email,\n        password: values.password,\n        confirmPassword: values.confirmPasswrod,\n      },\n    },\n  });\n\n  function signUpUserCallback() {\n    signUpUser();\n  }\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Create Free Account\n        </Typography>\n        <form className={classes.form} onSubmit={onSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                onChange={onChange}\n                value={values.firstName}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"lname\"\n                name=\"lasttName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                autoFocus\n                onChange={onChange}\n                value={values.lasttName}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                name=\"username\"\n                autoComplete=\"username\"\n                onChange={onChange}\n                value={values.username}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                onChange={onChange}\n                value={values.email}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                onChange={onChange}\n                value={values.password}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"confirmPasswrod\"\n                label=\"Confrim Password\"\n                type=\"password\"\n                id=\"confirmPasswrod\"\n                onChange={onChange}\n                value={values.confirmPasswrod}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n              />\n            </Grid>\n          </Grid>\n          {loading ? (\n            <CircularProgress />\n          ) : (\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign Up\n            </Button>\n          )}\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/Login\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n      {success && (\n        <div>\n          <CustomizedSnackbars color=\"success\" message=\"Draft is created\" />;\n        </div>\n      )}\n      {Object.keys(errors).length > 0 && (\n        <div>\n          <ul>\n            {Object.values(errors).map((value) => (\n              <CustomizedSnackbars color=\"error\" message={value} />\n            ))}\n          </ul>\n        </div>\n      )}\n    </Container>\n  );\n}\n","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/views/Home.js",["201","202"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n  Button,\n  CircularProgress,\n  Container,\n  Grid,\n  Paper,\n} from \"@material-ui/core\";\n\nimport { Link as RouterLink, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  CompanyCardLine,\n  MiniCompanyCardTable,\n} from \"../components/Company/CompanyCard\";\nimport {\n  ContentCard,\n  ContentCardPaper,\n} from \"../components/Content/ContentCards\";\nimport { useQuery } from \"@apollo/client\";\nimport { HOMEPAGE_GQL } from \"../graphql/homeGql\";\n\nconst useStyles = makeStyles((theme) => ({\n  rootCom: {\n    // width: \"100%\",\n    paddingTop: theme.spacing(2),\n    [theme.breakpoints.up(\"lg\")]: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n      marginRight: theme.spacing(3),\n      marginLeft: theme.spacing(3),\n    },\n  },\n  cardStyle: {\n    width: \"100%\",\n    paddingBottom: theme.spacing(2),\n\n    [theme.breakpoints.up(\"lg\")]: {\n      // width: \"660px\",\n      paddingRight: theme.spacing(2),\n      paddingBottom: theme.spacing(2),\n    },\n  },\n  cardBtn: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(0.5),\n    [theme.breakpoints.up(\"lg\")]: {\n      // marginRight: theme.spacing(1),\n      marginLeft: theme.spacing(4),\n      display: \"inline-flex\",\n    },\n  },\n  companyLine: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    flexWrap: \"no-wrap\",\n    overflowX: \"scroll\",\n    overflowY: \"hidden\",\n    // whiteSpace: 'nowrap',\n    padding: theme.spacing(0),\n    \"-webkit-overflow-scrolling\": \"touch\",\n    \"&::-webkit-scrollbar\": {\n      display: \"none\",\n    },\n  },\n  porto: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n\n    marginBottom: theme.spacing(8),\n    \"& .MuiGrid-container\": {\n      alignItems: \"center\",\n    },\n  },\n\n  CardPaper: {\n    width: '100%',\n  }\n}));\n\nfunction Home() {\n  const classes = useStyles();\n  const { data, error, loading } = useQuery(HOMEPAGE_GQL);\n  if (loading) return <CircularProgress />;\n  if (error) return <Redirect to=\"/404\" />;\n\n  return (\n    <div className={classes.rootCom}>\n      {/* Compnany line + 2 Content cards  */}\n\n      <Paper>\n        <Grid container direction=\"column\">\n          {/* Company Line */}\n\n          <CompanyCardLine data={data.getCompanies} />\n          <Grid container direction=\"row\" xs justify=\"space-between\">\n            <Grid item sm xs md={5}>\n              {/* Trending Card */}\n              <HomeCard\n                cardTitle=\"Trending Analysis\"\n                dataLimit={5}\n                data={data.getArticles}\n                btnText=\"More\"\n                auther\n              />\n            </Grid>\n\n            {/* News */}\n            <Grid item md={5}>\n              {/* Trending Card */}\n              <HomeCard\n                cardTitle=\"News\"\n                dataLimit={4}\n                data={contentdummyData}\n                btnText=\"More\"\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      {/* Editors Picks + Latest Articles */}\n\n      <Grid container direction=\"row\" justify=\"space-between\" spacing='1'>\n        <Grid item xs={12} md={6} >\n          <Paper className={classes.CardPaper}>\n            <HomeCard\n              dataLimit={3}\n              cardTitle=\"Editors Picks\"\n              data={data.getArticles}\n              btnText=\"Explore More\"\n              auther\n            />\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Paper className={classes.CardPaper}>\n            <HomeCard\n              dataLimit={3}\n              cardTitle=\"Latest Articles\"\n              data={data.getArticles}\n              btnText=\"Explore More\"\n              auther\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n      {/* Portfolio : (Compnay + Articles) */}\n      <Paper className={classes.porto}>\n        <div>\n          <Typography variant=\"h4\" align=\"center\">\n            My Portfolio\n          </Typography>\n        </div>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"space-around\"\n          alignContent=\"center\"\n        >\n          {/* Company */}\n          <Grid item xs lg={5}>\n            <MiniCompanyCardTable data={data.getCompanies} limit={4} />\n          </Grid>\n          {/* Articles */}\n          <Grid item xs lg={5}>\n            <ContentCardPaper data={data.getArticles} limit={3} auther />\n          </Grid>\n        </Grid>\n      </Paper>\n      {/* About Alpha+ ? */}\n      <Container></Container>\n    </div>\n  );\n}\n\nexport function HomeCard(props) {\n  const classes = useStyles();\n\n  const [state, setState] = useState({\n    mobileView: false,\n  });\n\n  const { mobileView } = state;\n\n  useEffect(() => {\n    const setResponsiveness = () => {\n      return window.innerWidth < 900\n        ? setState((prevState) => ({ ...prevState, mobileView: true }))\n        : setState((prevState) => ({ ...prevState, mobileView: false }));\n    };\n\n    setResponsiveness();\n\n    window.addEventListener(\"resize\", () => setResponsiveness());\n  }, []);\n  const cardButton = () =>\n    mobileView ? (\n      <Button\n        className={classes.cardBtn}\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        component={RouterLink}\n        to=\"/\"\n      >\n        {props.btnText}\n      </Button>\n    ) : (\n      <Button\n        className={classes.cardBtn}\n        color=\"primary\"\n        size=\"medium\"\n        component={RouterLink}\n        to=\"/\"\n      >\n        {`${props.btnText} >>`}\n      </Button>\n    );\n\n  return (\n    <div className={classes.cardStyle}>\n      {/* Trending Card */}\n      <ContentCardPaper\n        limit={props.dataLimit}\n        title={props.cardTitle}\n        data={props.data}\n        auther={props.auther}\n      />\n      {cardButton()}\n    </div>\n  );\n}\nHome.defaultProps = {\n  auther: false,\n};\nHome.propTypes = {\n  cardTitle: PropTypes.string,\n  dataLimit: PropTypes.number,\n  data: PropTypes.array,\n  btnText: PropTypes.string,\n  btnRoute: PropTypes.string,\n  auther: PropTypes,\n};\n\nconst companydummyData = [\n  { Symbol: \"AAPL\", price: 293, changePrice: \"4.2(-8%)\" },\n  { Symbol: \"GOOG\", price: 351, changePrice: \"4.2(+8%)\" },\n  { Symbol: \"AMZN\", price: 120, changePrice: \"4.2(-8%)\" },\n  { Symbol: \"EBSY\", price: 963, changePrice: \"4.2(-8%)\" },\n  { Symbol: \"MOZA\", price: 56, changePrice: \"4.2(+3%)\" },\n  { Symbol: \"NANI\", price: 123, changePrice: \"4.2(-8%)\" },\n  { Symbol: \"AAPL\", price: 293, changePrice: \"4.2(-8%)\" },\n  { Symbol: \"GOOG\", price: 351, changePrice: \"4.2(+9%)\" },\n  { Symbol: \"AMZN\", price: 120, changePrice: \"4.2(-8%)\" },\n  { Symbol: \"EBSY\", price: 963, changePrice: \"4.2(-8%)\" },\n  { Symbol: \"MOZA\", price: 56, changePrice: \"4.2(-8%)\" },\n  { Symbol: \"NANI\", price: 123, changePrice: \"4.2(-8%)\" },\n];\nconst contentdummyData = [\n  {\n    name: \"jhon Doe\",\n    img: \"Jh\",\n    title: \"This a test dummy title\",\n    bio: \"simpleBio\",\n  },\n  {\n    name: \"Ziad Fnan\",\n    img: \"Zi\",\n    title: \"Don't Miss This intersting analyst\",\n    bio: \"simpleBio\",\n  },\n  {\n    name: \"Abo Motlaq\",\n    img: \"AH\",\n    title: \"I only love apple products\",\n    bio: \"simpleBio\",\n  },\n  {\n    name: \"Aziz Amir\",\n    img: \"AA\",\n    title: \"Play it cool with your stocks\",\n    bio: \"simpleBio\",\n  },\n  {\n    name: \"Saleh Mogren\",\n    img: \"SM\",\n    title: \"How to write dummy data like a pro\",\n    bio: \"simpleBio\",\n  },\n];\n\nexport default Home;\n","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/views/EndUserProfile.js",["203","204","205","206","207"],"import React, { useState } from \"react\";\nimport { UserInfo, FollowerFollowingForm } from \"../components/UserInfo\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport { HomeCard } from \"./Home\";\nimport {\n  List,\n  ListItemText,\n  Grid,\n  Tabs,\n  Divider,\n  Typography,\n  IconButton,\n  Container,\n  Tab,\n  Paper,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { Redirect, useParams } from \"react-router\";\nimport { useQuery } from \"@apollo/client\";\nimport { PROFILE_GQL } from \"../graphql/Auth/authGql\";\nimport CommentComponentBody from \"../components/Content/CommentComponents\";\n\nconst img = \"avatars/7.jpg\";\nconst userInfo = {\n  name: \"Jhon Doe\",\n  img: img,\n  bio: \"Analyst\",\n};\n\nconst contentdummyData1 = [\n  {\n    name: \"jhon Doe\",\n    img: \"Jh\",\n    title: \"This a test dummy title\",\n    bio: \"18 comments\",\n  },\n  {\n    name: \"Ziad Fnan\",\n    img: \"Zi\",\n    title: \"Don't Miss This intersting analyst\",\n    bio: \"18 comments\",\n  },\n  {\n    name: \"Abo Motlaq\",\n    img: \"AH\",\n    title: \"I only love apple products\",\n    bio: \"18 comments\",\n  },\n  {\n    name: \"Aziz Amir\",\n    img: \"AA\",\n    title: \"Play it cool with your stocks\",\n    bio: \"18 comments\",\n  },\n  {\n    name: \"Saleh Mogren\",\n    img: \"SM\",\n    title: \"How to write dummy data like a pro\",\n    bio: \"18 comments\",\n  },\n];\n\nconst contentdummyData2 = [\n  {\n    name: \"jhon Doe\",\n    img: \"Jh\",\n    title: \"This a test dummy title\",\n    bio:\n      \"Contributor long only, Growth, registered investment advisor, investment advisor\",\n  },\n  {\n    name: \"Ziad Fnan\",\n    img: \"Zi\",\n    title: \"Don't Miss This intersting analyst\",\n    bio:\n      \"Contributor long only, Growth, registered investment advisor, investment advisor\",\n  },\n  {\n    name: \"Abo Motlaq\",\n    img: \"AH\",\n    title: \"I only love apple products\",\n    bio:\n      \"Contributor long only, Growth, registered investment advisor, investment advisor\",\n  },\n  {\n    name: \"Aziz Amir\",\n    img: \"AA\",\n    title: \"Play it cool with your stocks\",\n    bio:\n      \"Contributor long only, Growth, registered investment advisor, investment advisor\",\n  },\n  {\n    name: \"Saleh Mogren\",\n    img: \"SM\",\n    title: \"How to write dummy data like a pro\",\n    bio:\n      \"Contributor long only, Growth, registered investment advisor, investment advisor\",\n  },\n];\n\nconst FollowersDocs = [\n  {\n    name: \"Alex\",\n    avatar: img,\n    bio:\n      \"Contributor long only, Growth, registered investment advisor, investment advisor\",\n  },\n  {\n    name: \"Ziad\",\n    avatar: img,\n    bio:\n      \"Contributor long only, Growth, registered investment advisor, investment advisor\",\n  },\n  {\n    name: \"Mohammed\",\n    avatar: img,\n    bio:\n      \"Contributor long only, Growth, registered investment advisor, investment advisor\",\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(4),\n    // background: theme.palette.grey[400],\n  },\n\n  paper1: {\n    width: theme.spacing(21),\n    // height: theme.spacing(14),\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n\n    [theme.breakpoints.between(\"sm\", \"md\")]: {\n      width: theme.spacing(13.5),\n      height: theme.spacing(21.5),\n      padding: theme.spacing(0.5),\n      marginBottom: theme.spacing(1),\n    },\n    [theme.breakpoints.between(\"md\", \"xl\")]: {\n      width: theme.spacing(17),\n      height: theme.spacing(29),\n      padding: theme.spacing(1.5),\n      marginRight: theme.spacing(2),\n    },\n  },\n\n  paper2: {\n    // width: \"100%\",\n    padding: theme.spacing(3),\n\n    [theme.breakpoints.between(\"sm\", \"md\")]: {\n      width: theme.spacing(72),\n    },\n    [theme.breakpoints.between(\"md\", \"xl\")]: {\n      padding: theme.spacing(1),\n      width: theme.spacing(105),\n    },\n  },\n\n  typogrAboutMe: {\n    // width: \"auto\",\n    // height: \"auto\",\n    marginTop: theme.spacing(0.8),\n    // fontSize: \"14px\",\n    // fontStyle: \"normal\",\n    // fontWeight: \"400\",\n    // marginLeft: theme.spacing(2),\n    textAlign: \"left\",\n\n    [theme.breakpoints.between(\"sm\", \"md\")]: {\n      fontSize: \"25px\",\n      marginTop: theme.spacing(1.25),\n    },\n\n    [theme.breakpoints.between(\"md\", \"xl\")]: {\n      marginTop: theme.spacing(2.75),\n      marginBottom: theme.spacing(0.5),\n      fontSize: \"34px\",\n    },\n  },\n\n  typogrText: {\n    // marginLeft: theme.spacing(2),\n    marginBottom: theme.spacing(0.75),\n    marginTop: theme.spacing(1),\n    width: \"100%\",\n    height: \"auto\",\n    // fontSize: \"12px\",\n    // fontStyle: \"normal\",\n    // fontWeight: \"400\",\n    textAlign: \"left\",\n\n    [theme.breakpoints.between(\"sm\", \"md\")]: {\n      fontSize: \"18.5px\",\n      width: \"auto\",\n    },\n\n    [theme.breakpoints.between(\"md\", \"xl\")]: {\n      width: \"auto\",\n      marginBottom: theme.spacing(2),\n      marginTop: theme.spacing(1),\n      fontSize: \"24px\",\n    },\n  },\n\n  iconstyle: {\n    [theme.breakpoints.between(\"xs\", \"sm\")]: {\n      fontSize: \"xx-large\",\n    },\n\n    [theme.breakpoints.between(\"sm\", \"md\")]: {\n      fontSize: \"medium\",\n    },\n  },\n\n  typogrLabel: {\n    [theme.breakpoints.between(\"xs\", \"sm\")]: {\n      //  fontSize: theme.typography.fontSize*0.3,\n    },\n  },\n}));\n\nconst EndUserProfile = (props) => {\n  const classes = useStyles();\n  const { userId } = useParams();\n  console.log(userId);\n  const { data, error, loading } = useQuery(PROFILE_GQL, {\n    variables: {\n      id: userId,\n    },\n  });\n  if (error) {\n    console.log(error);\n    return <Redirect to=\"404\" />;\n  }\n  if (loading) return <CircularProgress />;\n  return (\n    <div className={classes.root}>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\">\n        <Grid item>\n          <Paper className={classes.paper1} elevation={2}>\n            <UserInfo\n              id={userId}\n              img={userInfo.img}\n              name={data.findUser.name}\n              bio={userInfo.bio}\n              userId={data.findUser.id}\n              isFollowed={data.findUser.isFollowed}\n            />\n          </Paper>\n        </Grid>\n\n        <Grid item xs sm md lg={8}>\n          <Paper className={classes.paper2} elevation={2}>\n            <UserProfileDetails\n              name={data.findUser.name}\n              followers={data.findUser.followers}\n              following={data.findUser.following}\n              comments={data.getComments}\n              articles={data.getArticles}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nEndUserProfile.propTypes = {};\n\nexport default EndUserProfile;\n\n{\n  /* // UserProfileDetails(Bio+Icons+Tabs)  */\n}\nexport function UserProfileDetails(props) {\n  const state = useState();\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const Followers = (FollowersDocs) =>\n    FollowersDocs.map((v) => (\n      <FollowerFollowingForm\n        name={v.name}\n        bio={v.bio ? v.bio : \"Default Bio\"}\n        avatar={v.avatar}\n        userId={v.id}\n        isFollowed={v.isFollowed}\n      />\n    ));\n\n  const Following = (FollowersDocs) =>\n    FollowersDocs.map((v) => (\n      <FollowerFollowingForm\n        name={v.name}\n        bio={v.bio ? v.bio : \"Default Bio\"}\n        avatar={v.avatar}\n        userId={v.id}\n        isFollowed={v.isFollowed}\n      />\n    ));\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"flex-start\"\n      alignItems=\"flex-start\"\n    >\n      {/* // UserBio  */}\n      <Grid item>\n        <Typography className={classes.typogrAboutMe} variant=\"body1\">\n          ABOUT ME\n        </Typography>\n        <Typography\n          className={classes.typogrText}\n          style={{ color: \"#4d4d4d\" }}\n          variant=\"subtitle1\"\n        >\n          Contributor Since: 2021\n        </Typography>\n\n        <Typography className={classes.typogrText} variant=\"body1\">\n          Contributor long only, Growth, registered investment\n          advisor,investment advisor\n        </Typography>\n      </Grid>\n\n      {/* // UserSocialMediaAccounts  */}\n      <Grid item xs container direction=\"row\" justify=\"flex-end\">\n        <IconButton size=\"small\">\n          {\" \"}\n          <TwitterIcon\n            className={classes.iconstyle}\n            style={{ color: \"grey\" }}\n          />\n        </IconButton>\n        <IconButton size=\"small\">\n          {\" \"}\n          <FacebookIcon\n            className={classes.iconstyle}\n            style={{ color: \"grey\" }}\n          />\n        </IconButton>\n        <IconButton size=\"small\">\n          {\" \"}\n          <LinkedInIcon\n            className={classes.iconstyle}\n            style={{ color: \"grey\" }}\n          />\n        </IconButton>\n      </Grid>\n\n      {/* // UserProfileTabs  */}\n      <Grid item xs>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"inherit\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n        >\n          <Tab\n            label={\n              <List>\n                <ListItemText\n                  primary={\n                    <Typography className={classes.typogrLabel}>\n                      Comments\n                    </Typography>\n                  }\n                  secondary={\n                    <Typography className={classes.typogrLabel}>\n                      {props.comments.length}\n                    </Typography>\n                  }\n                />\n              </List>\n            }\n          />\n\n          <Tab\n            label={\n              <List>\n                <ListItemText\n                  primary={\n                    <Typography className={classes.typogrLabel}>\n                      Followers\n                    </Typography>\n                  }\n                  secondary={\n                    <Typography className={classes.typogrLabel}>\n                      {props.followers.length}\n                    </Typography>\n                  }\n                />\n              </List>\n            }\n          />\n\n          <Tab\n            label={\n              <List>\n                <ListItemText\n                  primary={\n                    <Typography className={classes.typogrLabel}>\n                      Following\n                    </Typography>\n                  }\n                  secondary={\n                    <Typography className={classes.typogrLabel}>\n                      {props.following.length}\n                    </Typography>\n                  }\n                />\n              </List>\n            }\n          />\n\n          <Tab\n            label={\n              <List>\n                <ListItemText\n                  primary={\n                    <Typography className={classes.typogrLabel}>\n                      Articles\n                    </Typography>\n                  }\n                  secondary={\n                    <Typography className={classes.typogrLabel}>\n                      {props.articles.length}\n                    </Typography>\n                  }\n                />\n              </List>\n            }\n          />\n\n          <Tab\n            label={\n              <List>\n                <ListItemText\n                  primary={\n                    <Typography className={classes.typogrLabel}>\n                      Author’s Picks\n                    </Typography>\n                  }\n                  secondary={\n                    <Typography className={classes.typogrLabel}>500</Typography>\n                  }\n                />\n              </List>\n            }\n          />\n        </Tabs>\n        <Container>\n          <Divider variant=\"middle\" />\n        </Container>\n\n        {value === 0 && (\n          <Container>\n            {props.comments.map((e) => (\n              <CommentComponentBody\n                body={e.commentBody}\n                date={e.createdAt}\n                name={props.name}\n              />\n            ))}\n          </Container>\n        )}\n        {value === 1 && <Container>{Followers(props.followers)}</Container>}\n        {value === 2 && <Container>{Following(props.following)}</Container>}\n        {value === 3 && (\n          <Container>\n            {<HomeCard dataLimit={4} data={props.articles} btnText=\"More\" />}\n          </Container>\n        )}\n        {value === 4 && (\n          <Container>\n            {<HomeCard dataLimit={4} data={props.articles} btnText=\"More\" />}\n          </Container>\n        )}\n      </Grid>\n    </Grid>\n  );\n}\n","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/views/Portfolio.js",["208","209","210","211","212","213","214","215","216","217","218","219","220","221"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport { HomeCard } from \"./Home\";\nimport { AuthContext } from \"../context/auth\";\nimport {\n  Button,\n  Grid,\n  Paper,\n  Avatar,\n  Divider,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nimport { Link as RouterLink, Redirect } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useQuery } from \"@apollo/client\";\nimport { PORTFOLIO_GQL } from \"../graphql/Company/portfolioGql\";\nimport { NetworkStatus } from \"@apollo/client\";\nimport InputFormPort from \"../components/Company/inputformport\";\nimport EditFormport from \"../components/Company/edfitformport\";\nimport {\n  CompanyCardLine,\n  BigCompanyCardTable,\n} from \"../components/Company/CompanyCard\";\nimport { Height } from \"@material-ui/icons\";\nimport { FollowerFollowingForm } from \"../components/UserInfo\";\nimport {\n  ContentCard,\n  ContentCardPaper,\n} from \"../components/Content/ContentCards\";\nimport { userConfigVar } from \"../storage/userConfig\";\n\n// import {\n//   ContentCard,\n//   ContentCardPaper,\n// } from \"../components/Content/ContentCards\";\n\nconst useStyles = makeStyles((theme) => ({\n  rootCom: {\n    // width: \"100%\",\n    paddingTop: theme.spacing(2),\n    [theme.breakpoints.up(\"lg\")]: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n      marginRight: theme.spacing(3),\n      marginLeft: theme.spacing(3),\n    },\n  },\n\n  paper1: {\n    // width: \"100%\",\n    paddingBottom: theme.spacing(2),\n    marginTop: theme.spacing(1),\n    paddingTop: theme.spacing(1),\n    padding: theme.spacing(1),\n    [theme.breakpoints.up(\"lg\")]: {\n      paddingLeft: theme.spacing(6.5),\n      paddingRight: theme.spacing(2),\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n\n  paper2: {\n    // width: \"100%\",\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(1),\n    paddingTop: theme.spacing(3),\n    [theme.breakpoints.up(\"lg\")]: {\n      paddingLeft: theme.spacing(6.5),\n      paddingRight: theme.spacing(2),\n    },\n  },\n\n  AddEditBtn: {\n    marginTop: theme.spacing(2.5),\n  },\n\n  compCardLine: {\n    marginBottom: theme.spacing(6.3),\n  },\n\n  BtnsTypo: {\n    fontWeight: theme.typography.fontWeightBold,\n  },\n  avatar2: {\n    width: theme.spacing(9.3),\n    height: theme.spacing(9.3),\n\n    // [theme.breakpoints.between('sm', 'xl')]: {\n    //    width: theme.spacing(5.75),\n    //    height: theme.spacing(5.75),\n    // },\n  },\n\n  titleTypo: {\n    fontSize: \"24px\",\n  },\n\n  numberOfCommTypo: {\n    fontSize: \"16px\",\n    color: \"grey\",\n  },\n\n  labelTypo: {\n    fontSize: \"34px\",\n    color: \"grey\",\n  },\n\n  divForm: {\n    marginBottom: theme.spacing(2),\n  },\n\n  buttons: {\n    [theme.breakpoints.between(\"xs\", \"sm\")]: {\n      marginRight: theme.spacing(3),\n    },\n\n    marginRight: theme.spacing(4.5),\n  },\n}));\n\nfunction Portfolio(props) {\n  const [isOpen, setIsOpen] = useState(false);\n  const portoId = userConfigVar().portfolio.id;\n  const togglePopup = () => {\n    setIsOpen(!isOpen);\n  };\n  const user = useContext(AuthContext);\n  // check if he has porfolio\n  const classes = useStyles();\n  const [Companies, setCompanies] = useState([]);\n\n  const Popup = (props) => {\n    return (\n      <div className=\"popup-box\">\n        <div className=\"box\">\n          <span className=\"close-icon\" onClick={props.handleClose}>\n            x\n          </span>\n          {props.content}\n        </div>\n      </div>\n    );\n  };\n\n  const { data, error, loading, refetch, networkStatus } = useQuery(\n    PORTFOLIO_GQL,\n    {\n      variables: {\n        portoId: portoId,\n      },\n    }\n  );\n  if (networkStatus === NetworkStatus.refetch) return \"Refetching!\";\n  if (loading) return <CircularProgress />;\n  if (error) return <Redirect to=\"/404\" />;\n\n  const img = \"avatars/7.jpg\";\n  const Followers = (FollowersDocs) => (\n    <ContentCardPaper\n      data={FollowersDocs}\n      limit={6}\n      auther\n      title={\"Articles\"}\n    />\n  );\n\n  const CompanyHeader = () => {\n    return (\n      <div className={classes.rootCom}>\n        {/* Compnany line + 2 Content cards  */}\n\n        <Paper className={classes.paper1}>\n          <Grid container direction=\"column\">\n            {/* Company Line */}\n\n            <CompanyCardLine data={data.getCompanies} />\n\n            <Grid item xs>\n              <BigCompanyCardTable\n                data={data.getPortfolio.followedCompanies}\n                limit={4}\n                minWidth={400}\n              />\n            </Grid>\n            <Grid\n              item\n              container\n              direction=\"row\"\n              alignItems\n              justify=\"flex-end\"\n              spacing={2}\n            >\n              <Grid item>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  value=\"Create Portfolio\"\n                  className={classes.AddEditBtn}\n                  startIcon={<CreateIcon />}\n                  onClick={togglePopup}\n                >\n                  Edit\n                </Button>\n              </Grid>\n              {isOpen && (\n                <Popup\n                  content={\n                    <>\n                      <EditFormport portoId={portoId}></EditFormport>\n                    </>\n                  }\n                  handleClose={togglePopup}\n                />\n              )}\n            </Grid>\n          </Grid>\n        </Paper>\n\n        <Paper className={classes.paper2}>\n          <Grid\n            container\n            direction=\"column\"\n            // alignItems\n            // justify='flex-end'\n          >\n            <Grid\n              item\n              container\n              direction=\"row\"\n              // alignItems\n              // justify='flex-end'\n              xs\n            >\n              <Grid item>\n                {\" \"}\n                <Button className={classes.buttons} variant=\"contained\">\n                  <Typography className={classes.BtnsTypo}>Latest</Typography>\n                </Button>\n              </Grid>\n              <Grid item>\n                {\" \"}\n                <Button className={classes.buttons} variant=\"contained\">\n                  <Typography className={classes.BtnsTypo}>Articles</Typography>\n                </Button>\n              </Grid>\n\n              <Grid item>\n                {\" \"}\n                <Button className={classes.buttons} variant=\"contained\">\n                  <Typography className={classes.BtnsTypo}>News</Typography>\n                </Button>\n              </Grid>\n            </Grid>\n\n            <Grid item>\n              <Typography className={classes.labelTypo}>Articles</Typography>\n            </Grid>\n\n            <Grid item>{Followers(data.getPortfolio.relatedArticles)}</Grid>\n          </Grid>\n        </Paper>\n      </div>\n    );\n  };\n\n  if (portoId == \"\") {\n    return (\n      <div className={classes.paper}>\n        <p>Please create a portfolio</p>\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            value=\"Create Portfolio\"\n            className={classes.AddEditBtn}\n            startIcon={<CreateIcon />}\n            onClick={togglePopup}\n          >\n            Create Portfolio\n          </Button>\n        </Grid>\n        {isOpen && (\n          <Popup\n            content={\n              <>\n                <InputFormPort></InputFormPort>\n              </>\n            }\n            handleClose={togglePopup}\n          />\n        )}\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <Grid item>{CompanyHeader()}</Grid>\n      </div>\n    );\n  }\n}\n\nexport default Portfolio;\n\nexport function ArticlesForm(props) {\n  const classes = useStyles();\n  return (\n    <div className={classes.divForm}>\n      <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n        {/* // User Avatar  */}\n        <Grid item>\n          <Avatar\n            className={classes.avatar2}\n            alt={props.name}\n            src={props.avatar}\n          />\n        </Grid>\n\n        {/* // User info  */}\n        <Grid\n          item\n          xs=\"8\"\n          container\n          alignItems=\"flex-start\"\n          justify=\"flex-start\"\n          direction=\"column\"\n        >\n          <Grid item>\n            {\" \"}\n            <Typography className={classes.titleTypo} variant=\"subtitle1\">\n              {props.title}\n            </Typography>\n          </Grid>\n\n          <Grid\n            item\n            container\n            alignItems=\"flex-start\"\n            justify=\"flex-start\"\n            direction=\"row\"\n          >\n            <Grid item>\n              <Typography\n                className={classes.numberOfCommTypo}\n                variant=\"subtitle2\"\n              >\n                {props.editors}\n              </Typography>\n            </Grid>\n\n            <Grid item>\n              <Typography\n                className={classes.numberOfCommTypo}\n                variant=\"subtitle2\"\n              >\n                {props.numberOfComm}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Divider variant=\"middle\" />\n    </div>\n  );\n}\n","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/components/Navbar.js",[],"/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/components/Footer.js",[],"/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/views/Content/Article.js",[],"/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/components/AuthRoute.js",[],"/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/views/Content/Draft.js",[],"/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/views/Content/MyAuthors.js",["222","223","224","225","226"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { useParams, Link as RouterLink, Link } from \"react-router-dom\";\nimport {\n  Container,\n  Grid,\n  Card,\n  Typography,\n  Button,\n  List,\n  ListItem,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_DRAFTS } from \"../../graphql/Content/draftsGql\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ContentCard } from \"../../components/Content/ContentCards\";\nimport { AuthContext } from \"../../context/auth\";\nimport { GET_ARTICLES } from \"../../graphql/Content/articleGql\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginLeft: 0,\n    padding: theme.spacing(2),\n  },\n  Section: {\n    [theme.breakpoints.up(\"md\")]: {\n      marginTop: theme.spacing(4),\n    },\n  },\n  titleSection: {\n    padding: theme.spacing(2),\n    marginLeft: theme.spacing(2),\n  },\n}));\nexport function MyAuthors(props) {\n  const classes = useStyles();\n\n  // const context = useContext(AuthContext);\n  const [drafts, setDrafts] = useState([]);\n  const [articles, setArticles] = useState([]);\n\n  // useEffect(() => {\n  //   console.log(`Drafts are Fetched`);\n  // }, [state.drafts]);\n  const params = props.match.params.username;\n  const { loading: draftFetchingLoading } = useQuery(GET_DRAFTS, {\n    onCompleted(data) {\n      setDrafts(data.getDrafts);\n      console.log(`Drafts length ${drafts.length}`);\n    },\n    variables: {\n      autherId: params,\n    },\n    onError(error) {\n      console.log(`F}ailed to fetch drafts : ${error}`);\n    },\n  });\n  const { loading: articlesFethcingLoading } = useQuery(GET_ARTICLES, {\n    onCompleted(data) {\n      setArticles(data.getArticles);\n      console.log(`Articles length ${articles.length}`);\n    },\n    variables: {\n      userId: params,\n    },\n    onError(error) {\n      console.log(`F}ailed to fetch articles : ${error}`);\n    },\n  });\n  const articlesSection = () => {\n    return articlesFethcingLoading ? (\n      <CircularProgress />\n    ) : (\n      <Container className={classes.Section}>\n        <Card>\n          <Container>\n            <Typography variant=\"h4\" className={classes.titleSection}>\n              My Articles{\" \"}\n            </Typography>\n          </Container>\n          <Container>\n            <List>\n              {articles.map((e) => {\n                return (\n                  <ListItem>\n                    <ContentCard\n                      title={e.articleTitle}\n                      link={`/article/${e.id}`}\n                    />\n                  </ListItem>\n                );\n              })}\n            </List>\n          </Container>\n        </Card>\n      </Container>\n    );\n  };\n  const draftSection = () => {\n    return draftFetchingLoading ? (\n      <CircularProgress />\n    ) : (\n      <Container className={classes.Section}>\n        <Card>\n          <Container>\n            <Typography variant=\"h4\" className={classes.titleSection}>\n              My Drafts\n            </Typography>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              component={Link}\n              to=\"/draft/new\"\n            >\n              Create New Draft\n            </Button>\n          </Container>\n          <Container>\n            <List>\n              {drafts.map((e) => {\n                return (\n                  <ListItem>\n                    <ContentCard\n                      crudOtin\n                      title={e.draftName}\n                      link={`/draft/${e.id}`}\n                    />\n                  </ListItem>\n                );\n              })}\n            </List>\n          </Container>\n        </Card>\n      </Container>\n    );\n  };\n  return (\n    <Container>\n      <Grid>\n        <Grid item>{articlesSection()}</Grid>\n        <Grid item>{draftSection()}</Grid>\n      </Grid>\n    </Container>\n  );\n}\n","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/views/Company/Company.js",[],"/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/views/profileSetting/ProfileSetting.js",["227"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {\n    Divider,\n    Button,\n    Paper,\n    Grid,\n    Avatar,\n    TextField,\n\n} from '@material-ui/core';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport PictureInPictureIcon from '@material-ui/icons/PictureInPicture';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nconst img = \"avatars/7.jpg\";\nconst userInfo = {\n    name: \"Jhon Doe\",\n    img: img,\n    bio: \"Analyst\",\n};\nconst drawerWidth = 210;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n\n    appBar: {\n        marginTop: theme.spacing(8),\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\n            marginTop: theme.spacing(8.5),\n        },\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n            marginLeft: drawerWidth,\n        },\n    },\n\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    // necessary for content to be below app bar\n    //   toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        position: 'absolute',\n        width: drawerWidth,\n        marginTop: theme.spacing(8.5),\n        height: theme.spacing(65.5),\n    },\n\n    content: {\n        flexGrow: 1,\n        // padding: theme.spacing(3),\n        paddingTop: theme.spacing(7),\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\n            paddingTop: theme.spacing(8),\n        },\n    },\n\n    helpButton: {\n        marginLeft: drawerWidth / 6,\n        width: theme.spacing(14),\n        marginTop: theme.spacing(3.5),\n\n    },\n\n    profilePaper: {\n        width: '100%',\n        padding: theme.spacing(5),\n        paddingTop: theme.spacing(7)\n\n    },\n\n    avatar: {\n        width: theme.spacing(12),\n        height: theme.spacing(12),\n    },\n\n    NameTypog: {\n        fontWeight: \"bold\",\n        fontSize: \"20px\"\n    },\n\n    inputValue: {\n        fontSize: \"20px\",\n        color: \"grey\"\n    },\n\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: '35ch',\n    },\n\n    textFieldBio: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: '35ch',\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\n            width: '74ch',\n        },\n    },\n\n    ReqEditBtn: {\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\n            marginTop: theme.spacing(5),\n        },\n    }\n\n}));\n\nfunction ProfileSetting(props) {\n    const { window } = props;\n    const classes = useStyles();\n    const theme = useTheme();\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n\n    const itemsList = [\n        {\n            text: \"Profile\",\n            icon: <PictureInPictureIcon />,\n            onClick: () => history.push(\"/ProfileSetting\")\n        },\n        {\n            text: \"Account Securty\",\n            icon: <VerifiedUserIcon />,\n            onClick: () => history.push(\"/AccountSecurty\")\n        },\n\n    ];\n\n    const { history } = props;\n    const drawer = (\n        <div>\n            <div className={classes.toolbar} />\n            <Divider />\n            <List>\n                {itemsList.map((item, index) => {\n\n                    const { text, icon, onClick } = item;\n                    return (\n                        <ListItem button key={text} onClick={onClick}>\n                            {icon && <ListItemIcon>{icon}</ListItemIcon>}\n                            <ListItemText primary={text} />\n                        </ListItem>\n\n                    )\n                })}\n            </List>\n            <List>\n                <ListItem>\n                    <Button className={classes.helpButton} variant=\"outlined\">Help</Button></ListItem></List>\n        </div>\n    );\n\n    const container = window !== undefined ? () => window().document.body : undefined;\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar position=\"absolute\" color=\"white\" className={classes.appBar}>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        onClick={handleDrawerToggle}\n                        className={classes.menuButton}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h5\" noWrap>\n                        Profile\n          </Typography>\n                </Toolbar>\n            </AppBar>\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n                <Hidden smUp implementation=\"css\">\n                    <Drawer\n                        container={container}\n                        variant='temporary'\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                        open={mobileOpen}\n                        onClose={handleDrawerToggle}\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        ModalProps={{\n                            keepMounted: true, // Better open performance on mobile.\n                        }}\n                    >\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n                <Hidden xsDown implementation=\"css\">\n                    <Drawer\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        variant=\"permanent\"\n                        open\n                    >\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n            </nav>\n            <main className={classes.content}>\n                <div />\n                <Paper className={classes.profilePaper} elevation={0}>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify='center'\n                        alignItems=\"flex-start\"\n                        spacing={6}\n                    >\n\n                        <Grid item>\n                            <Avatar className={classes.avatar} alt={props.name} src={\"\"} />\n                        </Grid>\n\n                        <Grid item xs\n                            container\n                            direction=\"column\"\n                            justify='flex-start'\n                            alignItems=\"flex-start\"\n                            spacing={3}\n                        >\n\n                            <Grid item\n                                container\n                                direction=\"row\"\n                                justify='flex-start'\n                                alignItems=\"center\"\n                                spacing={3}>\n\n                                <Grid item>\n                                    <TextField\n                                        label=\"First name\"\n                                        id=\"margin-none\"\n                                        // defaultValue=\"\"\n                                        className={classes.textField}\n                                    />\n                                </Grid>\n\n                                <Grid item>\n                                    <TextField\n                                        label=\"Last name\"\n                                        id=\"margin-normal\"\n                                        // defaultValue=\"\"\n                                        className={classes.textField}\n                                    />\n                                </Grid>\n                            </Grid>\n\n                            <Grid item>\n                                <TextField\n                                    label=\"Username\"\n                                    id=\"margin-normal\"\n                                    // defaultValue=\"\"\n                                    className={classes.textField}\n                                />\n                            </Grid>\n\n                            <Grid item>\n                                <TextField\n                                    className={classes.textFieldBio}\n                                    id=\"standard-multiline-flexible\"\n                                    label=\"Bio\"\n                                    multiline\n                                    rowsMax={4}\n                                />\n                            </Grid>\n\n                            <Grid item\n                                container\n                                direction=\"row\"\n                                justify='flex-start'\n                                alignItems=\"center\"\n                                spacing={3}>\n\n                                <Grid item>\n                                    <TextField\n                                        label=\"Compony\"\n                                        id=\"margin-none\"\n                                        // defaultValue=\"\"\n                                        className={classes.textField}\n                                    />\n                                </Grid>\n\n\n                                <Grid item>\n                                    <TextField\n                                        label=\"Linkedin\"\n                                        id=\"margin-normal\"\n                                        // defaultValue=\"\"\n                                        className={classes.textField}\n                                    />\n                                </Grid>\n                            </Grid>\n\n                            <Grid item\n                                container\n                                direction=\"row\"\n                                justify='flex-start'\n                                alignItems='flex-end'\n                                spacing={1}>\n                                <Grid item>\n                                    <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={classes.ReqEditBtn}>\n                                        Request To Be Analyst\n                                </Button>\n                                </Grid>\n\n                                <Grid item>\n                                    <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={classes.ReqEditBtn}>\n                                        Edit\n                                </Button>\n                                </Grid>\n\n\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </main>\n        </div>\n    );\n}\n\nProfileSetting.propTypes = {\n\n    window: PropTypes.func,\n};\nexport default ProfileSetting","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/views/profileSetting/AccountSecurty.js",["228","229","230"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {\n    Divider,\n    Button,\n    Paper,\n    Grid,\n    Avatar,\n    TextField,\n    Input,\n    InputLabel,\n    FormControl,\n    Container\n\n} from '@material-ui/core';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport PictureInPictureIcon from '@material-ui/icons/PictureInPicture';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Popper from '@material-ui/core/Popper';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Modal from '@material-ui/core/Modal';\n\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst img = \"avatars/7.jpg\";\nconst userInfo = {\n    name: \"Jhon Doe\",\n    img: img,\n    bio: \"Analyst\",\n};\n\nconst drawerWidth = 210;\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        [theme.breakpoints.between(\"xs\", \"sm\")]: {\n            // marginLeft: theme.spacing(5.13),\n\n            width: '100%',\n        },\n        position: 'absolute',\n        width: '448px',\n        // height: '471px',\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n        [theme.breakpoints.between(\"sm\", \"md\")]: {\n            width: '448px',\n        },\n    },\n\n    root: {\n\n        display: 'flex',\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        marginTop: theme.spacing(8),\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\n            marginTop: theme.spacing(8.5),\n        },\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n            marginLeft: drawerWidth,\n        },\n    },\n\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    // necessary for content to be below app bar\n    //   toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        position: 'absolute',\n        width: drawerWidth,\n        marginTop: theme.spacing(8.5),\n        height: theme.spacing(45.2),\n    },\n\n\n    content: {\n        flexGrow: 1,\n        // padding: theme.spacing(3),\n        paddingTop: theme.spacing(7),\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\n            paddingTop: theme.spacing(8),\n        },\n    },\n\n    helpButton: {\n        marginLeft: drawerWidth / 6,\n        width: theme.spacing(14),\n        marginTop: theme.spacing(3.5),\n\n    },\n    profilePaper: {\n        width: '100%',\n        padding: theme.spacing(5),\n        paddingTop: theme.spacing(7),\n\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\n            paddingTop: theme.spacing(13),\n\n        },\n    },\n\n    avatar: {\n        width: theme.spacing(12),\n        height: theme.spacing(12),\n    },\n\n    NameTypog: {\n        fontWeight: \"bold\",\n        fontSize: \"20px\"\n    },\n\n    inputValue: {\n        fontSize: \"20px\",\n        color: \"grey\"\n    },\n\n    textField: {\n        marginRight: theme.spacing(1),\n        width: '35ch',\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\n            marginLeft: theme.spacing(15),\n        },\n    },\n\n    textFieldBio: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: '35ch',\n\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\n            width: '74ch',\n        },\n    },\n\n    ReqEditBtn: {\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\n            marginTop: theme.spacing(5),\n        },\n    },\n\n    ChaRestBtn: {\n        width: theme.spacing(12),\n        marginLeft: theme.spacing(7),\n    },\n\n\n\n    CancelBtn: {\n        fontSize: '20px',\n        fontWeight: '700',\n        [theme.breakpoints.between(\"xs\", \"sm\")]: {\n            fontSize: '14px',\n        },\n    },\n\n    ChPasswordBtn: {\n        fontSize: '24px',\n        color: 'grey',\n        [theme.breakpoints.between(\"xs\", \"sm\")]: {\n            fontSize: '16px',\n        },\n    },\n\n    ChPasstextField: {\n        [theme.breakpoints.between(\"xs\", \"sm\")]: {\n            width: '300px'\n        },\n\n        marginTop: theme.spacing(5),\n        width: '366px'\n    },\n\n    DoneBtn: {\n        width: '320px',\n        marginTop: theme.spacing(2.5),\n        marginBottom: theme.spacing(2.5),\n    },\n\n    ForgetTypog: {\n        color: \"grey\",\n        fontWeight: '500',\n        fontSize: '14px'\n    },\n\n    ResetHereBtn: {\n        color: \"blue\",\n        fontWeight: '500',\n        fontSize: '14px'\n    },\n\n    PopperPassword: {\n        [theme.breakpoints.between(\"xs\", \"sm\")]: {\n            width: '100%',\n            marginLeft: \"-6px\"\n        },\n    },\n\n    textFieldChEmail: {\n        width: '42ch',\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\n            width: '48ch',\n        }\n    },\n\n    ChEmailBtn: {\n        width: '320px',\n        marginTop: theme.spacing(3.5),\n        // marginBottom: theme.spacing(2.5),\n    }\n}));\n\nfunction AccountSecurty(props) {\n    const { window } = props;\n    const classes = useStyles();\n    const theme = useTheme();\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n    const [values, setValues] = React.useState({\n        NewPassword: '',\n        CurrentPassword: '',\n        VerifyPassword: '',\n        password: '',\n        showPassword: false,\n    });\n    const handleChange = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.value });\n    };\n    const handleClickShowPassword = () => {\n        setValues({ ...values, showPassword: !values.showPassword });\n    };\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n    const itemsList = [\n        {\n            text: \"Profile\",\n            icon: <PictureInPictureIcon />,\n            onClick: () => history.push(\"/ProfileSetting\")\n        },\n        {\n            text: \"Account Securty\",\n            icon: <VerifiedUserIcon />,\n            onClick: () => history.push(\"/AccountSecurty\")\n        },\n    ];\n    const { history } = props;\n    const drawer = (\n        <div>\n            <div className={classes.toolbar} />\n            <Divider />\n            <List>\n                {itemsList.map((item, index) => {\n\n                    const { text, icon, onClick } = item;\n                    return (\n                        <ListItem button key={text} onClick={onClick}>\n                            {icon && <ListItemIcon>{icon}</ListItemIcon>}\n                            <ListItemText primary={text} />\n                        </ListItem>\n                    )\n                })}\n            </List>\n\n            <List>\n                <ListItem>\n                    <Button className={classes.helpButton} variant=\"outlined\">Help</Button></ListItem></List>\n        </div>\n    );\n\n    const container = window !== undefined ? () => window().document.body : undefined;\n    const [modalStyle] = React.useState(getModalStyle);\n    const [openChange, setOpenChange] = React.useState(false);\n    const handleOpenChange = () => {\n        setOpenChange(true);\n    };\n    const handleCloseChange = () => {\n        setOpenChange(false);\n    };\n    const [openReset, setOpenReset] = React.useState(false);\n    const handleOpenReset = () => {\n        setOpenReset(true);\n    };\n    const handleCloseReset = () => {\n        setOpenReset(false);\n    };\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar position=\"absolute\" color=\"white\" className={classes.appBar}>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        onClick={handleDrawerToggle}\n                        className={classes.menuButton}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h5\" noWrap>\n                        Account Securty\n          </Typography>\n                </Toolbar>\n            </AppBar>\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n                <Hidden smUp implementation=\"css\">\n                    <Drawer\n                        container={container}\n                        variant=\"temporary\"\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                        open={mobileOpen}\n                        onClose={handleDrawerToggle}\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        ModalProps={{\n                            keepMounted: true, // Better open performance on mobile.\n                        }}\n                    >\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n                <Hidden xsDown implementation=\"css\">\n                    <Drawer\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        variant=\"permanent\"\n                        open\n                    >\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n            </nav>\n            <main className={classes.content}>\n                <div />\n                <Paper className={classes.profilePaper} elevation={0}>\n                    <Grid item xs\n                        container\n                        direction=\"column\"\n                        justify='flex-start'\n                        alignItems='center'\n                        spacing={7}\n                    >\n                        <Grid item\n                            container\n                            direction=\"row\"\n                            justify='flex-start'\n                            alignItems='flex-end'\n                            spacing={2}\n                        >\n\n                            <Grid item>\n                                <TextField\n                                    label=\"Email\"\n                                    id=\"margin-none\"\n                                    InputProps={{\n                                        readOnly: true,\n                                    }}\n                                    defaultValue=\"UserEmail@gmail.com\"\n                                    // defaultValue=\"\"\n                                    className={classes.textField}\n                                // helperText=\"Some important text\"\n\n                                />\n                            </Grid>\n                            <Grid item>\n\n                                <Button\n                                    onClick={handleOpenChange}\n\n                                    // aria-describedby={idChange}\n                                    variant=\"contained\"\n                                    size=\"medium\"\n                                    color=\"primary\"\n                                    className={classes.ChaRestBtn} >\n                                    Change\n                                 </Button>\n\n                                <Modal\n                                    disablePortal\n                                    disableEnforceFocus\n                                    disableAutoFocus\n\n\n                                    open={openChange}\n                                    onClose={handleCloseChange}\n                                    aria-labelledby=\"simple-modal-title\"\n                                    aria-describedby=\"simple-modal-description\"\n                                >\n\n\n                                    <div style={modalStyle} className={classes.paper}>\n\n                                        <Grid item\n                                            container\n                                            direction=\"column\"\n                                            justify='flex-start'\n                                            alignItems='center'\n                                            spacing={6}\n                                        >\n\n                                            <Grid item\n                                                container\n                                                direction=\"row\"\n                                                justify='flex-start'\n                                                alignItems='flex-start'\n                                                spacing={10}\n                                            >\n                                                <Grid item><Typography className={classes.ChPasswordBtn}>Change password</Typography></Grid>\n                                                <Grid item> <Button onClick={handleCloseChange}><Typography className={classes.CancelBtn}>Cancel</Typography></Button></Grid>\n\n                                            </Grid>\n\n                                            <Grid item>\n                                                <TextField\n                                                    label=\"New Email\"\n                                                    id=\"margin-none\"\n                                                    // defaultValue=\"\"\n                                                    className={classes.textFieldChEmail}\n                                                />\n                                            </Grid>\n\n                                            <Grid item>\n                                                <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={classes.ChEmailBtn} >\n                                                    Change\n                                                  </Button>\n                                            </Grid>\n\n                                        </Grid>\n                                    </div>\n                                </Modal>\n                            </Grid>\n\n                        </Grid>\n\n                        <Grid item\n                            container\n                            direction=\"row\"\n                            justify='flex-start'\n                            alignItems='flex-end'\n                            spacing={2}\n                        >\n\n                            <Grid item>\n                                <TextField\n                                    label=\"Password\"\n                                    id=\"margin-none\"\n                                    type=\"password\"\n                                    defaultValue=\"11111111\"\n                                    InputProps={{\n                                        readOnly: true,\n                                    }}\n                                    className={classes.textField}\n                                />\n                            </Grid>\n\n                            <Grid item>\n                                <Button\n\n                                    onClick={handleOpenReset}\n                                    variant=\"contained\"\n                                    size=\"medium\"\n                                    color=\"primary\"\n                                    className={classes.ChaRestBtn} >\n                                    Reset\n                                </Button>\n\n\n\n                                <Modal\n                                    disablePortal\n                                    disableEnforceFocus\n                                    disableAutoFocus\n\n\n                                    open={openReset}\n                                    onClose={handleCloseReset}\n                                    aria-labelledby=\"simple-modal-title\"\n                                    aria-describedby=\"simple-modal-description\"\n                                >\n\n\n                                    <div style={modalStyle} className={classes.paper}>\n\n                                        <Grid item\n                                            container\n                                            direction=\"column\"\n                                            justify='flex-start'\n                                            alignItems='center'\n                                            spacing={2}\n                                        >\n\n                                            <Grid item\n                                                container\n                                                direction=\"row\"\n                                                justify='flex-start'\n                                                alignItems='flex-start'\n                                                spacing={10}\n                                            >\n                                                <Grid item><Typography className={classes.ChPasswordBtn}>Change password</Typography></Grid>\n                                                <Grid item> <Button onClick={handleCloseReset}><Typography className={classes.CancelBtn}>Cancel</Typography></Button></Grid>\n\n                                            </Grid>\n\n                                            <Grid item>\n                                                <FormControl >\n                                                    <InputLabel htmlFor=\"standard-adornment-password\">Enter current password</InputLabel>\n                                                    <Input\n                                                        className={classes.ChPasstextField}\n                                                        id=\"standard-adornment-password\"\n                                                        type={values.showPassword ? 'text' : 'password'}\n                                                        value={values.CurrentPassword}\n                                                        onChange={handleChange('CurrentPassword')}\n                                                        endAdornment={\n                                                            <InputAdornment>\n                                                                <IconButton\n                                                                    aria-label=\"toggle password visibility\"\n                                                                    onClick={handleClickShowPassword}\n                                                                    onMouseDown={handleMouseDownPassword}\n                                                                    edge=\"end\"\n                                                                >\n                                                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                                                                </IconButton>\n                                                            </InputAdornment>\n                                                        }\n                                                    />\n                                                </FormControl>\n                                            </Grid>\n\n                                            <Grid item>\n\n                                                <FormControl >\n                                                    <InputLabel htmlFor=\"standard-adornment-password\">Enter new password</InputLabel>\n                                                    <Input\n                                                        className={classes.ChPasstextField}\n                                                        id=\"standard-adornment-password\"\n                                                        type={values.showPassword ? 'text' : 'password'}\n                                                        value={values.NewPassword}\n                                                        onChange={handleChange('NewPassword')}\n                                                        endAdornment={\n                                                            <InputAdornment>\n                                                                <IconButton\n                                                                    aria-label=\"toggle password visibility\"\n                                                                    onClick={handleClickShowPassword}\n                                                                    onMouseDown={handleMouseDownPassword}\n                                                                    edge=\"end\"\n                                                                >\n                                                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                                                                </IconButton>\n                                                            </InputAdornment>\n                                                        }\n                                                    />\n                                                </FormControl>\n                                            </Grid>\n\n                                            <Grid item>\n\n                                                <FormControl >\n                                                    <InputLabel htmlFor=\"standard-adornment-password\"> Verify password</InputLabel>\n                                                    <Input\n                                                        className={classes.ChPasstextField}\n                                                        id=\"standard-adornment-password\"\n                                                        type={values.showPassword ? 'text' : 'password'}\n                                                        value={values.VerifyPassword}\n                                                        onChange={handleChange('VerifyPassword')}\n                                                        endAdornment={\n                                                            <InputAdornment>\n                                                                <IconButton\n                                                                    aria-label=\"toggle password visibility\"\n                                                                    onClick={handleClickShowPassword}\n                                                                    onMouseDown={handleMouseDownPassword}\n                                                                    edge=\"end\"\n                                                                >\n                                                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                                                                </IconButton>\n                                                            </InputAdornment>\n                                                        }\n                                                    />\n                                                </FormControl>\n\n                                            </Grid>\n\n                                            <Grid item>\n                                                <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={classes.DoneBtn} >\n                                                    Done\n                                                  </Button>\n\n                                            </Grid>\n\n                                            <Container>  <Divider variant=\"middle\" /> </Container>\n\n                                            <Grid item\n                                                container\n                                                direction=\"row\"\n                                                justify='center'\n                                                alignItems='center'\n                                                spacing={0}\n                                            >\n                                                <Grid item>    <Typography className={classes.ForgetTypog}>Forget Password?</Typography></Grid>\n                                                <Grid item> <Button className={classes.ResetHereBtn}>Reset here</Button></Grid>\n\n                                            </Grid>\n                                        </Grid>\n                                    </div>\n                                </Modal>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </main>\n        </div>\n    );\n}\n\nAccountSecurty.propTypes = {\n\n    window: PropTypes.func,\n};\nexport default AccountSecurty","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/storage/index.ts",[],["231","232"],"/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/components/UserInfo.js",["233","234","235","236","237","238"],"import { useContext } from \"react\";\nimport {\n  Avatar,\n  Grid,\n  Chip,\n  Divider,\n  Typography,\n  Button,\n  Container,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Link as RouterLink,\n\n  // Redirect,\n  useHistory,\n} from \"react-router-dom\";\nimport { AuthContext } from \"../context/auth\";\n// import { useLazyQuery, useMutation, useQuery } from \"@apollo/client\";\n// import { FOLLOW_USER_GQL, PROFILE_GQL } from \"../graphql/Auth/authGql\";\nimport PropTypes from \"prop-types\";\nimport { useFollow } from \"../util/hooks\";\n\nconst img = \"avatars/7.jpg\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginLeft: 0,\n  },\n\n  avatar: {\n    width: theme.spacing(8),\n    height: theme.spacing(8),\n    marginTop: theme.spacing(0.75),\n\n    [theme.breakpoints.between(\"sm\", \"md\")]: {\n      width: theme.spacing(7),\n      height: theme.spacing(7),\n      marginTop: theme.spacing(1.25),\n    },\n    [theme.breakpoints.between(\"md\", \"xl\")]: {\n      width: theme.spacing(11),\n      height: theme.spacing(11),\n      marginTop: theme.spacing(2.75),\n    },\n  },\n\n  avatar2: {\n    // width: theme.spacing(4),\n    // height: theme.spacing(4),\n\n    [theme.breakpoints.between(\"sm\", \"xl\")]: {\n      // width: theme.spacing(5.75),\n      // height: theme.spacing(5.75),\n    },\n  },\n\n  typography: {\n    fontSize: \"20px\",\n    marginBottom: theme.spacing(1),\n\n    [theme.breakpoints.between(\"sm\", \"md\")]: {\n      // fontSize: \"15.5px\",\n    },\n    [theme.breakpoints.between(\"md\", \"xl\")]: {\n      marginBottom: theme.spacing(2),\n      fontSize: \"22px\",\n      fontStyle: \"normal\",\n      lineHeight: \"32px\",\n    },\n  },\n\n  chip: {\n    fontSize: \"14px\",\n    height: theme.spacing(3),\n    marginBottom: theme.spacing(1),\n\n    [theme.breakpoints.between(\"md\", \"xl\")]: {\n      fontSize: \"10px\",\n      height: theme.spacing(3),\n      marginBottom: theme.spacing(0.75),\n      marginTop: theme.spacing(0.75),\n    },\n    [theme.breakpoints.between(\"md\", \"xl\")]: {\n      height: theme.spacing(3),\n      fontSize: \"13px\",\n      marginBottom: theme.spacing(1),\n      marginTop: theme.spacing(0.75),\n    },\n  },\n\n  followBt: {\n    width: theme.spacing(11),\n  },\n\n  FollowBtn2: {\n    [theme.breakpoints.between(\"xs\", \"sm\")]: {\n      width: theme.spacing(1),\n      marginLeft: theme.spacing(-4),\n    },\n    [theme.breakpoints.between(\"sm\", \"md\")]: {\n      width: theme.spacing(9),\n      marginLeft: theme.spacing(1),\n    },\n  },\n\n  typogrFollowerFollwing: {\n    // [theme.breakpoints.between(\"xs\", \"sm\")]: {\n    //   // fontSize: '1px'\n    // },\n  },\n}));\n\n{\n  /* // UserInfo\"theSmallCard\"  */\n}\nexport function UserInfo(props) {\n  // const history = useHistory();\n  const classes = useStyles();\n  // const { user } = useContext(AuthContext);\n  const { followed, toggleFollow } = useFollow(props.id, props.isFollowed);\n\n  return (\n    <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"center\">\n      <Grid item xs>\n        <Avatar className={classes.avatar} alt={props.name} src={props.img} />\n      </Grid>\n\n      <Grid item xs>\n        <Typography\n          className={classes.typography}\n          variant=\"h6\"\n          component={RouterLink}\n          style={{ textDecoration: \"none\", color: \"black\" }}\n          to={`/userProfile/${props.userId}`}\n        >\n          {props.name}\n        </Typography>\n      </Grid>\n\n      <Grid item xs>\n        <Chip\n          className={classes.chip}\n          label={props.bio}\n          color=\"primary\"\n          variant=\"outlined\"\n        />\n      </Grid>\n\n      {/* //User Follow Button */}\n      <Grid item xs>\n        <Button\n          size=\"small\"\n          className={classes.followBt}\n          variant={followed ? \"outlined\" : \"contained\"}\n          color=\"primary\"\n          onClick={toggleFollow}\n        >\n          {followed ? \"Following\" : \"Follow\"}\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nUserInfo.defaultProps = {\n  userId: \"undefined\",\n  isFollowed: false,\n};\nUserInfo.propTypes = {\n  isFollowed: PropTypes.bool,\n  userId: PropTypes.string.isRequired,\n};\n{\n  /* // FollowerFollowingForm  */\n}\nexport function FollowerFollowingForm(props) {\n  const classes = useStyles();\n  const { followed, toggleFollow } = useFollow(props.userId, props.isFollowed);\n  return (\n    <Grid\n      spacing={2}\n      container\n      direction=\"row\"\n      justify=\"flex-start\"\n      alignItems=\"center\"\n    >\n      {/* // User Avatar  */}\n      <Grid item>\n        <Avatar\n          className={classes.avatar2}\n          alt={props.name}\n          src={props.avatar}\n        />\n      </Grid>\n\n      {/* // User info  */}\n      <Grid\n        item\n        xs={8}\n        container\n        alignItems=\"flex-start\"\n        justify=\"flex-start\"\n        direction=\"column\"\n      >\n        <Typography\n          className={classes.typogrFollowerFollwing}\n          variant=\"subtitle1\"\n          component={RouterLink}\n          style={{ textDecoration: \"none\", color: \"black\" }}\n          to={`/userProfile/${props.userId}`}\n        >\n          {props.name}\n        </Typography>\n        <Typography\n          className={classes.typogrFollowerFollwing}\n          variant=\"subtitle2\"\n        >\n          {props.bio}\n        </Typography>\n\n        <Container>\n          <Divider variant=\"middle\" />\n        </Container>\n      </Grid>\n\n      {/* //User Follow Button */}\n      <Grid item>\n        <Button\n          className={classes.FollowBtn2}\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={toggleFollow}\n        >\n          {followed ? \"Unfollow\" : \"Follow\"}\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\nFollowerFollowingForm.defaultProps = {};\nFollowerFollowingForm.propTypes = {\n  isFollowed: PropTypes.bool,\n};\n","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/util/hooks.js",["239","240","241"],"import { useMutation } from \"@apollo/client\";\nimport { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { AuthContext } from \"../context/auth\";\nimport { FOLLOW_USER_GQL } from \"../graphql/Auth/authGql\";\nimport { FOLLOW_COMPANY_GQL } from \"../graphql/Company/portfolioGql\";\nimport { LIKE_ARTCIEL_GQL } from \"../graphql/Content/articleGql\";\nimport { saveUserConfig, userConfigVar } from \"../storage/userConfig\";\n\nexport const useForm = (callback, initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const onChange = (event) => {\n    setValues({ ...values, [event.target.name]: event.target.value });\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    callback();\n  };\n\n  return {\n    onChange,\n    onSubmit,\n    values,\n  };\n};\n\nexport const useFollow = (id, initialState = false) => {\n  const [followed, setFollowed] = useState(initialState);\n  const { user } = useContext(AuthContext);\n  const history = useHistory();\n  const toggleFollow = () => {\n    if (user) {\n      setFollowed(!followed);\n      callFollow();\n    } else {\n      history.push(\"/login\");\n    }\n  };\n  const [callFollow, { loading }] = useMutation(FOLLOW_USER_GQL, {\n    variables: {\n      userId: id,\n    },\n    update(_, { data: { followUser: currentUser } }) {\n      userConfigVar({\n        followedUsers: currentUser.following,\n        portfolio: userConfigVar().portfolio,\n        username: userConfigVar().username,\n      });\n      saveUserConfig();\n      console.log(userConfigVar().followedUsers);\n    },\n  });\n\n  return {\n    followed,\n    toggleFollow,\n  };\n};\nexport const useLike = (articleId, initialState = false) => {\n  const [liked, setLiked] = useState(initialState);\n  const { user } = useContext(AuthContext);\n  const history = useHistory();\n  const toggleLike = () => {\n    if (user) {\n      setLiked(!liked);\n      callLiked();\n    } else {\n      history.push(\"/login\");\n    }\n  };\n  // const {user}=useContext(AuthContext);\n  // follow mutaion ==> updates cache\n  const [callLiked, { loading }] = useMutation(LIKE_ARTCIEL_GQL, {\n    variables: {\n      articleId,\n    },\n    update(_, { data: { likeArticle: LikedArticle } }) {\n      // userConfigVar({\n      //   followedUsers: currentUser.following,\n      // });\n      saveUserConfig();\n      // console.log(userConfigVar().followedUsers);\n    },\n  });\n  return {\n    liked,\n    toggleLike,\n  };\n};\nexport const useCompanyFollow = (companySybmol, initialState = false) => {\n  const [followedCompany, setFollowedCompany] = useState(initialState);\n  const { user } = useContext(AuthContext);\n  const history = useHistory();\n  const toggleFollowCompany = () => {\n    if (user) {\n      setFollowedCompany(!followedCompany);\n      callFollowCompany();\n    } else {\n      history.push(\"/login\");\n    }\n  };\n  const porto = userConfigVar().portfolio;\n  // const {user}=useContext(AuthContext);\n  // follow mutaion ==> updates cache\n  const [callFollowCompany, { loading }] = useMutation(FOLLOW_COMPANY_GQL, {\n    variables: {\n      portoId: porto.id,\n      symbol: companySybmol,\n    },\n    update(_, { data: { followCompany: portfolio } }) {\n      userConfigVar({\n        portfolio: portfolio,\n        followedUsers: userConfigVar().followedUsers,\n        username: userConfigVar().username,\n      });\n      saveUserConfig();\n      // console.log(userConfigVar().followedUsers);\n    },\n  });\n  return {\n    followedCompany,\n    toggleFollowCompany,\n  };\n};\n","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/components/UI/messages.js",[],"/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/components/Content/CommentComponents.js",[],"/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/components/Content/ContentCards.js",["242","243"],"import  { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Avatar,\n  Grid,\n  Typography,\n  Button,\n  Divider,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginLeft: 0,\n    paddingTop: theme.spacing(1),\n    paddingLeft: theme.spacing(2),\n    \"& hr\": {\n      margin: theme.spacing(1),\n      alignSelf: \"stretch\",\n    },\n    alignItems: \"center\",\n  },\n  title: {\n    color: theme.palette.common.black,\n    overflowWrap: \"anywhere\",\n    textDecoration: \"none\",\n    \"&:visited\": {\n      color: theme.palette.common.black,\n    },\n    padding: theme.spacing(1),\n  },\n  bio:{\n    color:\"#707070\"\n\n  },\n  cardLayout: {\n    marginTop: theme.spacing(2),\n    \"& .MuiTypography-h5\": {\n      paddingLeft: theme.spacing(2),\n      color: theme.palette.grey[700],\n      paddingTop: theme.spacing(2),\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: theme.typography.fontSize,\n      marginTop: theme.spacing(4),\n    },\n  },\n}));\n\nfunction ContentCard(props) {\n  const [state, setState] = useState({\n    withAuther: false,\n    crudOtion: false,\n  });\n  // useEffect(() => {\n  //   if (props.withAuther)\n  //     setState({\n  //       withAuther: props.withAuther,\n  //     });\n  //   if (props.crudOtion)\n  //     setState({\n  //       crudOtion: props.crudOtion,\n  //     });\n  // }, []);\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n      >\n        {state.withAuther ? (\n          <Grid item>\n            <Avatar alt={props.name} src={props.img} />\n          </Grid>\n        ) : (\n          <div></div>\n        )}\n\n        {/* // Content info  */}\n        <Grid item sm >\n          <Grid item  container direction=\"column\" >\n            <Grid item >\n              <Typography\n                component={RouterLink}\n                to={props.link}\n                variant=\"h6\"\n                className={classes.title}\n              >\n                {props.title}\n              </Typography>\n              \n              \n              \n              <Typography className={classes.bio}  variant=\"subtitle1\">{props.bio}</Typography>\n            </Grid>\n          </Grid>\n       </Grid>\n        {/* // Crud Buttons */}\n        {state.crudOtion ? (\n          <Grid container item>\n            <Button variant=\"contained\" color=\"primary\">\n              Edit\n            </Button>\n            <Button variant=\"contained\" color=\"secondary\">\n              Delete\n            </Button>\n          </Grid>\n        ) : null}\n      </Grid>\n      <Divider variant=\"fullWidth\" />\n    </div>\n  );\n}\nContentCard.defaultProps = {\n  withAuther: false,\n  crudOtion: false,\n  link: \"/\",\n};\nContentCard.propTypes = {\n  withAuther: PropTypes.bool,\n  crudOtion: PropTypes.bool,\n  name: PropTypes.string,\n  img: PropTypes.string,\n  bio: PropTypes.string,\n  title: PropTypes.string,\n  link: PropTypes.string,\n};\nfunction ContentCardPaper(props) {\n  const classes = useStyles();\n\n  const ContentCardsItems = () =>\n    props.data.slice(0, props.limit).map((e) => {\n      return (\n        <ContentCard\n          title={e.articleTitle ? e.articleTitle : e.title}\n          name={e.articleAuthor ? e.articleAuthor.name : e.name}\n          img={e.img}\n          bio={e.bio}\n          withAuther={props.auther}\n          link={`/article/${e.id}`}\n        />\n      );\n    });\n  return (\n    <div className={classes.cardLayout}>\n      <Typography variant=\"h5\">{props.title}</Typography>\n      {ContentCardsItems()}\n    </div>\n  );\n}\nContentCardPaper.defaultProps = {\n  auther: false,\n};\nContentCardPaper.propTypes = {\n  limit: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired,\n  auther: PropTypes.bool.isRequired,\n};\n\nexport { ContentCard, ContentCardPaper };\n","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/components/Company/CompanyCard.js",["244","245","246"],"import React, { useRef, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Divider,\n  Typography,\n  Grid,\n  IconButton,\n  Table,\n  TableRow,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableBody,\n  Button,\n} from \"@material-ui/core\";\nimport {\n  AreaChart,\n  ResponsiveContainer,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n} from \"recharts\";\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport KeyboardArrowLeftIcon from \"@material-ui/icons/KeyboardArrowLeft\";\nimport { Link } from \"react-router-dom\";\nimport { useCompanyFollow } from \"../../util/hooks\";\n\nconst userStyles = makeStyles((theme) => ({\n  companySymbol: {\n    color: theme.palette.primary.light,\n    fontWeight: theme.typography.fontWeightBold,\n    [theme.breakpoints.up(\"lg\")]: {\n      fontSize: theme.typography.fontSize * 1.5,\n    },\n  },\n  price: {\n    color: theme.palette.common.black,\n    fontWeight: theme.typography.fontWeightBold,\n  },\n  changePrice: {\n    fontWeight: theme.typography.fontWeightBold,\n    [theme.breakpoints.up(\"lg\")]: {\n      fontSize: theme.typography.fontSize,\n    },\n  },\n\n  tableContent: {\n    fontWeight: \"400px\",\n    [theme.breakpoints.up(\"lg\")]: {\n      fontSize: \"24px\",\n    },\n  },\n\n  negative: {\n    color: theme.palette.error.dark,\n  },\n  positvie: {\n    color: theme.palette.success.dark,\n  },\n  verticalCard: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n    padding: theme.spacing(1),\n    paddingRight: theme.spacing(2),\n    [theme.breakpoints.up(\"md\")]: {\n      paddingRight: theme.spacing(10),\n    },\n  },\n  vertRoot: {\n    // \"& hr\": {\n    //   margin: theme.spacing(0, 0.5),\n    //   alignSelf: \"stretch\",\n    //   height: \"auto\",\n    // },\n    borderRight: `2px solid ${theme.palette.divider}`,\n    borderRadius: theme.shape.borderRadius,\n    paddingRight: theme.spacing(2),\n    marginLeft: theme.spacing(1),\n    \"& .price\": {\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n    // paddingLeft:theme.spacing(1)\n  },\n  companyLine: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    flexWrap: \"nowrap\",\n    overflowX: \"scroll\",\n    overflowY: \"hidden\",\n    // whiteSpace: 'nowrap',\n    padding: theme.spacing(0),\n    \"-webkit-overflow-scrolling\": \"touch\",\n    \"&::-webkit-scrollbar\": {\n      display: \"none\",\n    },\n    scrollBehavior: \"smooth\",\n  },\n  companyLineScroll: {\n    width: \"100%\",\n    overflowX: \"auto\",\n    \"-webkit-overflow-scrolling\": \"touch\",\n    \"&::-webkit-scrollbar\": {\n      display: \"none\",\n    },\n    \"& .vertRoot\": {\n      flex: \"0 0 auto\",\n      marginRight: \" 3px\",\n    },\n  },\n  arrowButtons: {\n    zIndex: 2,\n    transform: \"matrix(-1, 0, 0, 1, 0, 0)\",\n    paddingLeft: theme.spacing(1),\n  },\n  minitable: {\n    minWidth: 340,\n    \"& .MuiTableCell-head\": {\n      fontWeight: theme.typography.fontWeightBold,\n      [theme.breakpoints.up(\"md\")]: {\n        fontSize: theme.typography.fontSize * 1.2,\n      },\n    },\n    \"& .MuiTableCell-root\": {\n      padding: theme.spacing(1),\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      minWidth: 400,\n    },\n  },\n  followCardLayout: {\n    padding: theme.spacing(2),\n    \"& .MuiTypography-h5\": {\n      fontWeight: theme.typography.fontWeightBold,\n      fontSize: theme.typography.fontSize * 2,\n    },\n    \"& .MuiTypography-body1\": {\n      fontWeight: theme.typography.fontWeightRegular,\n      fontSize: theme.typography.fontSize * 1.5,\n      [theme.breakpoints.up(\"lg\")]: {\n        paddingLeft: theme.spacing(1),\n      },\n    },\n    \"& .MuiTypography-h6\": {\n      fontWeight: theme.typography.fontWeightBold,\n      fontSize: theme.typography.fontSize * 2,\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n      \"& .MuiGrid-justify-xs-space-between\": {\n        alignItems: \"center\",\n      },\n    },\n  },\n  typographyDiv_followCardLayout: {\n    [theme.breakpoints.up(\"lg\")]: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n  },\n  ChartRoot: {\n    width: 400,\n    [theme.breakpoints.up(\"lg\")]: {\n      width: 900,\n    },\n  },\n  LeftCol: {\n    paddingLeft: theme.spacing(5),\n    [theme.breakpoints.up(\"lg\")]: {\n      marginRight: theme.spacing(4),\n    },\n  },\n  CompanyProfileLayout: {\n    padding: theme.spacing(2),\n    // width: \"100%\",\n  },\n  labelLayout: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    fontWeight: theme.typography.fontWeightBold,\n    fontSize: theme.typography.fontSize * 1.5,\n    paddingTop: theme.spacing(2),\n    padding: theme.spacing(1),\n    \"& p\": {\n      paddingLeft: theme.spacing(12),\n    },\n  },\n  title: {\n    color: theme.palette.grey[700],\n  },\n}));\n\n// Variant , Size\n\n// Data : Symbol(Compnay) , Price , Change\nfunction CompanyCard(props) {\n  const classes = userStyles();\n  const VerticalCard = () => {\n    return (\n      <div className={classes.vertRoot}>\n        <Grid Container className={classes.verticalCard} direction=\"row\">\n          <Grid item>\n            <Typography\n              component={Link}\n              to={`/company/${props.comId}`}\n              target=\"_blank\"\n              variant=\"subtitle2\"\n              className={classes.companySymbol}\n            >\n              {props.Symbol}\n            </Typography>\n            <Typography variant=\"subtitle2\" className={classes.price}>\n              {props.price}\n            </Typography>\n            <ChangePriceValue changePrice={props.change} />\n          </Grid>\n          <Grid item>\n            <Divider orientation=\"vertical\" />\n          </Grid>\n        </Grid>\n      </div>\n    );\n  };\n  const horizontalCard = () => {\n    return (\n      <TableRow>\n        <TableCell>\n          <Typography\n            component={Link}\n            to={`/company/${props.comId}`}\n            target=\"_blank\"\n            variant=\"subtitle2\"\n            className={classes.companySymbol}\n          >\n            {props.Symbol}\n          </Typography>\n        </TableCell>\n        <TableCell>\n          <Typography variant=\"subtitle2\" className={classes.tableContent}>\n            {props.price}\n          </Typography>\n        </TableCell>{\" \"}\n        <TableCell>\n          <ChangePriceValue changePrice={props.change} />\n        </TableCell>\n        {props.volume ? (\n          <TableCell>\n            <Typography variant=\"subtitle2\" className={classes.tableContent}>\n              {props.volume}\n            </Typography>\n          </TableCell>\n        ) : null}\n        {props.avgVolume ? (\n          <TableCell>\n            <Typography variant=\"subtitle2\" className={classes.tableContent}>\n              {props.avgVolume}\n            </Typography>\n          </TableCell>\n        ) : null}\n        {props.prevClose ? (\n          <TableCell>\n            <Typography variant=\"subtitle2\" className={classes.tableContent}>\n              {props.prevClose}\n            </Typography>\n          </TableCell>\n        ) : null}\n        {props.open ? (\n          <TableCell>\n            <Typography variant=\"subtitle2\" className={classes.tableContent}>\n              {props.open}\n            </Typography>\n          </TableCell>\n        ) : null}\n      </TableRow>\n    );\n  };\n  return props.vertical ? VerticalCard() : horizontalCard();\n}\n\nCompanyCard.defaultProps = {\n  vertical: false,\n  horizontal: false,\n};\nCompanyCard.propTypes = {\n  vertical: PropTypes.bool.isRequired,\n  horizontal: PropTypes.bool.isRequired,\n  name: PropTypes.string,\n  Symbol: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  change: PropTypes.number.isRequired,\n  changePerce: PropTypes.number.isRequired,\n  volume: PropTypes.number.isRequired,\n  avgVolume: PropTypes.number.isRequired,\n  prevClose: PropTypes.number.isRequired,\n  open: PropTypes.number.isRequired,\n};\n\nfunction CompanyCardLine(props) {\n  const ref = useRef(null);\n\n  const scroll = (scrollOffset) => {\n    ref.current.scrollLeft += scrollOffset;\n  };\n  const classes = userStyles();\n\n  return (\n    <div className={classes.companyLineScroll}>\n      <div className={classes.companyLine} ref={ref}>\n        {props.data.map((e) => (\n          <CompanyCard\n            vertical={true}\n            Symbol={e.symbol ? e.symbol : e.Symbol}\n            price={e.todayFinance ? e.todayFinance.close : e.price}\n            change={e.change ? e.change : e.changePrice}\n            comId={e.id}\n          />\n        ))}\n      </div>\n      <div className={classes.arrowButtons}>\n        <IconButton size=\"small\" onClick={() => scroll(500)}>\n          <KeyboardArrowLeftIcon fontSize=\"small\" />\n        </IconButton>\n        <IconButton size=\"small\" onClick={() => scroll(-500)}>\n          <KeyboardArrowRightIcon fontSize=\"small\" />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n\nCompanyCardLine.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n\nfunction MiniCompanyCardTable(props) {\n  const classes = userStyles();\n\n  return (\n    <TableContainer\n      className={classes.minitable}\n      style={{ minWidth: props.minWidth === 0 ? \"inherent\" : props.minWidth }}\n    >\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Company</TableCell>\n            <TableCell>Price</TableCell>\n            <TableCell>Change</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.data.slice(0, props.limit).map((e) => (\n            <CompanyCard\n              horizontal={true}\n              Symbol={e.symbol ? e.symbol : e.Symbol}\n              price={e.todayFinance ? e.todayFinance.close : e.price}\n              change={e.change ? e.change : e.changePrice}\n              comId={e.id}\n            />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\nMiniCompanyCardTable.propTypes = {\n  data: PropTypes.array.isRequired,\n  limit: PropTypes.number,\n  minWidth: PropTypes.number,\n};\nMiniCompanyCardTable.defaultProps = {\n  limit: 0,\n  minWidth: 0,\n};\n\nexport function BigCompanyCardTable(props) {\n  const classes = userStyles();\n\n  return (\n    <TableContainer\n      className={classes.minitable}\n      style={{ minWidth: props.minWidth === 0 ? \"inherent\" : props.minWidth }}\n    >\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell style={{ fontWeight: \"400\" }}>Company</TableCell>\n            <TableCell style={{ fontWeight: \"400\" }}>Price</TableCell>\n            <TableCell style={{ fontWeight: \"400\" }}>Change</TableCell>\n            <TableCell style={{ fontWeight: \"400\" }}>Volume</TableCell>\n            <TableCell style={{ fontWeight: \"400\" }}>Avg.Volume</TableCell>\n            <TableCell style={{ fontWeight: \"400\" }}>Prev.close</TableCell>\n            <TableCell style={{ fontWeight: \"400\" }}>Open</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.data.slice(0, props.limit).map((e) => (\n            <CompanyCard\n              Symbol={e.symbol}\n              price={e.todayFinance.close}\n              change={e.change}\n              changePerce={0}\n              volume={e.todayFinance.volume}\n              avgVolume={e.todayFinance.high}\n              prevClose={e.todayFinance.close}\n              open={e.todayFinance.Open}\n              horizontal\n            />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\nBigCompanyCardTable.propTypes = {\n  data: PropTypes.array.isRequired,\n  limit: PropTypes.number,\n  minWidth: PropTypes.number,\n};\nBigCompanyCardTable.defaultProps = {\n  limit: 0,\n  minWidth: 0,\n};\n\n/**\n * Company Card With Follow Button\n * @param {*} props\n * @returns\n */\nfunction CompanyCardFollow(props) {\n  const { followedCompany, toggleFollowCompany } = useCompanyFollow(\n    props.Symbol,\n    props.isFollowed\n  );\n  const classes = userStyles();\n  return (\n    <div className={classes.followCardLayout}>\n      <Grid container direction=\"row\" justify=\"space-between\">\n        <Grid item>\n          <div className={classes.typographyDiv_followCardLayout}>\n            <Typography variant=\"h5\">{props.Symbol}</Typography>\n            <Typography variant=\"body1\">{props.name}</Typography>\n          </div>\n          <div className={classes.typographyDiv_followCardLayout}>\n            <Typography variant=\"h6\">{props.price}</Typography>\n            <ChangePriceValue changePrice={props.changePrice} />\n          </div>\n        </Grid>\n        <Grid item>\n          <Button variant=\"outlined\" size=\"large\" onClick={toggleFollowCompany}>\n            {followedCompany ? \"Unfollow\" : \"Follow\"}\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nCompanyCardFollow.defaultProps = {\n  isFollowed: false,\n};\nCompanyCardFollow.propTypes = {\n  Symbol: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  changePrice: PropTypes.string.isRequired,\n  isFollowed: PropTypes.bool.isRequired,\n};\n\nconst ChangePriceValue = (props) => {\n  const classes = userStyles();\n  const str = props.changePrice ? props.changePrice.toString() : \"23(+4.1%)\";\n  var signReg = /(\\+|\\-)/g;\n  const sign = str.split(signReg)[1];\n  const signStyle = sign === \"+\" ? classes.positvie : classes.negative;\n  return (\n    <Typography\n      variant=\"body1\"\n      className={`${classes.changePrice} ${signStyle}`}\n    >\n      {props.changePrice}\n    </Typography>\n  );\n};\nChangePriceValue.propTypes = {\n  changePrice: PropTypes.string.isRequired,\n};\nconst cleaning = (data) => {\n  var newArray = data.map((a) => ({ ...a }));\n  newArray.map((e) => (e.date = e.date.split(\"T\")[0]));\n  return newArray;\n};\nfunction RenderCompanyChart(props) {\n  const classes = userStyles();\n  const cleanedData = cleaning(props.data);\n  const [state, setState] = useState({\n    mobileView: false,\n  });\n\n  // const { mobileView } = state;\n\n  useEffect(() => {\n    const setResponsiveness = () => {\n      return window.innerWidth < 900\n        ? setState((prevState) => ({ ...prevState, mobileView: true }))\n        : setState((prevState) => ({ ...prevState, mobileView: false }));\n    };\n\n    setResponsiveness();\n\n    window.addEventListener(\"resize\", () => setResponsiveness());\n  }, []);\n  return (\n    <div className={classes.ChartRoot}>\n      <ResponsiveContainer width=\"100%\" height={250}>\n        <AreaChart\n          margin={{ top: 10, right: 30, left: -20, bottom: 0 }}\n          data={cleanedData}\n        >\n          <defs>\n            <linearGradient id=\"colorClose\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8} />\n              <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0} />\n            </linearGradient>\n            {/* <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n            <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8} />\n            <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0} />\n          </linearGradient> */}\n          </defs>\n          <XAxis dataKey={props.XAxis} />\n          <YAxis />\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <Tooltip />\n          <Area\n            type=\"monotone\"\n            dataKey={props.dataKey}\n            stroke=\"#8884d8\"\n            fillOpacity={1}\n            fill=\"url(#colorClose)\"\n          />\n          {/* <Area\n          type=\"monotone\"\n          dataKey=\"close\"\n          stroke=\"#82ca9d\"\n          fillOpacity={1}\n          fill=\"url(#colorPv)\"\n        /> */}\n        </AreaChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\nRenderCompanyChart.defaultProps = {\n  limit: 7,\n  XAxis: \"date\",\n  dataKey: \"close\",\n};\nRenderCompanyChart.propTypes = {\n  data: PropTypes.array.isRequired,\n  limit: PropTypes.number.isRequired,\n  dataKey: PropTypes.string.isRequired,\n  XAxis: PropTypes.string.isRequired,\n};\n\nfunction CompanyMiniDataTable(props) {\n  const classes = userStyles();\n  const array = Object.entries(props.data);\n  const half = array.length / 2;\n  const bData = (key, value) =>\n    (key === \"date\") | (key === \"__typename\") ? null : (\n      <TableRow>\n        <TableCell>\n          <Typography variant=\"h6\">{key}</Typography>\n        </TableCell>\n        <TableCell>\n          <Typography align=\"left\" variant=\"h6\">\n            {value}\n          </Typography>\n        </TableCell>\n      </TableRow>\n    );\n  return (\n    <TableContainer className={classes.minitable}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\">\n              <Typography className={classes.title} variant=\"h5\">\n                {props.title}\n              </Typography>\n            </TableCell>\n            {/* <TableCell></TableCell> */}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <column className={classes.LeftCol}>\n            {array.slice(0, half).map(([key, value], i) => bData(key, value))}\n          </column>{\" \"}\n          <column>\n            {array\n              .slice(half, undefined)\n              .map(([key, value], i) => bData(key, value))}\n          </column>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\nCompanyMiniDataTable.defaultProps = {\n  title: \"Company Data\",\n};\nCompanyMiniDataTable.propTypes = {\n  data: PropTypes.object.isRequired,\n  title: PropTypes.string,\n};\n\nfunction CompanyProfile(props) {\n  const classes = userStyles();\n  let array = Object.entries(props.companyInfo);\n  array = array.filter(([key, value]) => (key !== \"name\") | (key !== \"bio\"));\n  const label = (key, value) =>\n    (key === \"name\") | (key === \"bio\") ? null : (\n      <div style={{ width: \"inherent\" }}>\n        <div className={classes.labelLayout}>\n          <Typography variant=\"inherit\">{key}</Typography>\n          <Typography variant=\"body1\">{value}</Typography>\n        </div>{\" \"}\n        <Divider orientation=\"horizontal\" />\n      </div>\n    );\n  return (\n    <div className={classes.CompanyProfileLayout}>\n      <Grid container direction=\"column\">\n        <Grid item>\n          <div>\n            <Typography variant=\"h4\">{`${props.companyInfo.name} Profile`}</Typography>\n            <Typography variant=\"body1\">{props.companyInfo.bio}</Typography>\n          </div>\n        </Grid>\n        <Grid\n          container\n          direction=\"row\"\n          alignItems=\"flex-start\"\n          justify=\"space-between\"\n        >\n          <Grid item xs lg={5}>\n            {label(\"Secotr\", props.companyInfo.sector)}\n            {label(\"Address\", props.companyInfo.address)}\n          </Grid>\n          <Grid item xs lg={5}>\n            {label(\"Industry\", props.companyInfo.industry)}\n            {label(\"Phone Number\", props.companyInfo.phoneNumber)}\n            {label(\"Website\", props.companyInfo.website)}\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nCompanyProfile.propTypes = {\n  companyInfo: PropTypes.object.isRequired,\n};\n\nexport {\n  CompanyCard,\n  CompanyCardLine,\n  MiniCompanyCardTable,\n  CompanyCardFollow,\n  RenderCompanyChart,\n  CompanyMiniDataTable,\n  CompanyProfile,\n};\n","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/graphql/homeGql.js",[],"/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/graphql/Auth/authGql.js",[],"/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/storage/cache.ts",[],"/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/graphql/Content/articleGql.js",[],"/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/graphql/Company/companyGql.js",[],"/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/storage/userConfig/index.ts",[],"/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/storage/userConfig/userConfigVar.ts",[],"/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/storage/userConfig/saveUserConfig.ts",[],"/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/storage/userConfig/initialUserConfig.ts",[],"/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/graphql/Company/portfolioGql.js",[],"/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/graphql/Content/draftsGql.js",[],"/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/graphql/Content/commentGql.js",[],"/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/components/AnalystInfo.js",[],"/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/components/Editor.js",["247","248","249","250","251"],"import React, { useState } from \"react\";\n\nimport { useQuill } from \"react-quilljs\";\n// or const { useQuill } = require('react-quilljs');\n\nimport \"quill/dist/quill.snow.css\"; // Add css for snow theme\n// or import 'quill/dist/quill.bubble.css'; // Add css for bubble theme\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { gql, useMutation } from \"@apollo/client\";\n// import { useForm } from \"../util/hooks\";\nconst s3SignMutation = gql`\n  mutation($filename: String!, $filetype: String!) {\n    signS3(filename: $filename, filetype: $filetype) {\n      url\n      signedRequest\n    }\n  }\n`;\nexport function Editor(props) {\n  const theme = \"snow\";\n  const placeholder = props.placeholder;\n\n  const modules = {\n    toolbar: [\n      [\"bold\", \"italic\", \"underline\", \"strike\"], // toggled buttons\n      [\"blockquote\", \"code-block\"],\n\n      [{ header: 1 }, { header: 2 }], // custom button values\n      [{ list: \"ordered\" }, { list: \"bullet\" }],\n      [{ script: \"sub\" }, { script: \"super\" }], // superscript/subscript\n      [{ indent: \"-1\" }, { indent: \"+1\" }], // outdent/indent\n      [{ direction: \"rtl\" }], // text direction\n\n      [{ size: [\"small\", false, \"large\", \"huge\"] }], // custom dropdown\n      [{ header: [1, 2, 3, 4, 5, 6, false] }],\n\n      [{ color: [] }, { background: [] }], // dropdown with defaults from theme\n      [{ font: [] }],\n      [{ align: [] }],\n      [\"link\", \"image\", \"video\"],\n\n      [\"clean\"], // remove formatting button\n    ],\n  };\n  const formats = [\n    // Inline\n    \"font\",\n    \"size\",\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"strike\",\n    // Block\n    \"blockquote\",\n    \"code-block\",\n    \"list\",\n    \"bullet\",\n    \"indent\",\n    \"link\",\n    \"direction\",\n    \"align\",\n    \"header\",\n\n    //   Embeds\n    \"image\",\n    \"video\",\n  ];\n  const { quill, quillRef } = useQuill({\n    theme,\n    modules,\n    formats,\n    placeholder,\n  });\n  const [hasBody, setHasBody] = useState(false);\n  const [body, setBody] = useState(\"\");\n  // const [files, setFiles] = useState([]);\n  const [filename, setFileName] = useState();\n  const [filetype, setFileType] = useState();\n\n  // Insert Image(selected by user) to quill\n  const insertToEditor = (url) => {\n    const range = quill.getSelection();\n    quill.insertEmbed(range.index, \"image\", url);\n  };\n  const [getS3SignedUrl, { loading, data, error }] = useMutation(\n    s3SignMutation,\n    {\n      variables: {\n        filename,\n        filetype,\n      },\n    }\n  );\n\n  function getS3SignedUrlCallBack() {\n    getS3SignedUrl();\n  }\n  const uploadToS3 = async (file, signedRequest) => {\n    const options = {\n      headers: {\n        \"Content-Type\": file.type,\n      },\n    };\n    await axios.put(signedRequest, file, options);\n  };\n  const formatFilename = (filename) => {\n    const date = moment().format(\"YYYYMMDD\");\n    const randomString = Math.random().toString(36).substring(2, 7);\n    const cleanFileName = filename.toLowerCase().replace(/[^a-z0-9]/g, \"-\");\n    const newFilename = `${date}-${randomString}-${cleanFileName}`;\n    return newFilename.substring(0, 60);\n  };\n  // Upload Image to Image Server such as AWS S3, Cloudinary, Cloud Storage, etc..\n  const saveToServer = async (file) => {\n    const body = new FormData();\n    body.append(\"file\", file);\n    setFileName(formatFilename(file.name));\n    setFileType(file.type);\n    const res = (await getS3SignedUrl()).data;\n\n    const response = res.signS3;\n    const { signedRequest, url } = response;\n    console.log(`signed ${signedRequest}`);\n    await uploadToS3(file, signedRequest);\n    insertToEditor(url);\n  };\n  const handleChange = () => {\n    if (quill) {\n      const html = quill.root.innerHTML;\n      // console.log(`${html}`);\n      setBody(html.toString());\n      console.log(body);\n      props.onEditorChange(html);\n    }\n  };\n  // Open Dialog to select Image File\n  const selectLocalImage = () => {\n    const input = document.createElement(\"input\");\n    input.setAttribute(\"type\", \"file\");\n    input.setAttribute(\"accept\", \"image/*\");\n    input.click();\n\n    input.onchange = () => {\n      const file = input.files[0];\n      saveToServer(file);\n    };\n  };\n  React.useEffect(() => {\n    if (quill) {\n      if (props.body !== \"\" && !hasBody) {\n        console.log(`assign body`);\n\n        setHasBody(true);\n        const fetchedBody = props.body;\n        console.log(fetchedBody);\n        quill.clipboard.dangerouslyPasteHTML(fetchedBody);\n      } else {\n        console.log(`No Body`);\n      }\n      quill.on(\"editor-change\", () => {\n        handleChange();\n      });\n      // Add custom handler for Image Upload\n      quill.getModule(\"toolbar\").addHandler(\"image\", selectLocalImage);\n    }\n  }, [quill, body]);\n  return (\n    <div style={{ maxWidth: \"700px\", height: 300, marginBottom: 100 }}>\n      <div ref={quillRef} />\n    </div>\n  );\n}\n","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/components/Company/edfitformport.js",["252","253","254"],"import  { useState } from 'react'\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { gql } from \"@apollo/client\";\nimport { useMutation } from \"@apollo/client\";\nimport { useForm } from \"../../util/hooks\";\nimport {  makeStyles } from \"@material-ui/core/styles\";\nimport { Link as RouterLink, Redirect } from \"react-router-dom\";\nimport { CircularProgress } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\",\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    GTsubmit: {\n        margin: theme.spacing(3, 0, 0),\n    },\n\n\n}));\nconst EDIT_PORT = gql`\n\nmutation editPortfolio(\n    $portoId: ID! \n    $name: String! \n    $tags: [String!] \n    ) {\n        editPortfolio(name:$name , tags:$tags ,portoId:$portoId ){\n        name\n  }\n}\n`;\n\n\nconst EditFormport = (props) => {\n    const classes = useStyles();\n\n    const [modal, setModal] = useState(false);\n    // const toggle = () => {\n    //     setModal(!modal);\n    //     console.log(values);\n    // };\n    const { onChange,  values } = useForm(CreateCompanyInfoCallBack, {\n        portoId: props.portoId,\n        name: null,\n        tags: null,\n    });\n    const [CreateCompanyInfo, { loading }] = useMutation(EDIT_PORT, {\n        onError(error) {\n            console.log(`Error Happend Updating user info ${error}`);\n        },\n        onCompleted(data) {\n            console.log(\"here\");\n        },\n    });\n    function CreateCompanyInfoCallBack() {\n        console.log(`Called `);\n        CreateCompanyInfo();\n    }\n    return (\n        <>\n\n            <div className={classes.paper}>\n                <form className={classes.form} onSubmit={(event) => {\n                    event.preventDefault();\n                    var arr = [];\n                    arr = (values.tags).split(\",\");\n                    CreateCompanyInfo({\n                        variables: {\n                            portoId: props.portoId,\n                            name: values.name,\n                            tags: arr,\n                        }\n                    });\n\n                    <Redirect to=\"/portfolio\" />\n                }}>\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        label=\"Portfolio Name\"\n                        name=\"name\"\n                        autoComplete=\"name\"\n                        id=\"name\"\n                        autoFocus\n                        onChange={onChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"tags\"\n                        autoComplete=\"tags\"\n                        id=\"tags\"\n                        label=\"Tags Followed By  , \"\n                        onChange={onChange}\n                    />\n                    {loading ? (\n                        <CircularProgress />\n                    ) : (\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            submit\n                        </Button>\n                    )}\n                </form>\n            </div>\n\n\n\n        </>\n    )\n\n}\n\nexport default EditFormport","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/components/Company/inputformport.js",["255","256","257"],"import  { useState } from 'react'\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { gql } from \"@apollo/client\";\nimport { useMutation } from \"@apollo/client\";\nimport { useForm } from \"../../util/hooks\";\nimport {  makeStyles } from \"@material-ui/core/styles\";\nimport { Link as RouterLink, Redirect } from \"react-router-dom\";\nimport { CircularProgress } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme) => ({\n\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  GTsubmit: {\n    margin: theme.spacing(3, 0, 0),\n  },\n\n\n}));\nconst CREATE_PORT = gql`\n\nmutation createPortfolio(\n    $name: String = null ,  \n    $tags: [String!] = null\n    ) {\n    createPortfolio(name:$name , tags:$tags){\n        name\n  }\n}\n`;\n\n\nconst InputFormPort = (props) => {\n  const classes = useStyles();\n\n  const [modal, setModal] = useState(false);\n  // const toggle = () => {\n  //   setModal(!modal);\n  //   console.log(values);\n  // };\n  const { onChange,  values } = useForm(CreateCompanyInfoCallBack, {\n    name: null,\n    tags: null,\n  });\n  const [CreateCompanyInfo, { loading }] = useMutation(CREATE_PORT, {\n    onError(error) {\n      console.log(`Error Happend Updating user info ${error}`);\n    },\n    onCompleted(data) {\n      console.log(\"here\");\n    },\n  });\n  function CreateCompanyInfoCallBack() {\n    console.log(`Called `);\n    CreateCompanyInfo();\n  }\n  return (\n    <>\n\n      <div className={classes.paper}>\n        <form className={classes.form} onSubmit={(event) => {\n          event.preventDefault();\n          var arr = [];\n          arr = (values.tags).split(\",\");\n          console.log(arr[0]);\n          CreateCompanyInfo({\n            variables: {\n              name: values.name,\n              tags: arr,\n            }\n          });\n\n          <Redirect to=\"/portfolio\" />\n        }}>\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Portfolio Name\"\n            name=\"name\"\n            autoComplete=\"name\"\n            id=\"name\"\n            autoFocus\n            onChange={onChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"tags\"\n            autoComplete=\"tags\"\n            id=\"tags\"\n            label=\"Tags Followed By  , \"\n            onChange={onChange}\n          />\n          {loading ? (\n            <CircularProgress />\n          ) : (\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              submit\n            </Button>\n          )}\n        </form>\n      </div>\n\n\n\n    </>\n  )\n\n}\n\nexport default InputFormPort","/Users/abdulmosenalmotlaq/Documents/GitHub/alphaplus/Client/alpha-p-web/src/views/404.js",["258","259"],{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","severity":1,"message":"265","line":16,"column":8,"nodeType":"266","messageId":"267","endLine":16,"endColumn":18},{"ruleId":"264","severity":1,"message":"268","line":17,"column":8,"nodeType":"266","messageId":"267","endLine":17,"endColumn":19},{"ruleId":"264","severity":1,"message":"269","line":63,"column":19,"nodeType":"266","messageId":"267","endLine":63,"endColumn":29},{"ruleId":"264","severity":1,"message":"269","line":60,"column":19,"nodeType":"266","messageId":"267","endLine":60,"endColumn":29},{"ruleId":"264","severity":1,"message":"270","line":22,"column":3,"nodeType":"266","messageId":"267","endLine":22,"endColumn":14},{"ruleId":"264","severity":1,"message":"271","line":258,"column":7,"nodeType":"266","messageId":"267","endLine":258,"endColumn":23},{"ruleId":"264","severity":1,"message":"272","line":33,"column":7,"nodeType":"266","messageId":"267","endLine":33,"endColumn":24},{"ruleId":"264","severity":1,"message":"273","line":66,"column":7,"nodeType":"266","messageId":"267","endLine":66,"endColumn":24},{"ruleId":"264","severity":1,"message":"274","line":104,"column":7,"nodeType":"266","messageId":"267","endLine":104,"endColumn":20},{"ruleId":"275","severity":1,"message":"276","line":277,"column":1,"nodeType":"277","messageId":"278","endLine":279,"endColumn":2},{"ruleId":"264","severity":1,"message":"279","line":281,"column":9,"nodeType":"266","messageId":"267","endLine":281,"endColumn":14},{"ruleId":"264","severity":1,"message":"280","line":1,"column":27,"nodeType":"266","messageId":"267","endLine":1,"endColumn":36},{"ruleId":"264","severity":1,"message":"281","line":2,"column":10,"nodeType":"266","messageId":"267","endLine":2,"endColumn":14},{"ruleId":"264","severity":1,"message":"282","line":3,"column":8,"nodeType":"266","messageId":"267","endLine":3,"endColumn":15},{"ruleId":"264","severity":1,"message":"283","line":5,"column":10,"nodeType":"266","messageId":"267","endLine":5,"endColumn":18},{"ruleId":"264","severity":1,"message":"284","line":16,"column":18,"nodeType":"266","messageId":"267","endLine":16,"endColumn":28},{"ruleId":"264","severity":1,"message":"285","line":27,"column":10,"nodeType":"266","messageId":"267","endLine":27,"endColumn":16},{"ruleId":"264","severity":1,"message":"286","line":28,"column":10,"nodeType":"266","messageId":"267","endLine":28,"endColumn":31},{"ruleId":"264","severity":1,"message":"270","line":30,"column":3,"nodeType":"266","messageId":"267","endLine":30,"endColumn":14},{"ruleId":"264","severity":1,"message":"287","line":135,"column":9,"nodeType":"266","messageId":"267","endLine":135,"endColumn":13},{"ruleId":"264","severity":1,"message":"288","line":138,"column":10,"nodeType":"266","messageId":"267","endLine":138,"endColumn":19},{"ruleId":"264","severity":1,"message":"289","line":138,"column":21,"nodeType":"266","messageId":"267","endLine":138,"endColumn":33},{"ruleId":"264","severity":1,"message":"290","line":153,"column":33,"nodeType":"266","messageId":"267","endLine":153,"endColumn":40},{"ruleId":"264","severity":1,"message":"291","line":165,"column":9,"nodeType":"266","messageId":"267","endLine":165,"endColumn":12},{"ruleId":"292","severity":1,"message":"293","line":274,"column":15,"nodeType":"294","messageId":"295","endLine":274,"endColumn":17},{"ruleId":"264","severity":1,"message":"296","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":27},{"ruleId":"264","severity":1,"message":"280","line":1,"column":39,"nodeType":"266","messageId":"267","endLine":1,"endColumn":48},{"ruleId":"264","severity":1,"message":"297","line":2,"column":10,"nodeType":"266","messageId":"267","endLine":2,"endColumn":19},{"ruleId":"264","severity":1,"message":"284","line":2,"column":29,"nodeType":"266","messageId":"267","endLine":2,"endColumn":39},{"ruleId":"264","severity":1,"message":"298","line":17,"column":10,"nodeType":"266","messageId":"267","endLine":17,"endColumn":21},{"ruleId":"264","severity":1,"message":"299","line":29,"column":7,"nodeType":"266","messageId":"267","endLine":29,"endColumn":15},{"ruleId":"264","severity":1,"message":"300","line":10,"column":5,"nodeType":"266","messageId":"267","endLine":10,"endColumn":11},{"ruleId":"264","severity":1,"message":"301","line":31,"column":8,"nodeType":"266","messageId":"267","endLine":31,"endColumn":14},{"ruleId":"264","severity":1,"message":"299","line":53,"column":7,"nodeType":"266","messageId":"267","endLine":53,"endColumn":15},{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","severity":1,"message":"296","line":1,"column":10,"nodeType":"266","messageId":"267","endLine":1,"endColumn":20},{"ruleId":"264","severity":1,"message":"302","line":16,"column":3,"nodeType":"266","messageId":"267","endLine":16,"endColumn":13},{"ruleId":"264","severity":1,"message":"298","line":18,"column":10,"nodeType":"266","messageId":"267","endLine":18,"endColumn":21},{"ruleId":"264","severity":1,"message":"291","line":24,"column":7,"nodeType":"266","messageId":"267","endLine":24,"endColumn":10},{"ruleId":"275","severity":1,"message":"276","line":114,"column":1,"nodeType":"277","messageId":"278","endLine":116,"endColumn":2},{"ruleId":"275","severity":1,"message":"276","line":174,"column":1,"nodeType":"277","messageId":"278","endLine":176,"endColumn":2},{"ruleId":"264","severity":1,"message":"303","line":41,"column":24,"nodeType":"266","messageId":"267","endLine":41,"endColumn":31},{"ruleId":"264","severity":1,"message":"303","line":75,"column":23,"nodeType":"266","messageId":"267","endLine":75,"endColumn":30},{"ruleId":"264","severity":1,"message":"303","line":107,"column":31,"nodeType":"266","messageId":"267","endLine":107,"endColumn":38},{"ruleId":"264","severity":1,"message":"280","line":1,"column":11,"nodeType":"266","messageId":"267","endLine":1,"endColumn":20},{"ruleId":"264","severity":1,"message":"304","line":52,"column":17,"nodeType":"266","messageId":"267","endLine":52,"endColumn":25},{"ruleId":"305","severity":1,"message":"306","line":476,"column":22,"nodeType":"307","messageId":"308","endLine":476,"endColumn":23,"suggestions":"309"},{"ruleId":"264","severity":1,"message":"279","line":499,"column":10,"nodeType":"266","messageId":"267","endLine":499,"endColumn":15},{"ruleId":"264","severity":1,"message":"310","line":623,"column":11,"nodeType":"266","messageId":"267","endLine":623,"endColumn":16},{"ruleId":"264","severity":1,"message":"303","line":86,"column":28,"nodeType":"266","messageId":"267","endLine":86,"endColumn":35},{"ruleId":"264","severity":1,"message":"311","line":86,"column":37,"nodeType":"266","messageId":"267","endLine":86,"endColumn":41},{"ruleId":"264","severity":1,"message":"312","line":86,"column":43,"nodeType":"266","messageId":"267","endLine":86,"endColumn":48},{"ruleId":"264","severity":1,"message":"313","line":96,"column":12,"nodeType":"266","messageId":"267","endLine":96,"endColumn":34},{"ruleId":"314","severity":1,"message":"315","line":167,"column":6,"nodeType":"316","endLine":167,"endColumn":19,"suggestions":"317"},{"ruleId":"264","severity":1,"message":"284","line":8,"column":18,"nodeType":"266","messageId":"267","endLine":8,"endColumn":28},{"ruleId":"264","severity":1,"message":"318","line":54,"column":12,"nodeType":"266","messageId":"267","endLine":54,"endColumn":17},{"ruleId":"264","severity":1,"message":"319","line":54,"column":19,"nodeType":"266","messageId":"267","endLine":54,"endColumn":27},{"ruleId":"264","severity":1,"message":"284","line":8,"column":18,"nodeType":"266","messageId":"267","endLine":8,"endColumn":28},{"ruleId":"264","severity":1,"message":"318","line":53,"column":10,"nodeType":"266","messageId":"267","endLine":53,"endColumn":15},{"ruleId":"264","severity":1,"message":"319","line":53,"column":17,"nodeType":"266","messageId":"267","endLine":53,"endColumn":25},{"ruleId":"264","severity":1,"message":"320","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":25},{"ruleId":"264","severity":1,"message":"280","line":1,"column":27,"nodeType":"266","messageId":"267","endLine":1,"endColumn":36},"no-native-reassign",["321"],"no-negated-in-lhs",["322"],"no-unused-vars","'GoogleIcon' is defined but never used.","Identifier","unusedVar","'TwitterIcon' is defined but never used.","'setSuccess' is assigned a value but never used.","'ContentCard' is defined but never used.","'companydummyData' is assigned a value but never used.","'contentdummyData1' is assigned a value but never used.","'contentdummyData2' is assigned a value but never used.","'FollowersDocs' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'state' is assigned a value but never used.","'useEffect' is defined but never used.","'fade' is defined but never used.","'AddIcon' is defined but never used.","'HomeCard' is defined but never used.","'RouterLink' is defined but never used.","'Height' is defined but never used.","'FollowerFollowingForm' is defined but never used.","'user' is assigned a value but never used.","'Companies' is assigned a value but never used.","'setCompanies' is assigned a value but never used.","'refetch' is assigned a value but never used.","'img' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useContext' is defined but never used.","'useParams' is defined but never used.","'AuthContext' is defined but never used.","'userInfo' is assigned a value but never used.","'Avatar' is defined but never used.","'Popper' is defined but never used.","'useHistory' is defined but never used.","'loading' is assigned a value but never used.","'setState' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["323","324"],"'array' is assigned a value but never used.","'data' is assigned a value but never used.","'error' is assigned a value but never used.","'getS3SignedUrlCallBack' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'handleChange', 'hasBody', 'props.body', and 'selectLocalImage'. Either include them or remove the dependency array.","ArrayExpression",["325"],"'modal' is assigned a value but never used.","'setModal' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"326","fix":"327","desc":"328"},{"messageId":"329","fix":"330","desc":"331"},{"desc":"332","fix":"333"},"removeEscape",{"range":"334","text":"335"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"336","text":"337"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [quill, body, props.body, hasBody, selectLocalImage, handleChange]",{"range":"338","text":"339"},[13004,13005],"",[13004,13004],"\\",[4660,4673],"[quill, body, props.body, hasBody, selectLocalImage, handleChange]"]