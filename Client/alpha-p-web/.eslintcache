[{"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\index.js":"1","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\ApolloProvider.js":"2","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\serviceWorker.js":"3","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\App.js":"4","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\Theme.js":"5","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\context\\auth.js":"6","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Sign-up.js":"7","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Home.js":"8","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Login.js":"9","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Content\\Draft.js":"10","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Footer.js":"11","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Content\\Article.js":"12","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\EndUserProfile.js":"13","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Company\\Company.js":"14","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\AuthRoute.js":"15","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Content\\MyAuthors.js":"16","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Navbar.js":"17","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Portfolio.js":"18","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\profileSetting\\AccountSecurty.js":"19","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\profileSetting\\ProfileSetting.js":"20","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\UserInfo.js":"21","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\UI\\messages.js":"22","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\util\\hooks.js":"23","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\util\\dummyData.js":"24","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Content\\ContentCards.js":"25","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\homeGql.js":"26","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Auth\\authGql.js":"27","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Company\\companyGql.js":"28","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Content\\articleGql.js":"29","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Content\\commentGql.js":"30","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Content\\draftsGql.js":"31","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Company\\CompanyCard.js":"32","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\AnalystInfo.js":"33","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Editor.js":"34","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Content\\CommentComponents.js":"35","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\storage\\cache.js":"36"},{"size":520,"mtime":1613630748221,"results":"37","hashOfConfig":"38"},{"size":774,"mtime":1618705770287,"results":"39","hashOfConfig":"38"},{"size":4686,"mtime":1612258551962,"results":"40","hashOfConfig":"38"},{"size":2855,"mtime":1618586101824,"results":"41","hashOfConfig":"38"},{"size":430,"mtime":1618344981762,"results":"42","hashOfConfig":"38"},{"size":1521,"mtime":1618745215877,"results":"43","hashOfConfig":"38"},{"size":7241,"mtime":1616776164579,"results":"44","hashOfConfig":"38"},{"size":7793,"mtime":1618747192045,"results":"45","hashOfConfig":"38"},{"size":5813,"mtime":1616776164564,"results":"46","hashOfConfig":"38"},{"size":8220,"mtime":1617219108022,"results":"47","hashOfConfig":"38"},{"size":3799,"mtime":1618344981766,"results":"48","hashOfConfig":"38"},{"size":10330,"mtime":1618747771360,"results":"49","hashOfConfig":"38"},{"size":13019,"mtime":1618746884514,"results":"50","hashOfConfig":"38"},{"size":7211,"mtime":1618345107157,"results":"51","hashOfConfig":"38"},{"size":883,"mtime":1617189458314,"results":"52","hashOfConfig":"38"},{"size":4114,"mtime":1618344981773,"results":"53","hashOfConfig":"38"},{"size":9886,"mtime":1618586101839,"results":"54","hashOfConfig":"38"},{"size":11370,"mtime":1618586101849,"results":"55","hashOfConfig":"38"},{"size":26437,"mtime":1618586101856,"results":"56","hashOfConfig":"38"},{"size":12201,"mtime":1618586101862,"results":"57","hashOfConfig":"38"},{"size":5955,"mtime":1618746319677,"results":"58","hashOfConfig":"38"},{"size":1089,"mtime":1616776164446,"results":"59","hashOfConfig":"38"},{"size":1464,"mtime":1618746431695,"results":"60","hashOfConfig":"38"},{"size":698,"mtime":1618344981770,"results":"61","hashOfConfig":"38"},{"size":4013,"mtime":1618345384619,"results":"62","hashOfConfig":"38"},{"size":667,"mtime":1618345107156,"results":"63","hashOfConfig":"38"},{"size":1284,"mtime":1618745519510,"results":"64","hashOfConfig":"38"},{"size":766,"mtime":1618345107155,"results":"65","hashOfConfig":"38"},{"size":1373,"mtime":1618745200479,"results":"66","hashOfConfig":"38"},{"size":436,"mtime":1617265806443,"results":"67","hashOfConfig":"38"},{"size":1451,"mtime":1617219040129,"results":"68","hashOfConfig":"38"},{"size":18701,"mtime":1618747270697,"results":"69","hashOfConfig":"38"},{"size":4391,"mtime":1618747689990,"results":"70","hashOfConfig":"38"},{"size":4982,"mtime":1617730769126,"results":"71","hashOfConfig":"38"},{"size":675,"mtime":1618613501154,"results":"72","hashOfConfig":"38"},{"size":696,"mtime":1618709273291,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},"197fvus",{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"77"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"77"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"77"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"77"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"77"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"77"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"77"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"77"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"77"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"77"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"77"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"77"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"77"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"77"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"77"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"77"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"77"},"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\index.js",["165","166"],"\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\n\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport ApolloProvider from \"./ApolloProvider\";\r\n\r\n\r\nReactDOM.render(ApolloProvider, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n",["167","168"],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\ApolloProvider.js",["169"],"import React from \"react\";\r\nimport App from \"./App\";\r\nimport {\r\n  ApolloClient,\r\n  ApolloProvider,\r\n  InMemoryCache,\r\n  createHttpLink,\r\n} from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\nimport { cache } from \"./storage/cache\";\r\n//Server URL\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: \"http://localhost:4000/graphql\",\r\n});\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem(\"jwtToken\");\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n\r\n      Authorization: token ? `Bearer ${token}` : \"\",\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: cache,\r\n});\r\n\r\nexport default (\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>\r\n);\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\serviceWorker.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\App.js",["170","171","172"],"import React, { Component } from \"react\";\r\nimport {\r\n  HashRouter,\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport { AuthProvider } from \"./context/auth\";\r\nimport \"./scss/style.scss\";\r\nimport Login from \"./views/Login\";\r\nimport SignUp from \"./views/Sign-up\";\r\nimport { AuthRoute, ProtectedRoute } from \"./components/AuthRoute\";\r\nimport Home from \"./views/Home\";\r\nimport EndUserProfile from \"./views/EndUserProfile\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Footer from \"./components/Footer\";\r\nimport Article from \"./views/Content/Article\";\r\nimport Draft from \"./views/Content/Draft\";\r\nimport Portfolio from \"./views/Portfolio\";\r\nimport { MyAuthors } from \"./views/Content/MyAuthors\";\r\nimport { theme } from \"./Theme\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { CircularProgress, Container } from \"@material-ui/core\";\r\nimport Company from \"./views/Company/Company\";\r\nimport ProfileSetting from \"./views/profileSetting/ProfileSetting\";\r\nimport AccountSecurty from \"./views/profileSetting/AccountSecurty\";\r\n// const Company = React.lazy(() => import(\"./views/Company/Company\"));\r\nexport class App extends Component {\r\n  render() {\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <AuthProvider>\r\n          <Router>\r\n            <React.Suspense fallback={CircularProgress}>\r\n              <Navbar />\r\n              <div\r\n                style={{\r\n                  backgroundColor: theme.palette.background.default,\r\n                  paddingBottom: theme.spacing(8),\r\n                }}\r\n              >\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route path=\"/userProfile/:userId\" component={EndUserProfile} />\r\n                <ProtectedRoute\r\n                  exact\r\n                  path=\"/ProfileSetting/\"\r\n                  component={ProfileSetting}\r\n                />\r\n\r\n                <ProtectedRoute\r\n                  exact\r\n                  path=\"/AccountSecurty/\"\r\n                  component={AccountSecurty}\r\n                />\r\n\r\n                <Route path=\"/company/:companyId\" component={Company} />\r\n                <Route path=\"/article/:articleId\" component={Article} />\r\n                <Route exact path=\"/Portfolio\" component={Portfolio} />\r\n                <ProtectedRoute path=\"/draft/:draftId\" component={Draft} />\r\n                <ProtectedRoute\r\n                  exact\r\n                  path=\"/MyAuthers/:username/\"\r\n                  component={MyAuthors}\r\n                />\r\n                <AuthRoute exact path=\"/Signup\" component={SignUp} />\r\n\r\n                <AuthRoute exact path=\"/Login\" component={Login} />\r\n              </div>\r\n              <Footer />\r\n            </React.Suspense>\r\n          </Router>\r\n        </AuthProvider>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\Theme.js",["173","174"],"import { createMuiTheme } from '@material-ui/core/styles';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport green from '@material-ui/core/colors/green';\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#0081A7',\r\n    },\r\n    secondary: {\r\n      main: '#FED9B7',\r\n    },\r\n    success:{\r\n        main:'#00AFB9'\r\n    }, \r\n    background:{\r\n      default:\"#E5E5E5\"\r\n    }\r\n\r\n  },\r\n});","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\context\\auth.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Sign-up.js",["175"],"import React, { useContext, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { CustomizedSnackbars } from \"../components/UI/messages\";\r\n\r\n//graphql\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { SIGNUP_USER } from \"../graphql/Auth/authGql\";\r\n//auth\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { useForm } from \"../util/hooks\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://google.com/\">\r\n        Alpha+\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp(props) {\r\n  const classes = useStyles();\r\n  const [success, setSuccess] = useState(false);\r\n  const context = useContext(AuthContext);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { onChange, onSubmit, values } = useForm(signUpUserCallback, {\r\n    firstName: \"\",\r\n    lasttName: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPasswrod: \"\",\r\n  });\r\n\r\n  const [signUpUser, { loading }] = useMutation(SIGNUP_USER, {\r\n    update(_, { data: { register: userData } }) {\r\n      context.login(userData);\r\n      props.history.push(\"/\");\r\n    },\r\n    onError(err) {\r\n      setErrors(\r\n        err && err.graphQLErrors[0]\r\n          ? err.graphQLErrors[0].extensions.exception.errors\r\n          : {}\r\n      );\r\n    },\r\n    variables: {\r\n      registerInput: {\r\n        name: values.firstName.concat(\" \", values.lasttName),\r\n        username: values.username,\r\n        email: values.email,\r\n        password: values.password,\r\n        confirmPassword: values.confirmPasswrod,\r\n      },\r\n    },\r\n  });\r\n\r\n  function signUpUserCallback() {\r\n    signUpUser();\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Create Free Account\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={onSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                onChange={onChange}\r\n                value={values.firstName}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"lname\"\r\n                name=\"lasttName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                autoFocus\r\n                onChange={onChange}\r\n                value={values.lasttName}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                onChange={onChange}\r\n                value={values.username}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={onChange}\r\n                value={values.email}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                onChange={onChange}\r\n                value={values.password}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"confirmPasswrod\"\r\n                label=\"Confrim Password\"\r\n                type=\"password\"\r\n                id=\"confirmPasswrod\"\r\n                onChange={onChange}\r\n                value={values.confirmPasswrod}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {loading ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          )}\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/Login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n      {success && (\r\n        <div>\r\n          <CustomizedSnackbars color=\"success\" message=\"Draft is created\" />;\r\n        </div>\r\n      )}\r\n      {Object.keys(errors).length > 0 && (\r\n        <div>\r\n          <ul>\r\n            {Object.values(errors).map((value) => (\r\n              <CustomizedSnackbars color=\"error\" message={value} />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Home.js",["176","177"],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Login.js",["178","179","180"],"import React, {  useContext, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n// //imagers\r\nimport GoogleIcon from \"../assets/icons/1004px-Google__G__Logo.svg.png\";\r\nimport TwitterIcon from \"../assets/icons/580b57fcd9996e24bc43c53e.png\";\r\n//graphql\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { LOGIN_USER } from \"../graphql/Auth/authGql\";\r\n//auth\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { useForm } from \"../util/hooks\";\r\nimport { CustomizedSnackbars } from \"../components/UI/messages\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://google.com/\">\r\n        Alpha+ best website ever!\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  GTsubmit: {\r\n    margin: theme.spacing(3, 0, 0),\r\n  },\r\n}));\r\nexport default function SignIn(props) {\r\n  const classes = useStyles();\r\n  const [success, setSuccess] = useState(false);\r\n  const context = useContext(AuthContext);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { onChange, onSubmit, values } = useForm(loginUserCallback, {\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\r\n    update(_, { data: { login: userData } }) {\r\n      context.login(userData);\r\n      props.history.push(\"/\");\r\n    },\r\n    onError(err) {\r\n      setErrors(\r\n        err && err.graphQLErrors[0]\r\n          ? err.graphQLErrors[0].extensions.exception.errors\r\n          : {}\r\n      );\r\n    },\r\n    variables: values,\r\n  });\r\n\r\n  function loginUserCallback() {\r\n    loginUser();\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={onSubmit}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={values.email}\r\n            onChange={onChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={values.password}\r\n            onChange={onChange}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          {loading ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n          )}\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"/Signup\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.GTsubmit}\r\n            >\r\n              Continue with google\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.GTsubmit}\r\n            >\r\n              Continue with twitter\r\n            </Button>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n      {success && (\r\n        <div>\r\n          <CustomizedSnackbars color=\"success\" message=\"Draft is created\" />;\r\n        </div>\r\n      )}\r\n      {Object.keys(errors).length > 0 && (\r\n        <div>\r\n          <ul>\r\n            {Object.values(errors).map((value) => (\r\n              <CustomizedSnackbars color=\"error\" message={value} />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Content\\Draft.js",["181","182","183","184","185"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Editor } from \"../../components/Editor\";\r\nimport { Button, Container } from \"@material-ui/core\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport { CustomizedSnackbars } from \"../../components/UI/messages\";\r\n\r\n// import Snackbar from '@material-ui/core/Snackbar';\r\n// import MuiAlert from '@material-ui/lab/Alert';\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { useForm } from \"../../util/hooks\";\r\nimport {\r\n  CREATE_DRAFT,\r\n  EDIT_DRAFT,\r\n  GET_DRAFT,\r\n  PUBLISH_DRAFT,\r\n} from \"../../graphql/Content/draftsGql\";\r\nimport { useMutation, useLazyQuery, useQuery } from \"@apollo/client\";\r\nimport TagsInput from \"react-tagsinput\";\r\n\r\nimport \"react-tagsinput/react-tagsinput.css\"; // If using WebPack and style-loader.\r\n\r\nfunction sleep(ms) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"25ch\",\r\n  },\r\n  publishBtn: {\r\n    backgroundColor: theme.palette.success.light,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.success.main,\r\n    },\r\n    color: theme.palette.common.white,\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  saveBtn: {\r\n    backgroundColor: theme.palette.primary.light,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n    color: theme.palette.common.white,\r\n  },\r\n  tagsInputStyle: {\r\n    marginBottom: theme.spacing(4),\r\n    marginTop: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nfunction Draft(props) {\r\n  const classes = useStyles();\r\n\r\n  // Check if new draft or editing existing draft with prams\r\n\r\n  const { user } = useContext(AuthContext);\r\n  const [errors, setErrors] = useState({});\r\n  const [success, setSuccess] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const { onSubmit } = useForm(actionDraftCallback, {});\r\n  const [startPublish, setPublish] = useState(false);\r\n  const [newDraft, setNewDraft] = useState(false);\r\n  const [fetched, setFetched] = useState(false);\r\n\r\n  let { draftId } = useParams();\r\n  if (draftId == \"new\" && !newDraft) {\r\n    setNewDraft(true);\r\n  }\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [tags, setTags] = useState([]);\r\n  const [files, setFiles] = useState([]);\r\n  const { loading: fetchLoading, data: fetchedData } = useQuery(GET_DRAFT, {\r\n    variables: {\r\n      draftId,\r\n    },\r\n    onCompleted(data) {\r\n      setFetched(true);\r\n      setTitle(fetchedData.getDraft.draftName);\r\n      // setContent({\r\n      //   body: fetchedData.getDraft.draftBody,\r\n      // });\r\n      setBody(fetchedData.getDraft.draftBody);\r\n      console.log(`body`, fetchedData.getDraft.draftBody);\r\n    },\r\n    skip: newDraft || fetched,\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   if (!fetchLoading && !fetched) {\r\n\r\n  //   }\r\n  // });\r\n  const [createDraft, { loading: createLoading }] = useMutation(CREATE_DRAFT, {\r\n    onError(err) {\r\n      console.log(`Error on ${err}`);\r\n      setErrors(\r\n        err && err.graphQLErrors[0]\r\n          ? err.graphQLErrors[0].extensions.exception.errors\r\n          : {}\r\n      );\r\n    },\r\n    variables: {\r\n      id: user.id,\r\n      contentInput: {\r\n        title,\r\n        body,\r\n      },\r\n    },\r\n    onCompleted(data) {\r\n      console.log(`Draft is success ${data.createDraft.id}`);\r\n      setSuccessMessage(\"Draft is created\");\r\n      setSuccess(true);\r\n      sleep(2000).then(() => props.history.push(\"/\"));\r\n    },\r\n  });\r\n  const [saveDraft, { loading: saveLoading }] = useMutation(EDIT_DRAFT, {\r\n    onError(err) {\r\n      console.log(`Error on ${err}`);\r\n      setErrors(\r\n        err && err.graphQLErrors[0]\r\n          ? err.graphQLErrors[0].extensions.exception.errors\r\n          : {}\r\n      );\r\n    },\r\n    variables: {\r\n      id: user.id,\r\n      draftID: draftId,\r\n      contentInput: {\r\n        title,\r\n        body,\r\n      },\r\n    },\r\n    onCompleted(data) {\r\n      console.log(`Draft is Updated ${data.editDraft.id}`);\r\n      setSuccessMessage(\"Draft is Saveed\");\r\n\r\n      setSuccess(true);\r\n      if (!startPublish)\r\n        sleep(2000).then(() =>\r\n          props.history.push(`/MyAuthers/${data.editDraft.draftAuther.id}`)\r\n        );\r\n    },\r\n  });\r\n  const [publishDraft] = useMutation(PUBLISH_DRAFT, {\r\n    onError(err) {\r\n      console.log(`Error on ${err}`);\r\n      setErrors(\r\n        err && err.graphQLErrors[0]\r\n          ? err.graphQLErrors[0].extensions.exception.errors\r\n          : {}\r\n      );\r\n    },\r\n    variables: {\r\n      id: user.id,\r\n      draftID: draftId,\r\n      tags: tags,\r\n    },\r\n    onCompleted(data) {\r\n      console.log(`Draft is Published ${data.publishDraft.id}`);\r\n      setSuccessMessage(\"Draft is published\");\r\n      setSuccess(true);\r\n      sleep(2000).then(() =>\r\n        props.history.push(`/MyAuthers/${user.id}`)\r\n      );\r\n    },\r\n  });\r\n  function actionDraftCallback() {\r\n    if (newDraft) createDraft();\r\n    else {\r\n      saveDraft();\r\n    }\r\n  }\r\n  function publishDraftCall() {\r\n    setPublish(true);\r\n    saveDraft().then(() => publishDraft());\r\n  }\r\n  function handleTagsChange(tags) {\r\n    setTags(tags);\r\n    console.log(tags);\r\n  }\r\n\r\n  function onEditorChange(value) {\r\n    setBody(value);\r\n    // console.log(`New Body :${body}`);\r\n  }\r\n  const onTitleChange = (value) => {\r\n    setTitle(value.target.value);\r\n  };\r\n\r\n  const onFilesChange = (files) => {\r\n    setFiles(files);\r\n  };\r\n  const buttons = () => {\r\n    return newDraft ? (\r\n      // Create Button For New Draft\r\n      <Container>\r\n        <Button\r\n          size=\"large\"\r\n          variant=\"contained\"\r\n          className={classes.saveBtn}\r\n          onClick={onSubmit}\r\n        >\r\n          Create\r\n        </Button>\r\n      </Container>\r\n    ) : (\r\n      <Container>\r\n        {/* Save Draft 📝 */}\r\n        <Button\r\n          size=\"large\"\r\n          variant=\"contained\"\r\n          className={classes.saveBtn}\r\n          onClick={onSubmit}\r\n        >\r\n          Save\r\n        </Button>\r\n        {/* Publish Draft 📑 */}\r\n        <Button\r\n          size=\"large\"\r\n          variant=\"contained\"\r\n          className={classes.publishBtn}\r\n          onClick={publishDraftCall}\r\n        >\r\n          Publish Draft\r\n        </Button>\r\n      </Container>\r\n    );\r\n  };\r\n  return fetchLoading ? (\r\n    <CircularProgress />\r\n  ) : (\r\n    <div style={{ maxWidth: \"700px\", margin: \"2rem auto\" }}>\r\n      <div style={{ alignItems: \"center\" }}>\r\n        <TextField\r\n          id=\"outlined-full-width\"\r\n          label=\"Draft Name\"\r\n          style={{ margin: 8 }}\r\n          placeholder=\"Placeholder\"\r\n          helperText=\"Full width!\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          value={title}\r\n          variant=\"outlined\"\r\n          onChange={onTitleChange}\r\n        />{\" \"}\r\n      </div>\r\n      {!newDraft && (\r\n        <div\r\n          style={{ alignItems: \"center\" }}\r\n          className={classes.tagsInputStyle}\r\n        >\r\n          <TagsInput value={tags} onChange={handleTagsChange} />\r\n        </div>\r\n      )}\r\n      <Editor\r\n        placeholder={\"Start Posting Something\"}\r\n        onEditorChange={onEditorChange}\r\n        body={fetched ? body : \"\"}\r\n        onChange\r\n        onFilesChange={onFilesChange}\r\n      />\r\n\r\n      <div style={{ textAlign: \"center\", margin: \"2rem\" }}>\r\n        {saveLoading | createLoading ? <CircularProgress /> : buttons()}\r\n      </div>\r\n      {success && (\r\n        <div>\r\n          <CustomizedSnackbars color=\"success\" message={successMessage} />;\r\n        </div>\r\n      )}\r\n      {Object.keys(errors).length > 0 && (\r\n        <div>\r\n          <ul>\r\n            {Object.values(errors).map((value) => (\r\n              <CustomizedSnackbars color=\"error\" message={value} />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Draft;\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Footer.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Content\\Article.js",["186","187","188","189","190","191","192","193"],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\EndUserProfile.js",["194","195","196","197","198"],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Company\\Company.js",["199","200","201","202","203","204"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CircularProgress, Grid, Paper } from \"@material-ui/core\";\r\nimport {\r\n  CompanyCardFollow,\r\n  CompanyMiniDataTable,\r\n  MiniCompanyCardTable,\r\n  RenderCompanyChart,\r\n  CompanyProfile,\r\n} from \"../../components/Company/CompanyCard\";\r\nimport { ContentCardPaper } from \"../../components/Content/ContentCards\";\r\nimport { contentdummyData } from \"../../util/dummyData\";\r\nimport { Redirect, useParams } from \"react-router\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { COMPANY_GQL } from \"../../graphql/Company/companyGql\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  paperLayout: {\r\n    // width: \"100%\",\r\n    paddingBottom: theme.spacing(2),\r\n    marginTop: theme.spacing(1),\r\n    paddingTop: theme.spacing(1),\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1),\r\n      marginRight: theme.spacing(3),\r\n      marginLeft: theme.spacing(3),\r\n    },\r\n  },\r\n  chart_similar: {\r\n    justifyContent: \"center\",\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      justifyContent: \"space-between\",\r\n      paddingRight: theme.spacing(5),\r\n    },\r\n  },\r\n}));\r\nfunction Company(props) {\r\n  const classes = useStyles();\r\n  let { companyId } = useParams();\r\n  console.log(companyId);\r\n  const { data, error, loading } = useQuery(COMPANY_GQL, {\r\n    variables: {\r\n      companyId: companyId,\r\n    },\r\n    onCompleted(data) {\r\n      console.log(data.getCompanies);\r\n    },\r\n  });\r\n  if (error) {\r\n    console.log(error);\r\n    return <Redirect to=\"/404\" />;\r\n  }\r\n  if (loading) return <CircularProgress />;\r\n  const CompanyHeader = () => {\r\n    return (\r\n      <Paper className={classes.paperLayout}>\r\n        <Grid container direction=\"column\">\r\n          {/* Copmany Follow Card */}\r\n          <CompanyCardFollow\r\n            Symbol={data.getCompany.symbol}\r\n            price={data.getCompany.todayFinance.close}\r\n            changePrice={data.getCompany.change}\r\n            name={data.getCompany.comname}\r\n          />\r\n          {/* Company Chart */}\r\n          <Grid container direction=\"row\" className={classes.chart_similar}>\r\n            <Grid item>\r\n              <div>\r\n                <RenderCompanyChart\r\n                  data={data.getCompany.financialData}\r\n                  limit={7}\r\n                  dataKey=\"close\"\r\n                  XAxis=\"date\"\r\n                />\r\n              </div>{\" \"}\r\n            </Grid>{\" \"}\r\n            <Grid item>\r\n              <MiniCompanyCardTable\r\n                data={data.getCompany.similarCompanies}\r\n                limit={4}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {/* Similar Companies minitable */}\r\n        </Grid>\r\n      </Paper>\r\n    );\r\n  };\r\n  const CompanyRelatedArticlesAndData = () => {\r\n    return (\r\n      <Paper className={classes.paperLayout}>\r\n        {/* Company Chart */}\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justify=\"space-around\"\r\n        >\r\n          <Grid item xs lg={6}>\r\n            <ContentCardPaper\r\n              auther\r\n              data={data.getCompany.articles}\r\n              limit={5}\r\n              title=\"Rleated Articles\"\r\n            />\r\n          </Grid>{\" \"}\r\n          <Grid item xs md={4}>\r\n            <CompanyMiniDataTable data={data.getCompany.todayFinance} />\r\n          </Grid>\r\n        </Grid>\r\n        {/* Similar Companies minitable */}\r\n      </Paper>\r\n    );\r\n  };\r\n  const CompanyProfileCard = () => {\r\n    return (\r\n      <Paper className={classes.paperLayout}>\r\n        <CompanyProfile companyInfo={companydummyData.companyIfno} />\r\n      </Paper>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid container direction=\"column\">\r\n        <Grid item>{CompanyHeader()}</Grid>\r\n        <Grid item>{CompanyRelatedArticlesAndData()}</Grid>\r\n        <Grid item xs>\r\n          {CompanyProfileCard()}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nCompany.propTypes = {};\r\n{\r\n  /* Company Chart + Financial Data  */\r\n}\r\nexport default Company;\r\n\r\n{\r\n  /* Related Article +  Copmany Data */\r\n}\r\n\r\nconst companydummyData = {\r\n  Symbol: \"AAPL\",\r\n  price: 123.3,\r\n  name: \"Apple Inc\",\r\n  changePrice: \"4.22(+2.32%)\",\r\n  companyIfno: {\r\n    name: \"Apple Inc\",\r\n    bio:\r\n      \"Apple Inc. designs, manufactures, and markets smartphones, personal computers, tablets, wearables, and accessories worldwide. It also      sells various related services. The company offers iPhone, More\",\r\n    sector: \"Tech\",\r\n    address: \"One Apple Park Way Cupertino, CA, 95014 United State\",\r\n    industry: \"Technology Hardware\",\r\n    phoneNumber: \"408-996-1010\",\r\n    website: \"www.apple.com\",\r\n  },\r\n};\r\nconst similarCompanydummyData = [\r\n  { Symbol: \"AAPL\", price: 293, changePrice: \"4.22(+2.32%)\" },\r\n  { Symbol: \"GOOG\", price: 351, changePrice: \"4.22(+2.32%)\" },\r\n  { Symbol: \"AMZN\", price: 120, changePrice: \"4.22(+2.32%)\" },\r\n  { Symbol: \"EBSY\", price: 963, changePrice: \"4.22(+2.32%)\" },\r\n  { Symbol: \"MOZA\", price: 56, changePrice: \"4.22(+2.32%)\" },\r\n  { Symbol: \"AAPL\", price: 293, changePrice: \"4.22(+2.32%)\" },\r\n  { Symbol: \"GOOG\", price: 351, changePrice: \"4.22(+2.32%)\" },\r\n  { Symbol: \"AMZN\", price: 120, changePrice: \"4.22(+2.32%)\" },\r\n  { Symbol: \"EBSY\", price: 963, changePrice: \"4.22(+2.32%)\" },\r\n  { Symbol: \"MOZA\", price: 56, changePrice: \"4.22(+2.32%)\" },\r\n  // { Symbol: \"NANI\", price: 123, changePrice: +21 },\r\n  // { Symbol: \"AAPL\", price: 293, changePrice: +192 },\r\n  // { Symbol: \"GOOG\", price: 351, changePrice: -122 },\r\n  // { Symbol: \"AMZN\", price: 120, changePrice: +50 },\r\n  // { Symbol: \"EBSY\", price: 963, changePrice: +124 },\r\n  // { Symbol: \"MOZA\", price: 56, changePrice: -56 },\r\n  // { Symbol: \"NANI\", price: 123, changePrice: +21 },\r\n];\r\nconst companyFinanceData = [\r\n  {\r\n    exchange: \"XSAU\",\r\n    Open: 18.12,\r\n    high: 18.3,\r\n    low: 18.1,\r\n    close: 18.22,\r\n    volume: 22366500,\r\n    date: \"2021-04-07T00:00:00+0000\",\r\n  },\r\n  {\r\n    exchange: \"XSAU\",\r\n    Open: 18.14,\r\n    high: 18.26,\r\n    low: 18.1,\r\n    close: 18.12,\r\n    volume: 11154793,\r\n    date: \"2021-04-06T00:00:00+0000\",\r\n  },\r\n  {\r\n    exchange: \"XSAU\",\r\n    Open: 18.2,\r\n    high: 18.24,\r\n    low: 18.1,\r\n    close: 18.14,\r\n    volume: 11616274,\r\n    date: \"2021-04-05T00:00:00+0000\",\r\n  },\r\n  {\r\n    exchange: \"XSAU\",\r\n    Open: 18.18,\r\n    high: 18.36,\r\n    low: 18.12,\r\n    close: 18.22,\r\n    volume: 8264137,\r\n    date: \"2021-04-04T00:00:00+0000\",\r\n  },\r\n  {\r\n    exchange: \"XSAU\",\r\n    Open: 18.3,\r\n    high: 18.42,\r\n    low: 18.16,\r\n    close: 18.18,\r\n    volume: 17543600,\r\n    date: \"2021-04-01T00:00:00+0000\",\r\n  },\r\n  {\r\n    exchange: \"XSAU\",\r\n    Open: 18.4,\r\n    high: 18.42,\r\n    low: 17.88,\r\n    close: 18.36,\r\n    volume: 37871632,\r\n    date: \"2021-03-31T00:00:00+0000\",\r\n  },\r\n  {\r\n    exchange: \"XSAU\",\r\n    Open: 17.78,\r\n    high: 17.88,\r\n    low: 17.7,\r\n    close: 17.76,\r\n    volume: 9146628,\r\n    date: \"2021-03-30T00:00:00+0000\",\r\n  },\r\n  {\r\n    exchange: \"XSAU\",\r\n    Open: 18.1,\r\n    high: 18.12,\r\n    low: 17.92,\r\n    close: 17.98,\r\n    volume: 14149700,\r\n    date: \"2021-04-08T00:00:00+0000\",\r\n  },\r\n];\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\AuthRoute.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Content\\MyAuthors.js",["205","206","207","208","209","210","211","212","213","214","215"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useParams, Link as RouterLink, Link } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  Card,\r\n  Typography,\r\n  Divider,\r\n  ButtonBase,\r\n  Button,\r\n  Avatar,\r\n  TextField,\r\n  FormHelperText,\r\n  List,\r\n  ListItem,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_DRAFTS } from \"../../graphql/Content/draftsGql\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport { ContentCard } from \"../../components/Content/ContentCards\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { GET_ARTICLES } from \"../../graphql/Content/articleGql\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginLeft: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  Section: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: theme.spacing(4),\r\n    },\r\n  },\r\n  titleSection: {\r\n    padding: theme.spacing(2),\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n}));\r\nexport function MyAuthors(props) {\r\n  const classes = useStyles();\r\n\r\n  const context = useContext(AuthContext);\r\n  const [drafts, setDrafts] = useState([]);\r\n  const [articles, setArticles] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(`Drafts are Fetched`);\r\n  // }, [state.drafts]);\r\n  const params = props.match.params.username;\r\n  const { loading: draftFetchingLoading } = useQuery(GET_DRAFTS, {\r\n    onCompleted(data) {\r\n      setDrafts(data.getDrafts);\r\n      console.log(`Drafts length ${drafts.length}`);\r\n    },\r\n    variables: {\r\n      autherId: params,\r\n    },\r\n    onError(error) {\r\n      console.log(`F}ailed to fetch drafts : ${error}`);\r\n    },\r\n  });\r\n  const { loading: articlesFethcingLoading } = useQuery(GET_ARTICLES, {\r\n    onCompleted(data) {\r\n      setArticles(data.getArticles);\r\n      console.log(`Articles length ${articles.length}`);\r\n    },\r\n    variables: {\r\n      userId: params,\r\n    },\r\n    onError(error) {\r\n      console.log(`F}ailed to fetch articles : ${error}`);\r\n    },\r\n  });\r\n  const articlesSection = () => {\r\n    return articlesFethcingLoading ? (\r\n      <CircularProgress />\r\n    ) : (\r\n      <Container className={classes.Section}>\r\n        <Card>\r\n          <Container>\r\n            <Typography variant=\"h4\" className={classes.titleSection}>\r\n              My Articles{\" \"}\r\n            </Typography>\r\n          </Container>\r\n          <Container>\r\n            <List>\r\n              {articles.map((e) => {\r\n                return (\r\n                  <ListItem>\r\n                    <ContentCard\r\n                      \r\n                      title={e.articleTitle}\r\n                      link={`/article/${e.id}`}\r\n                    />\r\n                  </ListItem>\r\n                );\r\n              })}\r\n            </List>\r\n          </Container>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  };\r\n  const draftSection = () => {\r\n    return draftFetchingLoading ? (\r\n      <CircularProgress />\r\n    ) : (\r\n      <Container className={classes.Section}>\r\n        <Card>\r\n          <Container>\r\n            <Typography variant=\"h4\" className={classes.titleSection}>\r\n              My Drafts\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              component={Link}\r\n              to=\"/draft/new\"\r\n            >\r\n              Create New Draft\r\n            </Button>\r\n          </Container>\r\n          <Container>\r\n            <List>\r\n              {drafts.map((e) => {\r\n                return (\r\n                  <ListItem>\r\n                    <ContentCard\r\n                      crudOtin\r\n                      title={e.draftName}\r\n                      link={`/draft/${e.id}`}\r\n                    />\r\n                  </ListItem>\r\n                );\r\n              })}\r\n            </List>\r\n          </Container>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  };\r\n  return (\r\n    <Container>\r\n      <Grid>\r\n        <Grid item>{articlesSection()}</Grid>\r\n        <Grid item>{draftSection()}</Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Navbar.js",["216"],"import {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n  IconButton,\r\n  Drawer,\r\n  Link,\r\n  MenuItem,\r\n  fade,\r\n  InputBase,\r\n  Menu,\r\n  Divider,\r\n  List,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { AccountCircle, Search, ExitToApp } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    backgroundColor: theme.palette.primary,\r\n\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      paddingRight: \"79px\",\r\n      paddingLeft: \"118px\",\r\n    },\r\n    flexGrow: 1,\r\n    paddingLeft: 0,\r\n  },\r\n  logo: {\r\n    fontFamily: \"sans-serif\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"bold\",\r\n    marginRight: theme.spacing(5),\r\n    /* or 54px */\r\n    textDecoration: \"none\",\r\n    \"&:visited\": {\r\n      color: theme.palette.common.white,\r\n    },\r\n    letterSpacing: \"2px\",\r\n    // display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n      fontSize: \"36px\",\r\n      lineHeight: \"150%\",\r\n    },\r\n  },\r\n  leftMenu: {\r\n    paddingTop: theme.spacing(4),\r\n  },\r\n  menuButton: {\r\n    display: \"inline-block\",\r\n\r\n    fontFamily: \"Open Sans, sans-serif\",\r\n    fontWeight: 400,\r\n    size: theme.typography.fontSize,\r\n    marginLeft: theme.spacing(4),\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  drawerContainer: {\r\n    padding: theme.spacing(3, 6),\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"80%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginRight: theme.spacing(2),\r\n\r\n      marginLeft: theme.spacing(12),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"80%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n  rightMenu: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n\r\n    // marginRight: theme.spacing(2),\r\n    marginLeft: theme.spacing(20),\r\n    color: theme.palette.primary,\r\n  },\r\n  loginBtn: {\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.9),\r\n      color: theme.palette.getContrastText(theme.palette.common.white),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Header(props) {\r\n  const context = useContext(AuthContext);\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const loggingOut = () => {\r\n    handleMenuClose();\r\n    context.logout();\r\n  };\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>{\" \"}\r\n      <MenuItem onClick={loggingOut}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          onClick={loggingOut}\r\n        >\r\n          <ExitToApp />\r\n        </IconButton>\r\n        <p>Logout</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const leftMenu = [\r\n    {\r\n      title: \"My Authers\",\r\n      link: context.user ? `/MyAuthers/${context.user.id}/` : `/Login`,\r\n    },\r\n    {\r\n      title: \"My Portfolio\",\r\n      link: \"/Portfolio\",\r\n    },\r\n    {\r\n      title: \"Sectors\",\r\n      dropdown: true,\r\n      menu: [\r\n        {\r\n          title: \"My Portfolio\",\r\n          link: \"/Portfolio\",\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const rightMenu = [\r\n    {\r\n      title: \"Login\",\r\n      link: \"/Login\",\r\n      isLoggedIn: false,\r\n    },\r\n    {\r\n      title: \"logut\",\r\n      link: \"/\",\r\n      function: () => context.logout(),\r\n      isLoggedIn: true,\r\n    },\r\n  ];\r\n\r\n  const { header, logo, menuButton, toolbar, drawerContainer } = useStyles();\r\n\r\n  const [state, setState] = useState({\r\n    mobileView: false,\r\n    drawerOpen: false,\r\n  });\r\n\r\n  const { mobileView, drawerOpen } = state;\r\n\r\n  useEffect(() => {\r\n    const setResponsiveness = () => {\r\n      return window.innerWidth < 1025\r\n        ? setState((prevState) => ({ ...prevState, mobileView: true }))\r\n        : setState((prevState) => ({ ...prevState, mobileView: false }));\r\n    };\r\n\r\n    setResponsiveness();\r\n\r\n    window.addEventListener(\"resize\", () => setResponsiveness());\r\n  }, []);\r\n  const searchBar = () => {\r\n    return (\r\n      <div className={classes.search}>\r\n        <div className={classes.searchIcon}>\r\n          <Search />\r\n        </div>\r\n        <InputBase\r\n          placeholder=\"Search…\"\r\n          classes={{\r\n            root: classes.inputRoot,\r\n            input: classes.inputInput,\r\n          }}\r\n          inputProps={{ \"aria-label\": \"search\" }}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n  const displayDesktop = () => {\r\n    return (\r\n      <Toolbar className={toolbar}>\r\n        {Logo}\r\n        <div className={classes.leftMenu}>{getLeftMenu()}</div>\r\n        {/* Search Bar */}\r\n        <div>{searchBar()}</div>\r\n        {/* Righ Menu */}\r\n        <div> {getRightMenu()}</div>\r\n        {renderMenu}\r\n      </Toolbar>\r\n    );\r\n  };\r\n  const getRightMenu = () => {\r\n    return (\r\n      <div className={classes.rightMenu}>\r\n        {context.user ? (\r\n          <IconButton\r\n            edge=\"end\"\r\n            aria-label=\"account of current user\"\r\n            aria-controls={menuId}\r\n            aria-haspopup=\"true\"\r\n            onClick={handleProfileMenuOpen}\r\n            color=\"inherit\"\r\n          >\r\n            <AccountCircle />\r\n          </IconButton>\r\n        ) : (\r\n          <Button\r\n            className={classes.loginBtn}\r\n            variant=\"outlined\"\r\n            color=\"inherit\"\r\n            component={RouterLink}\r\n            to=\"/Login\"\r\n          >\r\n            Login\r\n          </Button>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n  const displayMobile = () => {\r\n    const handleDrawerOpen = () =>\r\n      setState((prevState) => ({ ...prevState, drawerOpen: true }));\r\n    const handleDrawerClose = () =>\r\n      setState((prevState) => ({ ...prevState, drawerOpen: false }));\r\n\r\n    return (\r\n      <Toolbar>\r\n        <IconButton\r\n          {...{\r\n            edge: \"start\",\r\n            color: \"inherit\",\r\n            \"aria-label\": \"menu\",\r\n            \"aria-haspopup\": \"true\",\r\n            onClick: handleDrawerOpen,\r\n          }}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n\r\n        <Drawer\r\n          {...{\r\n            anchor: \"left\",\r\n            open: drawerOpen,\r\n            onClose: handleDrawerClose,\r\n          }}\r\n        >\r\n          <div className={drawerContainer}>{getDrawerChoices()}</div>\r\n        </Drawer>\r\n\r\n        <div>{Logo}</div>\r\n        <div>{searchBar()}</div>\r\n      </Toolbar>\r\n    );\r\n  };\r\n\r\n  const getDrawerChoices = () => {\r\n    return (\r\n      <div>\r\n        {leftMenu.map((e) => {\r\n          return (\r\n            <Link\r\n              {...{\r\n                component: RouterLink,\r\n                to: e.link,\r\n                color: \"inherit\",\r\n                style: { textDecoration: \"none\" },\r\n                key: e.title,\r\n              }}\r\n            >\r\n              <MenuItem>{e.title}</MenuItem>\r\n            </Link>\r\n          );\r\n        })}\r\n        <Divider />\r\n        {context.user ? (\r\n          <List>\r\n            <MenuItem>Profile</MenuItem>\r\n\r\n            <MenuItem component={Button} onClick={() => context.logout()}>\r\n              Logout\r\n            </MenuItem>\r\n          </List>\r\n        ) : (\r\n          <Link\r\n            {...{\r\n              component: RouterLink,\r\n              to: \"/Login\",\r\n              color: \"inherit\",\r\n              style: { textDecoration: \"none\" },\r\n              key: \"Login\",\r\n            }}\r\n          >\r\n            <MenuItem>Login</MenuItem>\r\n          </Link>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const Logo = (\r\n    <Typography variant=\"h6\" component=\"h1\" className={logo}>\r\n      Alpha+\r\n    </Typography>\r\n  );\r\n\r\n  const getLeftMenu = () => {\r\n    return leftMenu.map((e) => {\r\n      return (\r\n        <Button\r\n          {...{\r\n            key: e.title,\r\n            color: \"inherit\",\r\n            to: e.link,\r\n            component: RouterLink,\r\n            className: menuButton,\r\n          }}\r\n        >\r\n          {e.title}\r\n        </Button>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar className={header} position=\"static\">\r\n        {mobileView ? displayMobile() : displayDesktop()}\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\Portfolio.js",["217","218","219","220","221","222"],"import React, { useState, useEffect } from \"react\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { HomeCard } from \"./Home\";\r\nimport { Button, Grid, Paper, Avatar, Divider } from \"@material-ui/core\";\r\n\r\nimport {\r\n  CompanyCardLine,\r\n  BigMiniCompanyCardTable,\r\n} from \"../components/Company/CompanyCard\";\r\nimport { Height } from \"@material-ui/icons\";\r\n\r\n// import {\r\n//   ContentCard,\r\n//   ContentCardPaper,\r\n// } from \"../components/Content/ContentCards\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  rootCom: {\r\n    // width: \"100%\",\r\n    paddingTop: theme.spacing(2),\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1),\r\n      marginRight: theme.spacing(3),\r\n      marginLeft: theme.spacing(3),\r\n    },\r\n  },\r\n\r\n  paper1: {\r\n    // width: \"100%\",\r\n    paddingBottom: theme.spacing(2),\r\n    marginTop: theme.spacing(1),\r\n    paddingTop: theme.spacing(1),\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      paddingLeft: theme.spacing(6.5),\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n  },\r\n\r\n  paper2: {\r\n    // width: \"100%\",\r\n\r\n    marginTop: theme.spacing(1),\r\n    paddingTop: theme.spacing(3),\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      paddingLeft: theme.spacing(6.5),\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n  },\r\n\r\n  AddEditBtn: {\r\n    marginTop: theme.spacing(2.5),\r\n  },\r\n\r\n  compCardLine: {\r\n    marginBottom: theme.spacing(6.3),\r\n  },\r\n\r\n  BtnsTypo: {\r\n    fontWeight: theme.typography.fontWeightBold,\r\n  },\r\n  avatar2: {\r\n    width: theme.spacing(9.3),\r\n    height: theme.spacing(9.3),\r\n\r\n    // [theme.breakpoints.between('sm', 'xl')]: {\r\n    //    width: theme.spacing(5.75),\r\n    //    height: theme.spacing(5.75),\r\n    // },\r\n  },\r\n\r\n  titleTypo: {\r\n    fontSize: \"24px\",\r\n  },\r\n\r\n  numberOfCommTypo: {\r\n    fontSize: \"16px\",\r\n    color: \"grey\",\r\n  },\r\n\r\n  labelTypo: {\r\n    fontSize: \"34px\",\r\n    color: \"grey\",\r\n  },\r\n\r\n  divForm: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst img = \"avatars/7.jpg\";\r\n\r\nconst ArticlesDocs = [\r\n  {\r\n    avatar: img,\r\n    title:\r\n      \"Amazon And Disney Move Sports Streaming Down The Field As NFL Finalizes New Deals\",\r\n    editors: \"Editors' PickScott Galloway\",\r\n    numberOfComm: \"18 Comments\",\r\n  },\r\n  {\r\n    avatar: img,\r\n    title:\r\n      \"Amazon And Disney Move Sports Streaming Down The Field As NFL Finalizes New Deals\",\r\n    editors: \"Editors' PickScott Galloway\",\r\n    numberOfComm: \"18 Comments\",\r\n  },\r\n  {\r\n    avatar: img,\r\n    title:\r\n      \"Amazon And Disney Move Sports Streaming Down The Field As NFL Finalizes New Deals\",\r\n    editors: \"Editors' PickScott Galloway\",\r\n    numberOfComm: \"18 Comments\",\r\n  },\r\n  {\r\n    avatar: img,\r\n    title:\r\n      \"Amazon And Disney Move Sports Streaming Down The Field As NFL Finalizes New Deals\",\r\n    editors: \"Editors' PickScott Galloway\",\r\n    numberOfComm: \"18 Comments\",\r\n  },\r\n  {\r\n    avatar: img,\r\n    title:\r\n      \"Amazon And Disney Move Sports Streaming Down The Field As NFL Finalizes New Deals\",\r\n    editors: \"Editors' PickScott Galloway\",\r\n    numberOfComm: \"18 Comments\",\r\n  },\r\n];\r\n\r\nfunction Portfolio() {\r\n  const classes = useStyles();\r\n\r\n  const Articles = (ArticlesDocs) =>\r\n  ArticlesDocs.map((v) => (\r\n      <ArticlesForm\r\n        editors={v.editors}\r\n        numberOfComm={v.numberOfComm}\r\n        title={v.title}\r\n        avatar={v.avatar}\r\n      />\r\n    ));\r\n\r\n  return (\r\n    <div className={classes.rootCom}>\r\n      {/* Compnany line + 2 Content cards  */}\r\n\r\n      <Paper className={classes.paper1}>\r\n        <Grid container direction=\"column\">\r\n          {/* Company Line */}\r\n\r\n          <CompanyCardLine data={companydummyData} />\r\n\r\n          <Grid item xs>\r\n            <BigMiniCompanyCardTable\r\n              data={BigsimilarCompanydummyData}\r\n              limit={4}\r\n              minWidth={400}\r\n            />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            direction=\"row\"\r\n            alignItems\r\n            justify=\"flex-end\"\r\n            spacing=\"1\"\r\n          >\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                // style={{color:\"\"}}\r\n                className={classes.AddEditBtn}\r\n                startIcon={<CreateIcon />}\r\n              >\r\n                Edit Portfolio\r\n              </Button>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.AddEditBtn}\r\n                startIcon={<AddIcon />}\r\n              >\r\n                Add Company\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n\r\n      <Paper className={classes.paper2}>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          // alignItems\r\n          // justify='flex-end'\r\n      \r\n        >\r\n          <Grid\r\n            item\r\n            container\r\n            direction=\"row\"\r\n            // alignItems\r\n            // justify='flex-end'\r\n            xs\r\n          >\r\n            <Grid item>\r\n              {\" \"}\r\n              <Button variant=\"contained\">\r\n                <Typography className={classes.BtnsTypo}>Latest</Typography>\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              {\" \"}\r\n              <Button variant=\"contained\">\r\n                <Typography className={classes.BtnsTypo}>Articles</Typography>\r\n              </Button>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              {\" \"}\r\n              <Button variant=\"contained\">\r\n                <Typography className={classes.BtnsTypo}>News</Typography>\r\n              </Button>\r\n            </Grid>\r\n            \r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Typography className={classes.labelTypo}>Articles</Typography>\r\n          </Grid>\r\n\r\n          <Grid item>{Articles(ArticlesDocs)}</Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Portfolio;\r\n\r\nexport function ArticlesForm(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.divForm}>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        {/* // User Avatar  */}\r\n        <Grid item>\r\n          <Avatar\r\n            className={classes.avatar2}\r\n            alt={props.name}\r\n            src={props.avatar}\r\n          />\r\n        </Grid>\r\n\r\n        {/* // User info  */}\r\n        <Grid\r\n          item\r\n          xs=\"8\"\r\n          container\r\n          alignItems=\"flex-start\"\r\n          justify=\"flex-start\"\r\n          direction=\"column\"\r\n          spacing={0}\r\n        >\r\n          <Grid item>\r\n            {\" \"}\r\n            <Typography className={classes.titleTypo} variant=\"subtitle1\">\r\n              {props.title}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            container\r\n            alignItems=\"flex-start\"\r\n            justify=\"flex-start\"\r\n            direction=\"row\"\r\n            spacing={2}\r\n          >\r\n            <Grid item>\r\n              <Typography\r\n                className={classes.numberOfCommTypo}\r\n                variant=\"subtitle2\"\r\n              >\r\n                {props.editors}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <Typography\r\n                className={classes.numberOfCommTypo}\r\n                variant=\"subtitle2\"\r\n              >\r\n                {props.numberOfComm}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Divider variant=\"middle\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst BigsimilarCompanydummyData = [\r\n  {\r\n    Symbol: \"AAPL\",\r\n    price: 293,\r\n    change: +192,\r\n    changePerce: \" 20%\",\r\n    volume: \"10M\",\r\n    avgVolume: \"10.10M\",\r\n    prevClose: 44,\r\n    open: 121,\r\n  },\r\n  {\r\n    Symbol: \"GOOG\",\r\n    price: 351,\r\n    change: -122,\r\n    changePerce: \" 20%\",\r\n    volume: \"10M\",\r\n    avgVolume: \"10.10M\",\r\n    prevClose: 44,\r\n    open: 121,\r\n  },\r\n  {\r\n    Symbol: \"AMZN\",\r\n    price: 120,\r\n    change: +50,\r\n    changePerce: \" 20%\",\r\n    volume: \"10M\",\r\n    avgVolume: \"10.10M\",\r\n    prevClose: 44,\r\n    open: 121,\r\n  },\r\n  {\r\n    Symbol: \"EBSY\",\r\n    price: 963,\r\n    change: +124,\r\n    changePerce: \" 20%\",\r\n    volume: \"10M\",\r\n    avgVolume: \"10.10M\",\r\n    prevClose: 44,\r\n    open: 121,\r\n  },\r\n  {\r\n    Symbol: \"MOZA\",\r\n    price: 56,\r\n    change: -56,\r\n    changePerce: \" 20%\",\r\n    volume: \"10M\",\r\n    avgVolume: \"10.10M\",\r\n    prevClose: 44,\r\n    open: 121,\r\n  },\r\n  {\r\n    Symbol: \"NANI\",\r\n    price: 123,\r\n    change: +21,\r\n    changePerce: \" 20%\",\r\n    volume: \"10M\",\r\n    avgVolume: \"10.10M\",\r\n    prevClose: 44,\r\n    open: 121,\r\n  },\r\n  {\r\n    Symbol: \"AAPL\",\r\n    price: 293,\r\n    change: +192,\r\n    changePerce: \" 20%\",\r\n    volume: \"10M\",\r\n    avgVolume: \"10.10M\",\r\n    prevClose: 44,\r\n    open: 121,\r\n  },\r\n  {\r\n    Symbol: \"GOOG\",\r\n    price: 351,\r\n    change: -122,\r\n    changePerce: \" 20%\",\r\n    volume: \"10M\",\r\n    avgVolume: \"10.10M\",\r\n    prevClose: 44,\r\n    open: 121,\r\n  },\r\n  {\r\n    Symbol: \"AMZN\",\r\n    price: 120,\r\n    change: +50,\r\n    changePerce: \" 20%\",\r\n    volume: \"10M\",\r\n    avgVolume: \"10.10M\",\r\n    prevClose: 44,\r\n    open: 121,\r\n  },\r\n  {\r\n    Symbol: \"EBSY\",\r\n    price: 963,\r\n    change: +124,\r\n    changePerce: \" 20%\",\r\n    volume: \"10M\",\r\n    avgVolume: \"10.10M\",\r\n    prevClose: 44,\r\n    open: 121,\r\n  },\r\n  {\r\n    Symbol: \"MOZA\",\r\n    price: 56,\r\n    change: -56,\r\n    changePerce: \" 20%\",\r\n    volume: \"10M\",\r\n    avgVolume: \"10.10M\",\r\n    prevClose: 44,\r\n    open: 121,\r\n  },\r\n  {\r\n    Symbol: \"NANI\",\r\n    price: 123,\r\n    change: +21,\r\n    changePerce: \" 20%\",\r\n    volume: \"10M\",\r\n    avgVolume: \"10.10M\",\r\n    prevClose: 44,\r\n    open: 121,\r\n  },\r\n];\r\n\r\nconst companydummyData = [\r\n  { Symbol: \"AAPL\", price: 293, changePrice: +192 },\r\n  { Symbol: \"GOOG\", price: 351, changePrice: -122 },\r\n  { Symbol: \"AMZN\", price: 120, changePrice: +50 },\r\n  { Symbol: \"EBSY\", price: 963, changePrice: +124 },\r\n  { Symbol: \"MOZA\", price: 56, changePrice: -56 },\r\n  { Symbol: \"NANI\", price: 123, changePrice: +21 },\r\n  { Symbol: \"AAPL\", price: 293, changePrice: +192 },\r\n  { Symbol: \"GOOG\", price: 351, changePrice: -122 },\r\n  { Symbol: \"AMZN\", price: 120, changePrice: +50 },\r\n  { Symbol: \"EBSY\", price: 963, changePrice: +124 },\r\n  { Symbol: \"MOZA\", price: 56, changePrice: -56 },\r\n  { Symbol: \"NANI\", price: 123, changePrice: +21 },\r\n];\r\n\r\nconst contentdummyData = [\r\n  {\r\n    name: \"jhon Doe\",\r\n    img: \"Jh\",\r\n    title: \"This a test dummy title\",\r\n    bio: \"simpleBio\",\r\n  },\r\n  {\r\n    name: \"Ziad Fnan\",\r\n    img: \"Zi\",\r\n    title: \"Don't Miss This intersting analyst\",\r\n    bio: \"simpleBio\",\r\n  },\r\n  {\r\n    name: \"Abo Motlaq\",\r\n    img: \"AH\",\r\n    title: \"I only love apple products\",\r\n    bio: \"simpleBio\",\r\n  },\r\n  {\r\n    name: \"Aziz Amir\",\r\n    img: \"AA\",\r\n    title: \"Play it cool with your stocks\",\r\n    bio: \"simpleBio\",\r\n  },\r\n  {\r\n    name: \"Saleh Mogren\",\r\n    img: \"SM\",\r\n    title: \"How to write dummy data like a pro\",\r\n    bio: \"simpleBio\",\r\n  },\r\n];\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\profileSetting\\AccountSecurty.js",["223","224","225"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {\r\n    Divider,\r\n    Button,\r\n    Paper,\r\n    Grid,\r\n    Avatar,\r\n    TextField,\r\n    Input,\r\n    InputLabel,\r\n    FormControl,\r\n    Container\r\n\r\n} from '@material-ui/core';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PictureInPictureIcon from '@material-ui/icons/PictureInPicture';\r\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst img = \"avatars/7.jpg\";\r\nconst userInfo = {\r\n    name: \"Jhon Doe\",\r\n    img: img,\r\n    bio: \"Analyst\",\r\n};\r\n\r\nconst drawerWidth = 210;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        [theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n            // marginLeft: theme.spacing(5.13),\r\n\r\n            width: '100%',\r\n        },\r\n        position: 'absolute',\r\n        width: '448px',\r\n        // height: '471px',\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        [theme.breakpoints.between(\"sm\", \"md\")]: {\r\n            width: '448px',\r\n        },\r\n    },\r\n\r\n    root: {\r\n\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    appBar: {\r\n        marginTop: theme.spacing(8),\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            marginTop: theme.spacing(8.5),\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            marginLeft: drawerWidth,\r\n        },\r\n    },\r\n\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    // necessary for content to be below app bar\r\n    //   toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        position: 'absolute',\r\n        width: drawerWidth,\r\n        marginTop: theme.spacing(8.5),\r\n        height: theme.spacing(45.2),\r\n    },\r\n\r\n\r\n    content: {\r\n        flexGrow: 1,\r\n        // padding: theme.spacing(3),\r\n        paddingTop: theme.spacing(7),\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            paddingTop: theme.spacing(8),\r\n        },\r\n    },\r\n\r\n    helpButton: {\r\n        marginLeft: drawerWidth / 6,\r\n        width: theme.spacing(14),\r\n        marginTop: theme.spacing(3.5),\r\n\r\n    },\r\n    profilePaper: {\r\n        width: '100%',\r\n        padding: theme.spacing(5),\r\n        paddingTop: theme.spacing(7),\r\n\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            paddingTop: theme.spacing(13),\r\n\r\n        },\r\n    },\r\n\r\n    avatar: {\r\n        width: theme.spacing(12),\r\n        height: theme.spacing(12),\r\n    },\r\n\r\n    NameTypog: {\r\n        fontWeight: \"bold\",\r\n        fontSize: \"20px\"\r\n    },\r\n\r\n    inputValue: {\r\n        fontSize: \"20px\",\r\n        color: \"grey\"\r\n    },\r\n\r\n    textField: {\r\n        marginRight: theme.spacing(1),\r\n        width: '35ch',\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            marginLeft: theme.spacing(15),\r\n        },\r\n    },\r\n\r\n    textFieldBio: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '35ch',\r\n\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            width: '74ch',\r\n        },\r\n    },\r\n\r\n    ReqEditBtn: {\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            marginTop: theme.spacing(5),\r\n        },\r\n    },\r\n\r\n    ChaRestBtn: {\r\n        width: theme.spacing(12),\r\n        marginLeft: theme.spacing(7),\r\n    },\r\n\r\n\r\n\r\n    CancelBtn: {\r\n        fontSize: '20px',\r\n        fontWeight: '700',\r\n        [theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n            fontSize: '14px',\r\n        },\r\n    },\r\n\r\n    ChPasswordBtn: {\r\n        fontSize: '24px',\r\n        color: 'grey',\r\n        [theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n            fontSize: '16px',\r\n        },\r\n    },\r\n\r\n    ChPasstextField: {\r\n        [theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n            width: '300px'\r\n        },\r\n\r\n        marginTop: theme.spacing(5),\r\n        width: '366px'\r\n    },\r\n\r\n    DoneBtn: {\r\n        width: '320px',\r\n        marginTop: theme.spacing(2.5),\r\n        marginBottom: theme.spacing(2.5),\r\n    },\r\n\r\n    ForgetTypog: {\r\n        color: \"grey\",\r\n        fontWeight: '500',\r\n        fontSize: '14px'\r\n    },\r\n\r\n    ResetHereBtn: {\r\n        color: \"blue\",\r\n        fontWeight: '500',\r\n        fontSize: '14px'\r\n    },\r\n\r\n    PopperPassword: {\r\n        [theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n            width: '100%',\r\n            marginLeft: \"-6px\"\r\n        },\r\n    },\r\n\r\n    textFieldChEmail: {\r\n        width: '42ch',\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            width: '48ch',\r\n        }\r\n    },\r\n\r\n    ChEmailBtn: {\r\n        width: '320px',\r\n        marginTop: theme.spacing(3.5),\r\n        // marginBottom: theme.spacing(2.5),\r\n    }\r\n}));\r\n\r\nfunction AccountSecurty(props) {\r\n    const { window } = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n    const [values, setValues] = React.useState({\r\n        NewPassword: '',\r\n        CurrentPassword: '',\r\n        VerifyPassword: '',\r\n        password: '',\r\n        showPassword: false,\r\n    });\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n    const itemsList = [\r\n        {\r\n            text: \"Profile\",\r\n            icon: <PictureInPictureIcon />,\r\n            onClick: () => history.push(\"/ProfileSetting\")\r\n        },\r\n        {\r\n            text: \"Account Securty\",\r\n            icon: <VerifiedUserIcon />,\r\n            onClick: () => history.push(\"/AccountSecurty\")\r\n        },\r\n    ];\r\n    const { history } = props;\r\n    const drawer = (\r\n        <div>\r\n            <div className={classes.toolbar} />\r\n            <Divider />\r\n            <List>\r\n                {itemsList.map((item, index) => {\r\n\r\n                    const { text, icon, onClick } = item;\r\n                    return (\r\n                        <ListItem button key={text} onClick={onClick}>\r\n                            {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    )\r\n                })}\r\n            </List>\r\n\r\n            <List>\r\n                <ListItem>\r\n                    <Button className={classes.helpButton} variant=\"outlined\">Help</Button></ListItem></List>\r\n        </div>\r\n    );\r\n\r\n    const container = window !== undefined ? () => window().document.body : undefined;\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [openChange, setOpenChange] = React.useState(false);\r\n    const handleOpenChange = () => {\r\n        setOpenChange(true);\r\n    };\r\n    const handleCloseChange = () => {\r\n        setOpenChange(false);\r\n    };\r\n    const [openReset, setOpenReset] = React.useState(false);\r\n    const handleOpenReset = () => {\r\n        setOpenReset(true);\r\n    };\r\n    const handleCloseReset = () => {\r\n        setOpenReset(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"absolute\" color=\"white\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        edge=\"start\"\r\n                        onClick={handleDrawerToggle}\r\n                        className={classes.menuButton}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h5\" noWrap>\r\n                        Account Securty\r\n          </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Drawer\r\n                        container={container}\r\n                        variant=\"temporary\"\r\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                        open={mobileOpen}\r\n                        onClose={handleDrawerToggle}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true, // Better open performance on mobile.\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        variant=\"permanent\"\r\n                        open\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n            <main className={classes.content}>\r\n                <div />\r\n                <Paper className={classes.profilePaper} elevation={0}>\r\n                    <Grid item xs\r\n                        container\r\n                        direction=\"column\"\r\n                        justify='flex-start'\r\n                        alignItems='center'\r\n                        spacing={7}\r\n                    >\r\n                        <Grid item\r\n                            container\r\n                            direction=\"row\"\r\n                            justify='flex-start'\r\n                            alignItems='flex-end'\r\n                            spacing={2}\r\n                        >\r\n\r\n                            <Grid item>\r\n                                <TextField\r\n                                    label=\"Email\"\r\n                                    id=\"margin-none\"\r\n                                    InputProps={{\r\n                                        readOnly: true,\r\n                                    }}\r\n                                    defaultValue=\"UserEmail@gmail.com\"\r\n                                    // defaultValue=\"\"\r\n                                    className={classes.textField}\r\n                                // helperText=\"Some important text\"\r\n\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n\r\n                                <Button\r\n                                    onClick={handleOpenChange}\r\n\r\n                                    // aria-describedby={idChange}\r\n                                    variant=\"contained\"\r\n                                    size=\"medium\"\r\n                                    color=\"primary\"\r\n                                    className={classes.ChaRestBtn} >\r\n                                    Change\r\n                                 </Button>\r\n\r\n                                <Modal\r\n                                    disablePortal\r\n                                    disableEnforceFocus\r\n                                    disableAutoFocus\r\n\r\n\r\n                                    open={openChange}\r\n                                    onClose={handleCloseChange}\r\n                                    aria-labelledby=\"simple-modal-title\"\r\n                                    aria-describedby=\"simple-modal-description\"\r\n                                >\r\n\r\n\r\n                                    <div style={modalStyle} className={classes.paper}>\r\n\r\n                                        <Grid item\r\n                                            container\r\n                                            direction=\"column\"\r\n                                            justify='flex-start'\r\n                                            alignItems='center'\r\n                                            spacing={6}\r\n                                        >\r\n\r\n                                            <Grid item\r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justify='flex-start'\r\n                                                alignItems='flex-start'\r\n                                                spacing={10}\r\n                                            >\r\n                                                <Grid item><Typography className={classes.ChPasswordBtn}>Change password</Typography></Grid>\r\n                                                <Grid item> <Button onClick={handleCloseChange}><Typography className={classes.CancelBtn}>Cancel</Typography></Button></Grid>\r\n\r\n                                            </Grid>\r\n\r\n                                            <Grid item>\r\n                                                <TextField\r\n                                                    label=\"New Email\"\r\n                                                    id=\"margin-none\"\r\n                                                    // defaultValue=\"\"\r\n                                                    className={classes.textFieldChEmail}\r\n                                                />\r\n                                            </Grid>\r\n\r\n                                            <Grid item>\r\n                                                <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={classes.ChEmailBtn} >\r\n                                                    Change\r\n                                                  </Button>\r\n                                            </Grid>\r\n\r\n                                        </Grid>\r\n                                    </div>\r\n                                </Modal>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item\r\n                            container\r\n                            direction=\"row\"\r\n                            justify='flex-start'\r\n                            alignItems='flex-end'\r\n                            spacing={2}\r\n                        >\r\n\r\n                            <Grid item>\r\n                                <TextField\r\n                                    label=\"Password\"\r\n                                    id=\"margin-none\"\r\n                                    type=\"password\"\r\n                                    defaultValue=\"11111111\"\r\n                                    InputProps={{\r\n                                        readOnly: true,\r\n                                    }}\r\n                                    className={classes.textField}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item>\r\n                                <Button\r\n\r\n                                    onClick={handleOpenReset}\r\n                                    variant=\"contained\"\r\n                                    size=\"medium\"\r\n                                    color=\"primary\"\r\n                                    className={classes.ChaRestBtn} >\r\n                                    Reset\r\n                                </Button>\r\n\r\n\r\n\r\n                                <Modal\r\n                                    disablePortal\r\n                                    disableEnforceFocus\r\n                                    disableAutoFocus\r\n\r\n\r\n                                    open={openReset}\r\n                                    onClose={handleCloseReset}\r\n                                    aria-labelledby=\"simple-modal-title\"\r\n                                    aria-describedby=\"simple-modal-description\"\r\n                                >\r\n\r\n\r\n                                    <div style={modalStyle} className={classes.paper}>\r\n\r\n                                        <Grid item\r\n                                            container\r\n                                            direction=\"column\"\r\n                                            justify='flex-start'\r\n                                            alignItems='center'\r\n                                            spacing={2}\r\n                                        >\r\n\r\n                                            <Grid item\r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justify='flex-start'\r\n                                                alignItems='flex-start'\r\n                                                spacing={10}\r\n                                            >\r\n                                                <Grid item><Typography className={classes.ChPasswordBtn}>Change password</Typography></Grid>\r\n                                                <Grid item> <Button onClick={handleCloseReset}><Typography className={classes.CancelBtn}>Cancel</Typography></Button></Grid>\r\n\r\n                                            </Grid>\r\n\r\n                                            <Grid item>\r\n                                                <FormControl >\r\n                                                    <InputLabel htmlFor=\"standard-adornment-password\">Enter current password</InputLabel>\r\n                                                    <Input\r\n                                                        className={classes.ChPasstextField}\r\n                                                        id=\"standard-adornment-password\"\r\n                                                        type={values.showPassword ? 'text' : 'password'}\r\n                                                        value={values.CurrentPassword}\r\n                                                        onChange={handleChange('CurrentPassword')}\r\n                                                        endAdornment={\r\n                                                            <InputAdornment>\r\n                                                                <IconButton\r\n                                                                    aria-label=\"toggle password visibility\"\r\n                                                                    onClick={handleClickShowPassword}\r\n                                                                    onMouseDown={handleMouseDownPassword}\r\n                                                                    edge=\"end\"\r\n                                                                >\r\n                                                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                                </IconButton>\r\n                                                            </InputAdornment>\r\n                                                        }\r\n                                                    />\r\n                                                </FormControl>\r\n                                            </Grid>\r\n\r\n                                            <Grid item>\r\n\r\n                                                <FormControl >\r\n                                                    <InputLabel htmlFor=\"standard-adornment-password\">Enter new password</InputLabel>\r\n                                                    <Input\r\n                                                        className={classes.ChPasstextField}\r\n                                                        id=\"standard-adornment-password\"\r\n                                                        type={values.showPassword ? 'text' : 'password'}\r\n                                                        value={values.NewPassword}\r\n                                                        onChange={handleChange('NewPassword')}\r\n                                                        endAdornment={\r\n                                                            <InputAdornment>\r\n                                                                <IconButton\r\n                                                                    aria-label=\"toggle password visibility\"\r\n                                                                    onClick={handleClickShowPassword}\r\n                                                                    onMouseDown={handleMouseDownPassword}\r\n                                                                    edge=\"end\"\r\n                                                                >\r\n                                                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                                </IconButton>\r\n                                                            </InputAdornment>\r\n                                                        }\r\n                                                    />\r\n                                                </FormControl>\r\n                                            </Grid>\r\n\r\n                                            <Grid item>\r\n\r\n                                                <FormControl >\r\n                                                    <InputLabel htmlFor=\"standard-adornment-password\"> Verify password</InputLabel>\r\n                                                    <Input\r\n                                                        className={classes.ChPasstextField}\r\n                                                        id=\"standard-adornment-password\"\r\n                                                        type={values.showPassword ? 'text' : 'password'}\r\n                                                        value={values.VerifyPassword}\r\n                                                        onChange={handleChange('VerifyPassword')}\r\n                                                        endAdornment={\r\n                                                            <InputAdornment>\r\n                                                                <IconButton\r\n                                                                    aria-label=\"toggle password visibility\"\r\n                                                                    onClick={handleClickShowPassword}\r\n                                                                    onMouseDown={handleMouseDownPassword}\r\n                                                                    edge=\"end\"\r\n                                                                >\r\n                                                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                                </IconButton>\r\n                                                            </InputAdornment>\r\n                                                        }\r\n                                                    />\r\n                                                </FormControl>\r\n\r\n                                            </Grid>\r\n\r\n                                            <Grid item>\r\n                                                <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={classes.DoneBtn} >\r\n                                                    Done\r\n                                                  </Button>\r\n\r\n                                            </Grid>\r\n\r\n                                            <Container>  <Divider variant=\"middle\" /> </Container>\r\n\r\n                                            <Grid item\r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justify='center'\r\n                                                alignItems='center'\r\n                                                spacing={0}\r\n                                            >\r\n                                                <Grid item>    <Typography className={classes.ForgetTypog}>Forget Password?</Typography></Grid>\r\n                                                <Grid item> <Button className={classes.ResetHereBtn}>Reset here</Button></Grid>\r\n\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </div>\r\n                                </Modal>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nAccountSecurty.propTypes = {\r\n\r\n    window: PropTypes.func,\r\n};\r\nexport default AccountSecurty","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\views\\profileSetting\\ProfileSetting.js",["226"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {\r\n    Divider,\r\n    Button,\r\n    Paper,\r\n    Grid,\r\n    Avatar,\r\n    TextField,\r\n\r\n} from '@material-ui/core';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PictureInPictureIcon from '@material-ui/icons/PictureInPicture';\r\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nconst img = \"avatars/7.jpg\";\r\nconst userInfo = {\r\n    name: \"Jhon Doe\",\r\n    img: img,\r\n    bio: \"Analyst\",\r\n};\r\nconst drawerWidth = 210;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n\r\n    drawer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n\r\n    appBar: {\r\n        marginTop: theme.spacing(8),\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            marginTop: theme.spacing(8.5),\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            marginLeft: drawerWidth,\r\n        },\r\n    },\r\n\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    // necessary for content to be below app bar\r\n    //   toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        position: 'absolute',\r\n        width: drawerWidth,\r\n        marginTop: theme.spacing(8.5),\r\n        height: theme.spacing(65.5),\r\n    },\r\n\r\n    content: {\r\n        flexGrow: 1,\r\n        // padding: theme.spacing(3),\r\n        paddingTop: theme.spacing(7),\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            paddingTop: theme.spacing(8),\r\n        },\r\n    },\r\n\r\n    helpButton: {\r\n        marginLeft: drawerWidth / 6,\r\n        width: theme.spacing(14),\r\n        marginTop: theme.spacing(3.5),\r\n\r\n    },\r\n\r\n    profilePaper: {\r\n        width: '100%',\r\n        padding: theme.spacing(5),\r\n        paddingTop: theme.spacing(7)\r\n\r\n    },\r\n\r\n    avatar: {\r\n        width: theme.spacing(12),\r\n        height: theme.spacing(12),\r\n    },\r\n\r\n    NameTypog: {\r\n        fontWeight: \"bold\",\r\n        fontSize: \"20px\"\r\n    },\r\n\r\n    inputValue: {\r\n        fontSize: \"20px\",\r\n        color: \"grey\"\r\n    },\r\n\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '35ch',\r\n    },\r\n\r\n    textFieldBio: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '35ch',\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            width: '74ch',\r\n        },\r\n    },\r\n\r\n    ReqEditBtn: {\r\n        [theme.breakpoints.between(\"md\", \"xl\")]: {\r\n            marginTop: theme.spacing(5),\r\n        },\r\n    }\r\n\r\n}));\r\n\r\nfunction ProfileSetting(props) {\r\n    const { window } = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n\r\n    const itemsList = [\r\n        {\r\n            text: \"Profile\",\r\n            icon: <PictureInPictureIcon />,\r\n            onClick: () => history.push(\"/ProfileSetting\")\r\n        },\r\n        {\r\n            text: \"Account Securty\",\r\n            icon: <VerifiedUserIcon />,\r\n            onClick: () => history.push(\"/AccountSecurty\")\r\n        },\r\n\r\n    ];\r\n\r\n    const { history } = props;\r\n    const drawer = (\r\n        <div>\r\n            <div className={classes.toolbar} />\r\n            <Divider />\r\n            <List>\r\n                {itemsList.map((item, index) => {\r\n\r\n                    const { text, icon, onClick } = item;\r\n                    return (\r\n                        <ListItem button key={text} onClick={onClick}>\r\n                            {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n\r\n                    )\r\n                })}\r\n            </List>\r\n            <List>\r\n                <ListItem>\r\n                    <Button className={classes.helpButton} variant=\"outlined\">Help</Button></ListItem></List>\r\n        </div>\r\n    );\r\n\r\n    const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"absolute\" color=\"white\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        edge=\"start\"\r\n                        onClick={handleDrawerToggle}\r\n                        className={classes.menuButton}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h5\" noWrap>\r\n                        Profile\r\n          </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Drawer\r\n                        container={container}\r\n                        variant='temporary'\r\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                        open={mobileOpen}\r\n                        onClose={handleDrawerToggle}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true, // Better open performance on mobile.\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        variant=\"permanent\"\r\n                        open\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n            <main className={classes.content}>\r\n                <div />\r\n                <Paper className={classes.profilePaper} elevation={0}>\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify='center'\r\n                        alignItems=\"flex-start\"\r\n                        spacing={6}\r\n                    >\r\n\r\n                        <Grid item>\r\n                            <Avatar className={classes.avatar} alt={props.name} src={\"\"} />\r\n                        </Grid>\r\n\r\n                        <Grid item xs\r\n                            container\r\n                            direction=\"column\"\r\n                            justify='flex-start'\r\n                            alignItems=\"flex-start\"\r\n                            spacing={3}\r\n                        >\r\n\r\n                            <Grid item\r\n                                container\r\n                                direction=\"row\"\r\n                                justify='flex-start'\r\n                                alignItems=\"center\"\r\n                                spacing={3}>\r\n\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        label=\"First name\"\r\n                                        id=\"margin-none\"\r\n                                        // defaultValue=\"\"\r\n                                        className={classes.textField}\r\n                                    />\r\n                                </Grid>\r\n\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        label=\"Last name\"\r\n                                        id=\"margin-normal\"\r\n                                        // defaultValue=\"\"\r\n                                        className={classes.textField}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid item>\r\n                                <TextField\r\n                                    label=\"Username\"\r\n                                    id=\"margin-normal\"\r\n                                    // defaultValue=\"\"\r\n                                    className={classes.textField}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item>\r\n                                <TextField\r\n                                    className={classes.textFieldBio}\r\n                                    id=\"standard-multiline-flexible\"\r\n                                    label=\"Bio\"\r\n                                    multiline\r\n                                    rowsMax={4}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item\r\n                                container\r\n                                direction=\"row\"\r\n                                justify='flex-start'\r\n                                alignItems=\"center\"\r\n                                spacing={3}>\r\n\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        label=\"Compony\"\r\n                                        id=\"margin-none\"\r\n                                        // defaultValue=\"\"\r\n                                        className={classes.textField}\r\n                                    />\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        label=\"Linkedin\"\r\n                                        id=\"margin-normal\"\r\n                                        // defaultValue=\"\"\r\n                                        className={classes.textField}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid item\r\n                                container\r\n                                direction=\"row\"\r\n                                justify='flex-start'\r\n                                alignItems='flex-end'\r\n                                spacing={1}>\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={classes.ReqEditBtn}>\r\n                                        Request To Be Analyst\r\n                                </Button>\r\n                                </Grid>\r\n\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={classes.ReqEditBtn}>\r\n                                        Edit\r\n                                </Button>\r\n                                </Grid>\r\n\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nProfileSetting.propTypes = {\r\n\r\n    window: PropTypes.func,\r\n};\r\nexport default ProfileSetting","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\UserInfo.js",["227","228","229","230","231","232","233","234","235","236","237","238","239"],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\UI\\messages.js",["240"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport function CustomizedSnackbars(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  //   const handleClick = () => {\r\n  //     setOpen(true);\r\n  //   };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={props.color}>\r\n          {props.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\util\\hooks.js",["241","242"],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\util\\dummyData.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Content\\ContentCards.js",["243","244","245","246","247"],"import React, { useEffect, useState } from \"react\";\r\nimport PropTypes, { func } from \"prop-types\";\r\nimport {\r\n  Avatar,\r\n  ButtonBase,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  Container,\r\n  Card,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginLeft: 0,\r\n    paddingTop: theme.spacing(1),\r\n    paddingLeft: theme.spacing(2),\r\n    \"& hr\": {\r\n      margin: theme.spacing(1),\r\n      alignSelf: \"stretch\",\r\n    },\r\n    alignItems: \"center\",\r\n  },\r\n  title: {\r\n    textDecoration: \"none\",\r\n    \"&:visited\": {\r\n      color: theme.palette.common.black,\r\n    },\r\n    padding: theme.spacing(1),\r\n  },\r\n  cardLayout: {\r\n    marginTop: theme.spacing(2),\r\n    \"& .MuiTypography-h5\": {\r\n      paddingLeft: theme.spacing(2),\r\n      color: theme.palette.grey[700],\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: theme.typography.fontSize,\r\n      marginTop: theme.spacing(4),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction ContentCard(props) {\r\n  const [state, setState] = useState({\r\n    withAuther: false,\r\n    crudOtion: false,\r\n  });\r\n  useEffect(() => {\r\n    if (props.withAuther)\r\n      setState({\r\n        withAuther: props.withAuther,\r\n      });\r\n    if (props.crudOtion)\r\n      setState({\r\n        crudOtion: props.crudOtion,\r\n      });\r\n  }, []);\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        {state.withAuther ? (\r\n          <Grid item>\r\n            <Avatar alt={props.name} src={props.img} />\r\n          </Grid>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n\r\n        {/* // Content info  */}\r\n        <Grid item sm>\r\n          <Grid item container direction=\"column\">\r\n            <Grid item>\r\n              <Typography\r\n                component={RouterLink}\r\n                to={props.link}\r\n                variant=\"h6\"\r\n                className={classes.title}\r\n              >\r\n                {props.title}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\">{props.bio}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {/* // Crud Buttons */}\r\n        {state.crudOtion ? (\r\n          <Grid container item>\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              Edit\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"secondary\">\r\n              Delete\r\n            </Button>\r\n          </Grid>\r\n        ) : null}\r\n      </Grid>\r\n      <Divider variant=\"fullWidth\" />\r\n    </div>\r\n  );\r\n}\r\nContentCard.defaultProps = {\r\n  withAuther: false,\r\n  crudOtion: false,\r\n  link: \"/\",\r\n};\r\nContentCard.propTypes = {\r\n  withAuther: PropTypes.bool,\r\n  crudOtion: PropTypes.bool,\r\n  name: PropTypes.string,\r\n  img: PropTypes.string,\r\n  bio: PropTypes.string,\r\n  title: PropTypes.string,\r\n  link: PropTypes.string,\r\n};\r\nfunction ContentCardPaper(props) {\r\n  const classes = useStyles();\r\n\r\n  const ContentCardsItems = () =>\r\n    props.data.slice(0, props.limit).map((e) => {\r\n      return (\r\n        <ContentCard\r\n          title={e.articleTitle ? e.articleTitle : e.title}\r\n          name={e.articleAuthor ? e.articleAuthor.name : e.name}\r\n          img={e.img}\r\n          bio={e.bio}\r\n          withAuther={props.auther}\r\n          link={`/article/${e.id}`}\r\n        />\r\n      );\r\n    });\r\n  return (\r\n    <div className={classes.cardLayout}>\r\n      <Typography variant=\"h5\">{props.title}</Typography>\r\n      {ContentCardsItems()}\r\n    </div>\r\n  );\r\n}\r\nContentCardPaper.defaultProps = {\r\n  auther: false,\r\n};\r\nContentCardPaper.propTypes = {\r\n  limit: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  auther: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport { ContentCard, ContentCardPaper };\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\homeGql.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Auth\\authGql.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Company\\companyGql.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Content\\articleGql.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Content\\commentGql.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\graphql\\Content\\draftsGql.js",[],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Company\\CompanyCard.js",["248","249","250","251","252","253","254","255","256","257","258","259"],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\AnalystInfo.js",["260","261"],"C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Editor.js",["262","263","264","265","266","267","268","269","270","271"],"import React, { useState } from \"react\";\r\n\r\nimport { useQuill } from \"react-quilljs\";\r\n// or const { useQuill } = require('react-quilljs');\r\n\r\nimport \"quill/dist/quill.snow.css\"; // Add css for snow theme\r\n// or import 'quill/dist/quill.bubble.css'; // Add css for bubble theme\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { gql, useMutation, useQuery } from \"@apollo/client\";\r\nimport { useForm } from \"../util/hooks\";\r\nconst s3SignMutation = gql`\r\n  mutation($filename: String!, $filetype: String!) {\r\n    signS3(filename: $filename, filetype: $filetype) {\r\n      url\r\n      signedRequest\r\n    }\r\n  }\r\n`;\r\nexport function Editor(props) {\r\n  const theme = \"snow\";\r\n  const placeholder = props.placeholder;\r\n\r\n  const modules = {\r\n    toolbar: [\r\n      [\"bold\", \"italic\", \"underline\", \"strike\"], // toggled buttons\r\n      [\"blockquote\", \"code-block\"],\r\n\r\n      [{ header: 1 }, { header: 2 }], // custom button values\r\n      [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n      [{ script: \"sub\" }, { script: \"super\" }], // superscript/subscript\r\n      [{ indent: \"-1\" }, { indent: \"+1\" }], // outdent/indent\r\n      [{ direction: \"rtl\" }], // text direction\r\n\r\n      [{ size: [\"small\", false, \"large\", \"huge\"] }], // custom dropdown\r\n      [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n\r\n      [{ color: [] }, { background: [] }], // dropdown with defaults from theme\r\n      [{ font: [] }],\r\n      [{ align: [] }],\r\n      [\"link\", \"image\", \"video\"],\r\n\r\n      [\"clean\"], // remove formatting button\r\n    ],\r\n  };\r\n  const formats = [\r\n    // Inline\r\n    \"font\",\r\n    \"size\",\r\n    \"bold\",\r\n    \"italic\",\r\n    \"underline\",\r\n    \"strike\",\r\n    // Block\r\n    \"blockquote\",\r\n    \"code-block\",\r\n    \"list\",\r\n    \"bullet\",\r\n    \"indent\",\r\n    \"link\",\r\n    \"direction\",\r\n    \"align\",\r\n    \"header\",\r\n\r\n    //   Embeds\r\n    \"image\",\r\n    \"video\",\r\n  ];\r\n  const { quill, quillRef } = useQuill({\r\n    theme,\r\n    modules,\r\n    formats,\r\n    placeholder,\r\n  });\r\n  const [hasBody, setHasBody] = useState(false);\r\n  const [body, setBody] = useState(\"\");\r\n  const [files, setFiles] = useState([]);\r\n  const [filename, setFileName] = useState();\r\n  const [filetype, setFileType] = useState();\r\n\r\n  // Insert Image(selected by user) to quill\r\n  const insertToEditor = (url) => {\r\n    const range = quill.getSelection();\r\n    quill.insertEmbed(range.index, \"image\", url);\r\n  };\r\n  const [getS3SignedUrl, { loading, data, error }] = useMutation(\r\n    s3SignMutation,\r\n    {\r\n      variables: {\r\n        filename,\r\n        filetype,\r\n      },\r\n    }\r\n  );\r\n\r\n  function getS3SignedUrlCallBack() {\r\n    getS3SignedUrl();\r\n  }\r\n  const uploadToS3 = async (file, signedRequest) => {\r\n    const options = {\r\n      headers: {\r\n        \"Content-Type\": file.type,\r\n      },\r\n    };\r\n    await axios.put(signedRequest, file, options);\r\n  };\r\n  const formatFilename = (filename) => {\r\n    const date = moment().format(\"YYYYMMDD\");\r\n    const randomString = Math.random().toString(36).substring(2, 7);\r\n    const cleanFileName = filename.toLowerCase().replace(/[^a-z0-9]/g, \"-\");\r\n    const newFilename = `${date}-${randomString}-${cleanFileName}`;\r\n    return newFilename.substring(0, 60);\r\n  };\r\n  // Upload Image to Image Server such as AWS S3, Cloudinary, Cloud Storage, etc..\r\n  const saveToServer = async (file) => {\r\n    const body = new FormData();\r\n    body.append(\"file\", file);\r\n    setFileName(formatFilename(file.name));\r\n    setFileType(file.type);\r\n    const res = (await getS3SignedUrl()).data;\r\n\r\n    const response = res.signS3;\r\n    const { signedRequest, url } = response;\r\n    console.log(`signed ${signedRequest}`);\r\n    await uploadToS3(file, signedRequest);\r\n    insertToEditor(url);\r\n  };\r\n  const handleChange = () => {\r\n    if (quill) {\r\n      const html = quill.root.innerHTML;\r\n      // console.log(`${html}`);\r\n      setBody(html.toString());\r\n      console.log(body);\r\n      props.onEditorChange(html);\r\n    }\r\n  };\r\n  // Open Dialog to select Image File\r\n  const selectLocalImage = () => {\r\n    const input = document.createElement(\"input\");\r\n    input.setAttribute(\"type\", \"file\");\r\n    input.setAttribute(\"accept\", \"image/*\");\r\n    input.click();\r\n\r\n    input.onchange = () => {\r\n      const file = input.files[0];\r\n      saveToServer(file);\r\n    };\r\n  };\r\n  React.useEffect(() => {\r\n    if (quill) {\r\n      if (props.body != \"\" && !hasBody) {\r\n        console.log(`assign body`);\r\n\r\n        setHasBody(true);\r\n        const fetchedBody = props.body;\r\n        console.log(fetchedBody);\r\n        quill.clipboard.dangerouslyPasteHTML(fetchedBody);\r\n      } else {\r\n        console.log(`No Body`);\r\n      }\r\n      quill.on(\"editor-change\", () => {\r\n        handleChange();\r\n      });\r\n      // Add custom handler for Image Upload\r\n      quill.getModule(\"toolbar\").addHandler(\"image\", selectLocalImage);\r\n    }\r\n  }, [quill, body]);\r\n  return (\r\n    <div style={{ maxWidth: \"700px\", height: 300, marginBottom: 100 }}>\r\n      <div ref={quillRef} />\r\n    </div>\r\n  );\r\n}\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\components\\Content\\CommentComponents.js",["272","273","274","275"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Container, Grid, Typography, Avatar } from \"@material-ui/core\";\r\nimport { ProtectedRoute } from \"../AuthRoute\";\r\n\r\nconst CommentComponentBody = (props) => {\r\n  return (\r\n    <div style={{ padding: \"16px\" }}>\r\n      <span>\r\n        <Typography variant=\"body1\">{props.body}</Typography>\r\n      </span>\r\n      <span>\r\n        <Typography variant=\"caption\">{props.date}</Typography>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentComponentBody.propTypes = {\r\n  name: PropTypes.string,\r\n  avatr: PropTypes.string,\r\n  date: PropTypes.string,\r\n  body: PropTypes,\r\n};\r\n\r\nexport default CommentComponentBody;\r\n","C:\\My Projects\\alphaplus\\Client\\alpha-p-web\\src\\storage\\cache.js",["276"],"import { InMemoryCache, makeVar } from \"@apollo/client\";\r\n\r\nexport const cache = new InMemoryCache({\r\n  typePolicies: {\r\n    User: {\r\n      fields: {\r\n        isFollowed: {\r\n          // read the reactive variable of the current logged in user\r\n          read(_, { variables }) {\r\n            const id = JSON.stringify(variables.id);\r\n            console.log(id);\r\n            console.log(currentFollwedUsers());\r\n\r\n            const result = currentFollwedUsers().find((v) => {\r\n              return JSON.stringify(v.id) == id;\r\n            });\r\n            return result ? true : false;\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport const currentFollwedUsers = makeVar([]);\r\n",{"ruleId":"277","severity":1,"message":"278","line":2,"column":8,"nodeType":"279","messageId":"280","endLine":2,"endColumn":13},{"ruleId":"277","severity":1,"message":"281","line":7,"column":10,"nodeType":"279","messageId":"280","endLine":7,"endColumn":18},{"ruleId":"282","replacedBy":"283"},{"ruleId":"284","replacedBy":"285"},{"ruleId":"277","severity":1,"message":"286","line":6,"column":3,"nodeType":"279","messageId":"280","endLine":6,"endColumn":16},{"ruleId":"277","severity":1,"message":"287","line":3,"column":3,"nodeType":"279","messageId":"280","endLine":3,"endColumn":13},{"ruleId":"277","severity":1,"message":"288","line":5,"column":3,"nodeType":"279","messageId":"280","endLine":5,"endColumn":9},{"ruleId":"277","severity":1,"message":"289","line":23,"column":28,"nodeType":"279","messageId":"280","endLine":23,"endColumn":37},{"ruleId":"277","severity":1,"message":"290","line":2,"column":8,"nodeType":"279","messageId":"280","endLine":2,"endColumn":14},{"ruleId":"277","severity":1,"message":"291","line":3,"column":8,"nodeType":"279","messageId":"280","endLine":3,"endColumn":13},{"ruleId":"277","severity":1,"message":"292","line":60,"column":19,"nodeType":"279","messageId":"280","endLine":60,"endColumn":29},{"ruleId":"277","severity":1,"message":"293","line":22,"column":3,"nodeType":"279","messageId":"280","endLine":22,"endColumn":14},{"ruleId":"277","severity":1,"message":"294","line":254,"column":7,"nodeType":"279","messageId":"280","endLine":254,"endColumn":23},{"ruleId":"277","severity":1,"message":"295","line":16,"column":8,"nodeType":"279","messageId":"280","endLine":16,"endColumn":18},{"ruleId":"277","severity":1,"message":"296","line":17,"column":8,"nodeType":"279","messageId":"280","endLine":17,"endColumn":19},{"ruleId":"277","severity":1,"message":"292","line":63,"column":19,"nodeType":"279","messageId":"280","endLine":63,"endColumn":29},{"ruleId":"277","severity":1,"message":"297","line":1,"column":17,"nodeType":"279","messageId":"280","endLine":1,"endColumn":26},{"ruleId":"277","severity":1,"message":"298","line":7,"column":10,"nodeType":"279","messageId":"280","endLine":7,"endColumn":14},{"ruleId":"277","severity":1,"message":"299","line":20,"column":23,"nodeType":"279","messageId":"280","endLine":20,"endColumn":35},{"ruleId":"300","severity":1,"message":"301","line":74,"column":15,"nodeType":"302","messageId":"303","endLine":74,"endColumn":17},{"ruleId":"277","severity":1,"message":"304","line":80,"column":10,"nodeType":"279","messageId":"280","endLine":80,"endColumn":15},{"ruleId":"277","severity":1,"message":"305","line":2,"column":8,"nodeType":"279","messageId":"280","endLine":2,"endColumn":17},{"ruleId":"277","severity":1,"message":"306","line":2,"column":21,"nodeType":"279","messageId":"280","endLine":2,"endColumn":25},{"ruleId":"277","severity":1,"message":"307","line":9,"column":3,"nodeType":"279","messageId":"280","endLine":9,"endColumn":13},{"ruleId":"277","severity":1,"message":"308","line":13,"column":3,"nodeType":"279","messageId":"280","endLine":13,"endColumn":17},{"ruleId":"277","severity":1,"message":"309","line":26,"column":21,"nodeType":"279","messageId":"280","endLine":26,"endColumn":31},{"ruleId":"277","severity":1,"message":"310","line":110,"column":7,"nodeType":"279","messageId":"280","endLine":110,"endColumn":19},{"ruleId":"277","severity":1,"message":"311","line":135,"column":50,"nodeType":"279","messageId":"280","endLine":135,"endColumn":55},{"ruleId":"300","severity":1,"message":"312","line":302,"column":28,"nodeType":"302","messageId":"303","endLine":302,"endColumn":30},{"ruleId":"277","severity":1,"message":"313","line":33,"column":7,"nodeType":"279","messageId":"280","endLine":33,"endColumn":24},{"ruleId":"277","severity":1,"message":"314","line":66,"column":7,"nodeType":"279","messageId":"280","endLine":66,"endColumn":24},{"ruleId":"277","severity":1,"message":"315","line":104,"column":7,"nodeType":"279","messageId":"280","endLine":104,"endColumn":20},{"ruleId":"316","severity":1,"message":"317","line":274,"column":1,"nodeType":"318","messageId":"319","endLine":276,"endColumn":2},{"ruleId":"277","severity":1,"message":"320","line":278,"column":9,"nodeType":"279","messageId":"280","endLine":278,"endColumn":14},{"ruleId":"277","severity":1,"message":"305","line":2,"column":8,"nodeType":"279","messageId":"280","endLine":2,"endColumn":17},{"ruleId":"277","severity":1,"message":"321","line":13,"column":10,"nodeType":"279","messageId":"280","endLine":13,"endColumn":26},{"ruleId":"316","severity":1,"message":"317","line":138,"column":1,"nodeType":"318","messageId":"319","endLine":140,"endColumn":2},{"ruleId":"316","severity":1,"message":"317","line":143,"column":1,"nodeType":"318","messageId":"319","endLine":145,"endColumn":2},{"ruleId":"277","severity":1,"message":"322","line":163,"column":7,"nodeType":"279","messageId":"280","endLine":163,"endColumn":30},{"ruleId":"277","severity":1,"message":"323","line":182,"column":7,"nodeType":"279","messageId":"280","endLine":182,"endColumn":25},{"ruleId":"277","severity":1,"message":"297","line":1,"column":39,"nodeType":"279","messageId":"280","endLine":1,"endColumn":48},{"ruleId":"277","severity":1,"message":"324","line":2,"column":10,"nodeType":"279","messageId":"280","endLine":2,"endColumn":19},{"ruleId":"277","severity":1,"message":"325","line":2,"column":29,"nodeType":"279","messageId":"280","endLine":2,"endColumn":39},{"ruleId":"277","severity":1,"message":"326","line":6,"column":3,"nodeType":"279","messageId":"280","endLine":6,"endColumn":8},{"ruleId":"277","severity":1,"message":"327","line":9,"column":3,"nodeType":"279","messageId":"280","endLine":9,"endColumn":10},{"ruleId":"277","severity":1,"message":"307","line":10,"column":3,"nodeType":"279","messageId":"280","endLine":10,"endColumn":13},{"ruleId":"277","severity":1,"message":"328","line":12,"column":3,"nodeType":"279","messageId":"280","endLine":12,"endColumn":9},{"ruleId":"277","severity":1,"message":"329","line":13,"column":3,"nodeType":"279","messageId":"280","endLine":13,"endColumn":12},{"ruleId":"277","severity":1,"message":"308","line":14,"column":3,"nodeType":"279","messageId":"280","endLine":14,"endColumn":17},{"ruleId":"277","severity":1,"message":"298","line":21,"column":10,"nodeType":"279","messageId":"280","endLine":21,"endColumn":14},{"ruleId":"277","severity":1,"message":"330","line":43,"column":9,"nodeType":"279","messageId":"280","endLine":43,"endColumn":16},{"ruleId":"277","severity":1,"message":"331","line":200,"column":9,"nodeType":"279","messageId":"280","endLine":200,"endColumn":18},{"ruleId":"277","severity":1,"message":"332","line":1,"column":17,"nodeType":"279","messageId":"280","endLine":1,"endColumn":25},{"ruleId":"277","severity":1,"message":"297","line":1,"column":27,"nodeType":"279","messageId":"280","endLine":1,"endColumn":36},{"ruleId":"277","severity":1,"message":"298","line":2,"column":10,"nodeType":"279","messageId":"280","endLine":2,"endColumn":14},{"ruleId":"277","severity":1,"message":"333","line":7,"column":10,"nodeType":"279","messageId":"280","endLine":7,"endColumn":18},{"ruleId":"277","severity":1,"message":"334","line":14,"column":10,"nodeType":"279","messageId":"280","endLine":14,"endColumn":16},{"ruleId":"277","severity":1,"message":"335","line":457,"column":7,"nodeType":"279","messageId":"280","endLine":457,"endColumn":23},{"ruleId":"277","severity":1,"message":"328","line":10,"column":5,"nodeType":"279","messageId":"280","endLine":10,"endColumn":11},{"ruleId":"277","severity":1,"message":"336","line":31,"column":8,"nodeType":"279","messageId":"280","endLine":31,"endColumn":14},{"ruleId":"277","severity":1,"message":"337","line":53,"column":7,"nodeType":"279","messageId":"280","endLine":53,"endColumn":15},{"ruleId":"277","severity":1,"message":"337","line":29,"column":7,"nodeType":"279","messageId":"280","endLine":29,"endColumn":15},{"ruleId":"277","severity":1,"message":"332","line":1,"column":17,"nodeType":"279","messageId":"280","endLine":1,"endColumn":25},{"ruleId":"277","severity":1,"message":"297","line":1,"column":39,"nodeType":"279","messageId":"280","endLine":1,"endColumn":48},{"ruleId":"277","severity":1,"message":"338","line":12,"column":30,"nodeType":"279","messageId":"280","endLine":12,"endColumn":38},{"ruleId":"277","severity":1,"message":"299","line":14,"column":10,"nodeType":"279","messageId":"280","endLine":14,"endColumn":22},{"ruleId":"277","severity":1,"message":"339","line":14,"column":24,"nodeType":"279","messageId":"280","endLine":14,"endColumn":35},{"ruleId":"277","severity":1,"message":"340","line":14,"column":37,"nodeType":"279","messageId":"280","endLine":14,"endColumn":45},{"ruleId":"277","severity":1,"message":"341","line":15,"column":10,"nodeType":"279","messageId":"280","endLine":15,"endColumn":25},{"ruleId":"277","severity":1,"message":"342","line":15,"column":27,"nodeType":"279","messageId":"280","endLine":15,"endColumn":38},{"ruleId":"277","severity":1,"message":"343","line":19,"column":7,"nodeType":"279","messageId":"280","endLine":19,"endColumn":10},{"ruleId":"316","severity":1,"message":"317","line":109,"column":1,"nodeType":"318","messageId":"319","endLine":111,"endColumn":2},{"ruleId":"277","severity":1,"message":"344","line":113,"column":9,"nodeType":"279","messageId":"280","endLine":113,"endColumn":16},{"ruleId":"277","severity":1,"message":"345","line":115,"column":11,"nodeType":"279","messageId":"280","endLine":115,"endColumn":15},{"ruleId":"316","severity":1,"message":"317","line":169,"column":1,"nodeType":"318","messageId":"319","endLine":171,"endColumn":2},{"ruleId":"277","severity":1,"message":"346","line":2,"column":8,"nodeType":"279","messageId":"280","endLine":2,"endColumn":14},{"ruleId":"277","severity":1,"message":"347","line":1,"column":10,"nodeType":"279","messageId":"280","endLine":1,"endColumn":13},{"ruleId":"277","severity":1,"message":"348","line":41,"column":24,"nodeType":"279","messageId":"280","endLine":41,"endColumn":31},{"ruleId":"277","severity":1,"message":"306","line":2,"column":21,"nodeType":"279","messageId":"280","endLine":2,"endColumn":25},{"ruleId":"277","severity":1,"message":"307","line":5,"column":3,"nodeType":"279","messageId":"280","endLine":5,"endColumn":13},{"ruleId":"277","severity":1,"message":"289","line":9,"column":3,"nodeType":"279","messageId":"280","endLine":9,"endColumn":12},{"ruleId":"277","severity":1,"message":"349","line":10,"column":3,"nodeType":"279","messageId":"280","endLine":10,"endColumn":7},{"ruleId":"350","severity":1,"message":"351","line":62,"column":6,"nodeType":"352","endLine":62,"endColumn":8,"suggestions":"353"},{"ruleId":"300","severity":1,"message":"301","line":327,"column":41,"nodeType":"302","messageId":"303","endLine":327,"endColumn":43},{"ruleId":"300","severity":1,"message":"301","line":367,"column":41,"nodeType":"302","messageId":"303","endLine":367,"endColumn":43},{"ruleId":"354","severity":1,"message":"355","line":453,"column":22,"nodeType":"356","messageId":"357","endLine":453,"endColumn":23,"suggestions":"358"},{"ruleId":"300","severity":1,"message":"301","line":455,"column":26,"nodeType":"302","messageId":"303","endLine":455,"endColumn":28},{"ruleId":"277","severity":1,"message":"359","line":480,"column":11,"nodeType":"279","messageId":"280","endLine":480,"endColumn":21},{"ruleId":"300","severity":1,"message":"301","line":550,"column":10,"nodeType":"302","messageId":"303","endLine":550,"endColumn":12},{"ruleId":"300","severity":1,"message":"301","line":550,"column":28,"nodeType":"302","messageId":"303","endLine":550,"endColumn":30},{"ruleId":"277","severity":1,"message":"360","line":598,"column":11,"nodeType":"279","messageId":"280","endLine":598,"endColumn":16},{"ruleId":"300","severity":1,"message":"312","line":598,"column":47,"nodeType":"302","messageId":"303","endLine":598,"endColumn":49},{"ruleId":"300","severity":1,"message":"312","line":598,"column":65,"nodeType":"302","messageId":"303","endLine":598,"endColumn":67},{"ruleId":"300","severity":1,"message":"301","line":600,"column":10,"nodeType":"302","messageId":"303","endLine":600,"endColumn":12},{"ruleId":"300","severity":1,"message":"301","line":600,"column":28,"nodeType":"302","messageId":"303","endLine":600,"endColumn":30},{"ruleId":"277","severity":1,"message":"307","line":5,"column":3,"nodeType":"279","messageId":"280","endLine":5,"endColumn":13},{"ruleId":"277","severity":1,"message":"320","line":27,"column":9,"nodeType":"279","messageId":"280","endLine":27,"endColumn":14},{"ruleId":"277","severity":1,"message":"340","line":10,"column":28,"nodeType":"279","messageId":"280","endLine":10,"endColumn":36},{"ruleId":"277","severity":1,"message":"361","line":11,"column":10,"nodeType":"279","messageId":"280","endLine":11,"endColumn":17},{"ruleId":"277","severity":1,"message":"304","line":77,"column":10,"nodeType":"279","messageId":"280","endLine":77,"endColumn":15},{"ruleId":"277","severity":1,"message":"362","line":77,"column":17,"nodeType":"279","messageId":"280","endLine":77,"endColumn":25},{"ruleId":"277","severity":1,"message":"348","line":86,"column":28,"nodeType":"279","messageId":"280","endLine":86,"endColumn":35},{"ruleId":"277","severity":1,"message":"363","line":86,"column":37,"nodeType":"279","messageId":"280","endLine":86,"endColumn":41},{"ruleId":"277","severity":1,"message":"311","line":86,"column":43,"nodeType":"279","messageId":"280","endLine":86,"endColumn":48},{"ruleId":"277","severity":1,"message":"364","line":96,"column":12,"nodeType":"279","messageId":"280","endLine":96,"endColumn":34},{"ruleId":"300","severity":1,"message":"312","line":151,"column":22,"nodeType":"302","messageId":"303","endLine":151,"endColumn":24},{"ruleId":"350","severity":1,"message":"365","line":167,"column":6,"nodeType":"352","endLine":167,"endColumn":19,"suggestions":"366"},{"ruleId":"277","severity":1,"message":"289","line":3,"column":10,"nodeType":"279","messageId":"280","endLine":3,"endColumn":19},{"ruleId":"277","severity":1,"message":"367","line":3,"column":21,"nodeType":"279","messageId":"280","endLine":3,"endColumn":25},{"ruleId":"277","severity":1,"message":"328","line":3,"column":39,"nodeType":"279","messageId":"280","endLine":3,"endColumn":45},{"ruleId":"277","severity":1,"message":"368","line":4,"column":10,"nodeType":"279","messageId":"280","endLine":4,"endColumn":24},{"ruleId":"300","severity":1,"message":"301","line":15,"column":43,"nodeType":"302","messageId":"303","endLine":15,"endColumn":45},"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'Provider' is defined but never used.","no-native-reassign",["369"],"no-negated-in-lhs",["370"],"'InMemoryCache' is defined but never used.","'HashRouter' is defined but never used.","'Switch' is defined but never used.","'Container' is defined but never used.","'purple' is defined but never used.","'green' is defined but never used.","'setSuccess' is assigned a value but never used.","'ContentCard' is defined but never used.","'companydummyData' is assigned a value but never used.","'GoogleIcon' is defined but never used.","'TwitterIcon' is defined but never used.","'useEffect' is defined but never used.","'fade' is defined but never used.","'useLazyQuery' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'files' is assigned a value but never used.","'PropTypes' is defined but never used.","'func' is defined but never used.","'ButtonBase' is defined but never used.","'FormHelperText' is defined but never used.","'useHistory' is defined but never used.","'commentsDocs' is assigned a value but never used.","'error' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'contentdummyData1' is assigned a value but never used.","'contentdummyData2' is assigned a value but never used.","'FollowersDocs' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'state' is assigned a value but never used.","'contentdummyData' is defined but never used.","'similarCompanydummyData' is assigned a value but never used.","'companyFinanceData' is assigned a value but never used.","'useParams' is defined but never used.","'RouterLink' is defined but never used.","'Paper' is defined but never used.","'Divider' is defined but never used.","'Avatar' is defined but never used.","'TextField' is defined but never used.","'context' is assigned a value but never used.","'rightMenu' is assigned a value but never used.","'useState' is defined but never used.","'HomeCard' is defined but never used.","'Height' is defined but never used.","'contentdummyData' is assigned a value but never used.","'Popper' is defined but never used.","'userInfo' is assigned a value but never used.","'Redirect' is defined but never used.","'useMutation' is defined but never used.","'useQuery' is defined but never used.","'FOLLOW_USER_GQL' is defined but never used.","'PROFILE_GQL' is defined but never used.","'img' is assigned a value but never used.","'history' is assigned a value but never used.","'user' is assigned a value but never used.","'Button' is defined but never used.","'gql' is defined but never used.","'loading' is assigned a value but never used.","'Card' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.crudOtion' and 'props.withAuther'. Either include them or remove the dependency array. If 'setState' needs the current value of 'props.withAuther', you can also switch to useReducer instead of useState and read 'props.withAuther' in the reducer.","ArrayExpression",["371"],"no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["372","373"],"'mobileView' is assigned a value but never used.","'array' is assigned a value but never used.","'useForm' is defined but never used.","'setFiles' is assigned a value but never used.","'data' is assigned a value but never used.","'getS3SignedUrlCallBack' is defined but never used.","React Hook React.useEffect has missing dependencies: 'handleChange', 'hasBody', 'props.body', and 'selectLocalImage'. Either include them or remove the dependency array.",["374"],"'Grid' is defined but never used.","'ProtectedRoute' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"375","fix":"376"},{"messageId":"377","fix":"378","desc":"379"},{"messageId":"380","fix":"381","desc":"382"},{"desc":"383","fix":"384"},"Update the dependencies array to be: [props.crudOtion, props.withAuther]",{"range":"385","text":"386"},"removeEscape",{"range":"387","text":"388"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"389","text":"390"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [quill, body, props.body, hasBody, selectLocalImage, handleChange]",{"range":"391","text":"392"},[1444,1446],"[props.crudOtion, props.withAuther]",[12715,12716],"",[12715,12715],"\\",[4829,4842],"[quill, body, props.body, hasBody, selectLocalImage, handleChange]"]