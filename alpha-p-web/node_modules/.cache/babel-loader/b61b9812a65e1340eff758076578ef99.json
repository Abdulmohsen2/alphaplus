{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ziads\\\\Desktop\\\\alphaplus\\\\alpha-p-web\\\\src\\\\Client\\\\End-user\\\\views\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useContext, useState } from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport * as Yup from \"yup\";\nimport { FormInput, FormDevider } from \"../components/FormInput\"; // import { useForm } from \"react-hook-form\";\n\nimport { Button, OutlineButton } from \"../components/Buttons\"; //imagers\n\nimport GoogleIcon from \"../assets/icons/1004px-Google__G__Logo.svg.png\";\nimport TwitterIcon from \"../assets/icons/580b57fcd9996e24bc43c53e.png\"; //graphql\n\nimport { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\"; //auth\n\nimport { AuthContext } from \"../context/auth\";\nimport { useForm } from \"../util/hooks\";\nconst LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      id\n      email\n      username\n      createdAt\n      token\n    }\n  }\n`;\nexport class Login extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\",\n      children: /*#__PURE__*/_jsxDEV(SignInBlock, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nLogin.propTypes = {};\nexport default Login;\n\nfunction SignInBlock() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signInBlock\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Member Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createAccount\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Don't have account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"create account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_c = SignInBlock;\nexport const LoginForm = props => {\n  _s();\n\n  const context = useContext(AuthContext);\n  const [errors, setErrors] = useState({});\n  const {\n    onChange,\n    onSubmit,\n    values\n  } = useForm(loginUserCallback, {\n    username: \"\",\n    password: \"\"\n  });\n  const [loginUser, {\n    loading\n  }] = useMutation(LOGIN_USER, {\n    update(_, {\n      data: {\n        login: userData\n      }\n    }) {\n      context.login(userData);\n      props.history.push(\"/\");\n    },\n\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n\n    variables: values\n  });\n\n  function loginUserCallback() {\n    loginUser();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        id: \"email\",\n        name: \"email\",\n        type: \"email\",\n        placeHolder: \"email\",\n        value: values.email,\n        errors: errors.email,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        id: \"password\",\n        name: \"password\",\n        type: \"password\",\n        placeHolder: \"password\",\n        value: values.password,\n        errors: errors.password,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"remember-forgetpass\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"rememberMe\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"remember me?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Forget Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        title: \"Login\",\n        onClick: () => console.log(\"Pressed\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormDevider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OutlineButton, {\n        color: \"#4285f4\",\n        image: GoogleIcon,\n        onClick: () => console.log(\"Google SignIn\"),\n        title: \"Continue With Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OutlineButton, {\n        color: \"#00A2F5\",\n        image: TwitterIcon,\n        onClick: () => console.log(\"Twitter SignIn\"),\n        title: \"Continue With Twitter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), Object.keys(errors).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui error message\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list\",\n        children: Object.values(errors).map(value => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: value\n        }, value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"exenV4i3hsmyHghAOFiQc3yik/o=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c2 = LoginForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignInBlock\");\n$RefreshReg$(_c2, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/ziads/Desktop/alphaplus/alpha-p-web/src/Client/End-user/views/Login.js"],"names":["React","Component","useContext","useState","Navbar","Yup","FormInput","FormDevider","Button","OutlineButton","GoogleIcon","TwitterIcon","useMutation","gql","AuthContext","useForm","LOGIN_USER","Login","render","propTypes","SignInBlock","LoginForm","props","context","errors","setErrors","onChange","onSubmit","values","loginUserCallback","username","password","loginUser","loading","update","_","data","login","userData","history","push","onError","err","graphQLErrors","extensions","exception","variables","email","console","log","Object","keys","length","map","value"],"mappings":"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","sourcesContent":["import React, { Component, useContext, useState } from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport * as Yup from \"yup\";\r\nimport { FormInput, FormDevider } from \"../components/FormInput\";\r\n// import { useForm } from \"react-hook-form\";\r\nimport { Button, OutlineButton } from \"../components/Buttons\";\r\n//imagers\r\nimport GoogleIcon from \"../assets/icons/1004px-Google__G__Logo.svg.png\";\r\nimport TwitterIcon from \"../assets/icons/580b57fcd9996e24bc43c53e.png\";\r\n//graphql\r\nimport { useMutation } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\n\r\n//auth\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { useForm } from \"../util/hooks\";\r\n\r\n\r\n\r\nconst LOGIN_USER = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      id\r\n      email\r\n      username\r\n      createdAt\r\n      token\r\n    }\r\n  }\r\n`;\r\nexport class Login extends Component {\r\n  static propTypes = {};\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"background\">\r\n        {/* <Navbar /> */}\r\n        <SignInBlock />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n\r\nfunction SignInBlock() {\r\n  return (\r\n    <div className=\"signInBlock\">\r\n      <h2>Member Sign In</h2>\r\n      <LoginForm />\r\n      <div className=\"createAccount\">\r\n        <p>Don't have account?</p>\r\n        <a href=\"#\">\r\n          <p>create account</p>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const LoginForm = (props) => {\r\n  const context = useContext(AuthContext);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { onChange, onSubmit, values } = useForm(loginUserCallback, {\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\r\n    update(_, { data: { login: userData } }) {\r\n      context.login(userData);\r\n      props.history.push(\"/\");\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values,\r\n  });\r\n\r\n  function loginUserCallback() {\r\n    loginUser();\r\n  }\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <FormInput\r\n          id=\"email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeHolder=\"email\"\r\n          value={values.email}\r\n          errors={errors.email}\r\n          onChange = {onChange}\r\n        />\r\n        <FormInput\r\n          id=\"password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeHolder=\"password\"\r\n          value={values.password}\r\n          errors={errors.password}\r\n          onChange = {onChange}\r\n        />\r\n        <span className=\"remember-forgetpass\">\r\n          <span className=\"rememberMe\">\r\n            <input type=\"checkbox\" />\r\n            <span>remember me?</span>\r\n          </span>\r\n          <a href=\"#\">Forget Password</a>\r\n        </span>\r\n        <Button\r\n          type=\"submit\"\r\n          title=\"Login\"\r\n          onClick={() => console.log(\"Pressed\")}\r\n        />\r\n        <FormDevider />\r\n\r\n        <OutlineButton\r\n          color={\"#4285f4\"}\r\n          image={GoogleIcon}\r\n          onClick={() => console.log(\"Google SignIn\")}\r\n          title=\"Continue With Google\"\r\n        />\r\n        <OutlineButton\r\n          color={\"#00A2F5\"}\r\n          image={TwitterIcon}\r\n          onClick={() => console.log(\"Twitter SignIn\")}\r\n          title=\"Continue With Twitter\"\r\n        />\r\n      </form>\r\n      {Object.keys(errors).length > 0 && (\r\n        <div className=\"ui error message\">\r\n          <ul className=\"list\">\r\n            {Object.values(errors).map((value) => (\r\n              <li key={value}>{value}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}